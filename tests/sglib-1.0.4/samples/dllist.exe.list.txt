;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2009 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-313D-7374-F1			    |
; |   Aditya Thakur, University	of Wisconsin/Computer Sciences Department   |
; +-------------------------------------------------------------------------+
;
.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00401000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.text:00401000 ; |			License	info: 48-313D-7374-F1			   |
.text:00401000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input MD5   : 1360AE26F30B2E7A715188984C35B292
.text:00401000
.text:00401000 ; File Name   : C:\aditya\work\waldo\tests\sglib-1.0.4\samples\dllist.exe
.text:00401000 ; Format	     : Portable	executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size		       : 00001448 (   5192.)
.text:00401000 ; Section size in file	       : 00001600 (   5632.)
.text:00401000 ; Offset	to raw data for	section: 00000400
.text:00401000 ; Flags 60500060: Text Data Executable Readable
.text:00401000 ; Alignment     : 16 bytes
.text:00401000
.text:00401000		       .686p
.text:00401000		       .mmx
.text:00401000		       .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text	       segment para public 'CODE' use32
.text:00401000		       assume cs:_text
.text:00401000		       ;org 401000h
.text:00401000		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: bp-based frame
.text:00401000
.text:00401000		       public start
.text:00401000 start	       proc near
.text:00401000
.text:00401000 var_28	       = dword ptr -28h
.text:00401000 var_24	       = dword ptr -24h
.text:00401000 var_20	       = dword ptr -20h
.text:00401000 var_2	       = word ptr -2
.text:00401000
.text:00401000		       push    ebp
.text:00401001		       mov     ebp, esp
.text:00401003		       sub     esp, 28h
.text:00401006		       and     esp, 0FFFFFFF0h
.text:00401009		       fnstcw  [ebp+var_2]
.text:0040100C		       movzx   eax, [ebp+var_2]
.text:00401010		       and     ax, 0F0C0h
.text:00401014		       mov     [ebp+var_2], ax
.text:00401018		       movzx   eax, [ebp+var_2]
.text:0040101C		       or      ax, 33Fh
.text:00401020		       mov     [ebp+var_2], ax
.text:00401024		       fldcw   [ebp+var_2]
.text:00401027		       mov     [esp+28h+var_28], offset	sub_401D24
.text:0040102E		       call    sub_401E90
.text:00401033		       mov     [esp+28h+var_20], 0
.text:0040103B		       mov     [esp+28h+var_24], 0
.text:00401043		       mov     [esp+28h+var_28], 0
.text:0040104A		       call    sub_401EC0
.text:0040104F		       mov     [esp+28h+var_20], 0
.text:00401057		       mov     [esp+28h+var_24], 0
.text:0040105F		       mov     [esp+28h+var_28], 0
.text:00401066		       call    sub_401ED0
.text:0040106B		       mov     [esp+28h+var_20], 0
.text:00401073		       mov     [esp+28h+var_24], 0
.text:0040107B		       mov     [esp+28h+var_28], 0
.text:00401082		       call    sub_401EE0
.text:00401087		       mov     [esp+28h+var_20], 0
.text:0040108F		       mov     [esp+28h+var_24], 0
.text:00401097		       mov     [esp+28h+var_28], 0
.text:0040109E		       call    sub_401EF0
.text:004010A3		       leave
.text:004010A4		       retn
.text:004010A4 start	       endp
.text:004010A4
.text:004010A4 ; ---------------------------------------------------------------------------
.text:004010A5		       align 10h
.text:004010B0
.text:004010B0 loc_4010B0:			       ; CODE XREF: .text:00402414j
.text:004010B0		       push    ebp
.text:004010B1		       mov     ebp, esp
.text:004010B3		       sub     esp, 8
.text:004010B6		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:004010BD		       call    GetModuleHandleA
.text:004010C2		       sub     esp, 4
.text:004010C5		       test    eax, eax
.text:004010C7		       jz      short loc_401130
.text:004010C9		       mov     dword ptr [esp+4], offset a__register_fra ; "__register_frame_info"
.text:004010D1		       mov     [esp], eax
.text:004010D4		       call    GetProcAddress
.text:004010D9		       sub     esp, 8
.text:004010DC		       test    eax, eax
.text:004010DE		       jz      short loc_401130
.text:004010E0
.text:004010E0 loc_4010E0:			       ; CODE XREF: .text:00401139j
.text:004010E0		       mov     dword ptr [esp+4], offset dword_405000
.text:004010E8		       mov     dword ptr [esp],	offset dword_404000
.text:004010EF		       call    eax
.text:004010F1
.text:004010F1 loc_4010F1:			       ; CODE XREF: .text:00401137j
.text:004010F1		       mov     eax, dword_4030A8
.text:004010F6		       test    eax, eax
.text:004010F8		       jz      short locret_40112D
.text:004010FA		       mov     dword ptr [esp],	offset aCyggcj9_dll ; "cyggcj-9.dll"
.text:00401101		       call    GetModuleHandleA
.text:00401106		       sub     esp, 4
.text:00401109		       test    eax, eax
.text:0040110B		       jz      short loc_401140
.text:0040110D		       mov     dword ptr [esp+4], offset a_jv_registercl ; "_Jv_RegisterClasses"
.text:00401115		       mov     [esp], eax
.text:00401118		       call    GetProcAddress
.text:0040111D		       sub     esp, 8
.text:00401120		       test    eax, eax
.text:00401122		       jz      short loc_401140
.text:00401124
.text:00401124 loc_401124:			       ; CODE XREF: .text:00401147j
.text:00401124		       mov     dword ptr [esp],	offset dword_4030A8
.text:0040112B		       call    eax
.text:0040112D
.text:0040112D locret_40112D:			       ; CODE XREF: .text:004010F8j
.text:0040112D		       leave
.text:0040112E		       retn
.text:0040112E ; ---------------------------------------------------------------------------
.text:0040112F		       align 10h
.text:00401130
.text:00401130 loc_401130:			       ; CODE XREF: .text:004010C7j
.text:00401130					       ; .text:004010DEj
.text:00401130		       mov     eax, off_403000
.text:00401135		       test    eax, eax
.text:00401137		       jz      short loc_4010F1
.text:00401139		       jmp     short loc_4010E0
.text:00401139 ; ---------------------------------------------------------------------------
.text:0040113B		       align 10h
.text:00401140
.text:00401140 loc_401140:			       ; CODE XREF: .text:0040110Bj
.text:00401140					       ; .text:00401122j
.text:00401140		       mov     eax, dword_403008
.text:00401145		       test    eax, eax
.text:00401147		       jnz     short loc_401124
.text:00401149		       leave
.text:0040114A		       retn
.text:0040114A ; ---------------------------------------------------------------------------
.text:0040114B		       align 10h
.text:00401150
.text:00401150 loc_401150:			       ; CODE XREF: .text:00402424j
.text:00401150		       push    ebp
.text:00401151		       mov     ebp, esp
.text:00401153		       sub     esp, 8
.text:00401156		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:0040115D		       call    GetModuleHandleA
.text:00401162		       sub     esp, 4
.text:00401165		       test    eax, eax
.text:00401167		       jz      short loc_401190
.text:00401169		       mov     dword ptr [esp+4], offset a__deregister_f ; "__deregister_frame_info"
.text:00401171		       mov     [esp], eax
.text:00401174		       call    GetProcAddress
.text:00401179		       sub     esp, 8
.text:0040117C		       test    eax, eax
.text:0040117E		       jz      short loc_401190
.text:00401180
.text:00401180 loc_401180:			       ; CODE XREF: .text:00401197j
.text:00401180		       mov     dword ptr [esp],	offset dword_404000
.text:00401187		       call    eax
.text:00401189		       leave
.text:0040118A		       retn
.text:0040118A ; ---------------------------------------------------------------------------
.text:0040118B		       align 10h
.text:00401190
.text:00401190 loc_401190:			       ; CODE XREF: .text:00401167j
.text:00401190					       ; .text:0040117Ej
.text:00401190		       mov     eax, off_403004
.text:00401195		       test    eax, eax
.text:00401197		       jnz     short loc_401180
.text:00401199		       leave
.text:0040119A		       retn
.text:0040119A ; ---------------------------------------------------------------------------
.text:0040119B		       align 10h
.text:004011A0
.text:004011A0 ; =============== S U B R O U T I N E =======================================
.text:004011A0
.text:004011A0 ; Attributes: bp-based frame
.text:004011A0
.text:004011A0 sub_4011A0      proc near	       ; CODE XREF: sub_401D24+72p
.text:004011A0
.text:004011A0 arg_0	       = dword ptr  8
.text:004011A0 arg_4	       = dword ptr  0Ch
.text:004011A0
.text:004011A0		       push    ebp
.text:004011A1		       mov     ebp, esp
.text:004011A3		       mov     eax, [ebp+arg_0]
.text:004011A6		       mov     eax, [eax]
.text:004011A8		       test    eax, eax
.text:004011AA		       jnz     short loc_4011CD
.text:004011AC		       mov     edx, [ebp+arg_0]
.text:004011AF		       mov     eax, [ebp+arg_4]
.text:004011B2		       mov     [edx], eax
.text:004011B4		       mov     eax, [ebp+arg_0]
.text:004011B7		       mov     edx, [eax]
.text:004011B9		       mov     eax, [ebp+arg_0]
.text:004011BC		       mov     eax, [eax]
.text:004011BE		       mov     dword ptr [eax+8], 0
.text:004011C5		       mov     eax, [eax+8]
.text:004011C8		       mov     [edx+4],	eax
.text:004011CB		       jmp     short loc_401207
.text:004011CD ; ---------------------------------------------------------------------------
.text:004011CD
.text:004011CD loc_4011CD:			       ; CODE XREF: sub_4011A0+Aj
.text:004011CD		       mov     eax, [ebp+arg_0]
.text:004011D0		       mov     edx, [eax]
.text:004011D2		       mov     eax, [ebp+arg_4]
.text:004011D5		       mov     [eax+4],	edx
.text:004011D8		       mov     eax, [ebp+arg_0]
.text:004011DB		       mov     eax, [eax]
.text:004011DD		       mov     edx, [eax+8]
.text:004011E0		       mov     eax, [ebp+arg_4]
.text:004011E3		       mov     [eax+8],	edx
.text:004011E6		       mov     eax, [ebp+arg_0]
.text:004011E9		       mov     edx, [eax]
.text:004011EB		       mov     eax, [ebp+arg_4]
.text:004011EE		       mov     [edx+8],	eax
.text:004011F1		       mov     eax, [ebp+arg_4]
.text:004011F4		       mov     eax, [eax+8]
.text:004011F7		       test    eax, eax
.text:004011F9		       jz      short loc_401207
.text:004011FB		       mov     eax, [ebp+arg_4]
.text:004011FE		       mov     edx, [eax+8]
.text:00401201		       mov     eax, [ebp+arg_4]
.text:00401204		       mov     [edx+4],	eax
.text:00401207
.text:00401207 loc_401207:			       ; CODE XREF: sub_4011A0+2Bj
.text:00401207					       ; sub_4011A0+59j
.text:00401207		       pop     ebp
.text:00401208		       retn
.text:00401208 sub_4011A0      endp
.text:00401208
.text:00401209 ; ---------------------------------------------------------------------------
.text:00401209		       push    ebp
.text:0040120A		       mov     ebp, esp
.text:0040120C		       mov     eax, [ebp+8]
.text:0040120F		       mov     eax, [eax]
.text:00401211		       test    eax, eax
.text:00401213		       jnz     short loc_401236
.text:00401215		       mov     edx, [ebp+8]
.text:00401218		       mov     eax, [ebp+0Ch]
.text:0040121B		       mov     [edx], eax
.text:0040121D		       mov     eax, [ebp+8]
.text:00401220		       mov     edx, [eax]
.text:00401222		       mov     eax, [ebp+8]
.text:00401225		       mov     eax, [eax]
.text:00401227		       mov     dword ptr [eax+8], 0
.text:0040122E		       mov     eax, [eax+8]
.text:00401231		       mov     [edx+4],	eax
.text:00401234		       jmp     short loc_401270
.text:00401236 ; ---------------------------------------------------------------------------
.text:00401236
.text:00401236 loc_401236:			       ; CODE XREF: .text:00401213j
.text:00401236		       mov     eax, [ebp+8]
.text:00401239		       mov     eax, [eax]
.text:0040123B		       mov     edx, [eax+4]
.text:0040123E		       mov     eax, [ebp+0Ch]
.text:00401241		       mov     [eax+4],	edx
.text:00401244		       mov     eax, [ebp+8]
.text:00401247		       mov     edx, [eax]
.text:00401249		       mov     eax, [ebp+0Ch]
.text:0040124C		       mov     [eax+8],	edx
.text:0040124F		       mov     eax, [ebp+8]
.text:00401252		       mov     edx, [eax]
.text:00401254		       mov     eax, [ebp+0Ch]
.text:00401257		       mov     [edx+4],	eax
.text:0040125A		       mov     eax, [ebp+0Ch]
.text:0040125D		       mov     eax, [eax+4]
.text:00401260		       test    eax, eax
.text:00401262		       jz      short loc_401270
.text:00401264		       mov     eax, [ebp+0Ch]
.text:00401267		       mov     edx, [eax+4]
.text:0040126A		       mov     eax, [ebp+0Ch]
.text:0040126D		       mov     [edx+8],	eax
.text:00401270
.text:00401270 loc_401270:			       ; CODE XREF: .text:00401234j
.text:00401270					       ; .text:00401262j
.text:00401270		       pop     ebp
.text:00401271		       retn
.text:00401272 ; ---------------------------------------------------------------------------
.text:00401272		       push    ebp
.text:00401273		       mov     ebp, esp
.text:00401275		       mov     eax, [ebp+8]
.text:00401278		       mov     eax, [eax]
.text:0040127A		       test    eax, eax
.text:0040127C		       jnz     short loc_40129F
.text:0040127E		       mov     edx, [ebp+8]
.text:00401281		       mov     eax, [ebp+0Ch]
.text:00401284		       mov     [edx], eax
.text:00401286		       mov     eax, [ebp+8]
.text:00401289		       mov     edx, [eax]
.text:0040128B		       mov     eax, [ebp+8]
.text:0040128E		       mov     eax, [eax]
.text:00401290		       mov     dword ptr [eax+8], 0
.text:00401297		       mov     eax, [eax+8]
.text:0040129A		       mov     [edx+4],	eax
.text:0040129D		       jmp     short loc_4012D9
.text:0040129F ; ---------------------------------------------------------------------------
.text:0040129F
.text:0040129F loc_40129F:			       ; CODE XREF: .text:0040127Cj
.text:0040129F		       mov     eax, [ebp+8]
.text:004012A2		       mov     edx, [eax]
.text:004012A4		       mov     eax, [ebp+0Ch]
.text:004012A7		       mov     [eax+4],	edx
.text:004012AA		       mov     eax, [ebp+8]
.text:004012AD		       mov     eax, [eax]
.text:004012AF		       mov     edx, [eax+8]
.text:004012B2		       mov     eax, [ebp+0Ch]
.text:004012B5		       mov     [eax+8],	edx
.text:004012B8		       mov     eax, [ebp+8]
.text:004012BB		       mov     edx, [eax]
.text:004012BD		       mov     eax, [ebp+0Ch]
.text:004012C0		       mov     [edx+8],	eax
.text:004012C3		       mov     eax, [ebp+0Ch]
.text:004012C6		       mov     eax, [eax+8]
.text:004012C9		       test    eax, eax
.text:004012CB		       jz      short loc_4012D9
.text:004012CD		       mov     eax, [ebp+0Ch]
.text:004012D0		       mov     edx, [eax+8]
.text:004012D3		       mov     eax, [ebp+0Ch]
.text:004012D6		       mov     [edx+4],	eax
.text:004012D9
.text:004012D9 loc_4012D9:			       ; CODE XREF: .text:0040129Dj
.text:004012D9					       ; .text:004012CBj
.text:004012D9		       pop     ebp
.text:004012DA		       retn
.text:004012DB ; ---------------------------------------------------------------------------
.text:004012DB		       push    ebp
.text:004012DC		       mov     ebp, esp
.text:004012DE		       sub     esp, 10h
.text:004012E1		       mov     eax, [ebp+8]
.text:004012E4		       mov     eax, [eax]
.text:004012E6		       mov     [ebp-4],	eax
.text:004012E9		       jmp     short loc_4012F4
.text:004012EB ; ---------------------------------------------------------------------------
.text:004012EB
.text:004012EB loc_4012EB:			       ; CODE XREF: .text:00401306j
.text:004012EB		       mov     eax, [ebp-4]
.text:004012EE		       mov     eax, [eax+8]
.text:004012F1		       mov     [ebp-4],	eax
.text:004012F4
.text:004012F4 loc_4012F4:			       ; CODE XREF: .text:004012E9j
.text:004012F4		       cmp     dword ptr [ebp-4], 0
.text:004012F8		       jz      short loc_401308
.text:004012FA		       mov     eax, [ebp-4]
.text:004012FD		       mov     edx, [eax]
.text:004012FF		       mov     eax, [ebp+0Ch]
.text:00401302		       mov     eax, [eax]
.text:00401304		       cmp     edx, eax
.text:00401306		       jnz     short loc_4012EB
.text:00401308
.text:00401308 loc_401308:			       ; CODE XREF: .text:004012F8j
.text:00401308		       cmp     dword ptr [ebp-4], 0
.text:0040130C		       jnz     short loc_401341
.text:0040130E		       mov     eax, [ebp+8]
.text:00401311		       mov     eax, [eax]
.text:00401313		       test    eax, eax
.text:00401315		       jz      short loc_401341
.text:00401317		       mov     eax, [ebp+8]
.text:0040131A		       mov     eax, [eax]
.text:0040131C		       mov     eax, [eax+4]
.text:0040131F		       mov     [ebp-4],	eax
.text:00401322		       jmp     short loc_40132D
.text:00401324 ; ---------------------------------------------------------------------------
.text:00401324
.text:00401324 loc_401324:			       ; CODE XREF: .text:0040133Fj
.text:00401324		       mov     eax, [ebp-4]
.text:00401327		       mov     eax, [eax+4]
.text:0040132A		       mov     [ebp-4],	eax
.text:0040132D
.text:0040132D loc_40132D:			       ; CODE XREF: .text:00401322j
.text:0040132D		       cmp     dword ptr [ebp-4], 0
.text:00401331		       jz      short loc_401341
.text:00401333		       mov     eax, [ebp-4]
.text:00401336		       mov     edx, [eax]
.text:00401338		       mov     eax, [ebp+0Ch]
.text:0040133B		       mov     eax, [eax]
.text:0040133D		       cmp     edx, eax
.text:0040133F		       jnz     short loc_401324
.text:00401341
.text:00401341 loc_401341:			       ; CODE XREF: .text:0040130Cj
.text:00401341					       ; .text:00401315j ...
.text:00401341		       mov     edx, [ebp+10h]
.text:00401344		       mov     eax, [ebp-4]
.text:00401347		       mov     [edx], eax
.text:00401349		       cmp     dword ptr [ebp-4], 0
.text:0040134D		       jnz     short loc_4013B3
.text:0040134F		       mov     eax, [ebp+8]
.text:00401352		       mov     eax, [eax]
.text:00401354		       test    eax, eax
.text:00401356		       jnz     short loc_401379
.text:00401358		       mov     edx, [ebp+8]
.text:0040135B		       mov     eax, [ebp+0Ch]
.text:0040135E		       mov     [edx], eax
.text:00401360		       mov     eax, [ebp+8]
.text:00401363		       mov     edx, [eax]
.text:00401365		       mov     eax, [ebp+8]
.text:00401368		       mov     eax, [eax]
.text:0040136A		       mov     dword ptr [eax+8], 0
.text:00401371		       mov     eax, [eax+8]
.text:00401374		       mov     [edx+4],	eax
.text:00401377		       jmp     short loc_4013B3
.text:00401379 ; ---------------------------------------------------------------------------
.text:00401379
.text:00401379 loc_401379:			       ; CODE XREF: .text:00401356j
.text:00401379		       mov     eax, [ebp+8]
.text:0040137C		       mov     edx, [eax]
.text:0040137E		       mov     eax, [ebp+0Ch]
.text:00401381		       mov     [eax+4],	edx
.text:00401384		       mov     eax, [ebp+8]
.text:00401387		       mov     eax, [eax]
.text:00401389		       mov     edx, [eax+8]
.text:0040138C		       mov     eax, [ebp+0Ch]
.text:0040138F		       mov     [eax+8],	edx
.text:00401392		       mov     eax, [ebp+8]
.text:00401395		       mov     edx, [eax]
.text:00401397		       mov     eax, [ebp+0Ch]
.text:0040139A		       mov     [edx+8],	eax
.text:0040139D		       mov     eax, [ebp+0Ch]
.text:004013A0		       mov     eax, [eax+8]
.text:004013A3		       test    eax, eax
.text:004013A5		       jz      short loc_4013B3
.text:004013A7		       mov     eax, [ebp+0Ch]
.text:004013AA		       mov     edx, [eax+8]
.text:004013AD		       mov     eax, [ebp+0Ch]
.text:004013B0		       mov     [edx+4],	eax
.text:004013B3
.text:004013B3 loc_4013B3:			       ; CODE XREF: .text:0040134Dj
.text:004013B3					       ; .text:00401377j ...
.text:004013B3		       mov     eax, [ebp+10h]
.text:004013B6		       mov     eax, [eax]
.text:004013B8		       test    eax, eax
.text:004013BA		       setz    al
.text:004013BD		       movzx   eax, al
.text:004013C0		       leave
.text:004013C1		       retn
.text:004013C2 ; ---------------------------------------------------------------------------
.text:004013C2		       push    ebp
.text:004013C3		       mov     ebp, esp
.text:004013C5		       sub     esp, 10h
.text:004013C8		       mov     eax, [ebp+8]
.text:004013CB		       mov     eax, [eax]
.text:004013CD		       mov     [ebp-4],	eax
.text:004013D0		       jmp     short loc_4013DB
.text:004013D2 ; ---------------------------------------------------------------------------
.text:004013D2
.text:004013D2 loc_4013D2:			       ; CODE XREF: .text:004013EDj
.text:004013D2		       mov     eax, [ebp-4]
.text:004013D5		       mov     eax, [eax+8]
.text:004013D8		       mov     [ebp-4],	eax
.text:004013DB
.text:004013DB loc_4013DB:			       ; CODE XREF: .text:004013D0j
.text:004013DB		       cmp     dword ptr [ebp-4], 0
.text:004013DF		       jz      short loc_4013EF
.text:004013E1		       mov     eax, [ebp-4]
.text:004013E4		       mov     edx, [eax]
.text:004013E6		       mov     eax, [ebp+0Ch]
.text:004013E9		       mov     eax, [eax]
.text:004013EB		       cmp     edx, eax
.text:004013ED		       jnz     short loc_4013D2
.text:004013EF
.text:004013EF loc_4013EF:			       ; CODE XREF: .text:004013DFj
.text:004013EF		       cmp     dword ptr [ebp-4], 0
.text:004013F3		       jnz     short loc_401428
.text:004013F5		       mov     eax, [ebp+8]
.text:004013F8		       mov     eax, [eax]
.text:004013FA		       test    eax, eax
.text:004013FC		       jz      short loc_401428
.text:004013FE		       mov     eax, [ebp+8]
.text:00401401		       mov     eax, [eax]
.text:00401403		       mov     eax, [eax+4]
.text:00401406		       mov     [ebp-4],	eax
.text:00401409		       jmp     short loc_401414
.text:0040140B ; ---------------------------------------------------------------------------
.text:0040140B
.text:0040140B loc_40140B:			       ; CODE XREF: .text:00401426j
.text:0040140B		       mov     eax, [ebp-4]
.text:0040140E		       mov     eax, [eax+4]
.text:00401411		       mov     [ebp-4],	eax
.text:00401414
.text:00401414 loc_401414:			       ; CODE XREF: .text:00401409j
.text:00401414		       cmp     dword ptr [ebp-4], 0
.text:00401418		       jz      short loc_401428
.text:0040141A		       mov     eax, [ebp-4]
.text:0040141D		       mov     edx, [eax]
.text:0040141F		       mov     eax, [ebp+0Ch]
.text:00401422		       mov     eax, [eax]
.text:00401424		       cmp     edx, eax
.text:00401426		       jnz     short loc_40140B
.text:00401428
.text:00401428 loc_401428:			       ; CODE XREF: .text:004013F3j
.text:00401428					       ; .text:004013FCj ...
.text:00401428		       mov     edx, [ebp+10h]
.text:0040142B		       mov     eax, [ebp-4]
.text:0040142E		       mov     [edx], eax
.text:00401430		       cmp     dword ptr [ebp-4], 0
.text:00401434		       jnz     short loc_40149A
.text:00401436		       mov     eax, [ebp+8]
.text:00401439		       mov     eax, [eax]
.text:0040143B		       test    eax, eax
.text:0040143D		       jnz     short loc_401460
.text:0040143F		       mov     edx, [ebp+8]
.text:00401442		       mov     eax, [ebp+0Ch]
.text:00401445		       mov     [edx], eax
.text:00401447		       mov     eax, [ebp+8]
.text:0040144A		       mov     edx, [eax]
.text:0040144C		       mov     eax, [ebp+8]
.text:0040144F		       mov     eax, [eax]
.text:00401451		       mov     dword ptr [eax+8], 0
.text:00401458		       mov     eax, [eax+8]
.text:0040145B		       mov     [edx+4],	eax
.text:0040145E		       jmp     short loc_40149A
.text:00401460 ; ---------------------------------------------------------------------------
.text:00401460
.text:00401460 loc_401460:			       ; CODE XREF: .text:0040143Dj
.text:00401460		       mov     eax, [ebp+8]
.text:00401463		       mov     eax, [eax]
.text:00401465		       mov     edx, [eax+4]
.text:00401468		       mov     eax, [ebp+0Ch]
.text:0040146B		       mov     [eax+4],	edx
.text:0040146E		       mov     eax, [ebp+8]
.text:00401471		       mov     edx, [eax]
.text:00401473		       mov     eax, [ebp+0Ch]
.text:00401476		       mov     [eax+8],	edx
.text:00401479		       mov     eax, [ebp+8]
.text:0040147C		       mov     edx, [eax]
.text:0040147E		       mov     eax, [ebp+0Ch]
.text:00401481		       mov     [edx+4],	eax
.text:00401484		       mov     eax, [ebp+0Ch]
.text:00401487		       mov     eax, [eax+4]
.text:0040148A		       test    eax, eax
.text:0040148C		       jz      short loc_40149A
.text:0040148E		       mov     eax, [ebp+0Ch]
.text:00401491		       mov     edx, [eax+4]
.text:00401494		       mov     eax, [ebp+0Ch]
.text:00401497		       mov     [edx+8],	eax
.text:0040149A
.text:0040149A loc_40149A:			       ; CODE XREF: .text:00401434j
.text:0040149A					       ; .text:0040145Ej ...
.text:0040149A		       mov     eax, [ebp+10h]
.text:0040149D		       mov     eax, [eax]
.text:0040149F		       test    eax, eax
.text:004014A1		       setz    al
.text:004014A4		       movzx   eax, al
.text:004014A7		       leave
.text:004014A8		       retn
.text:004014A9 ; ---------------------------------------------------------------------------
.text:004014A9		       push    ebp
.text:004014AA		       mov     ebp, esp
.text:004014AC		       sub     esp, 10h
.text:004014AF		       mov     eax, [ebp+8]
.text:004014B2		       mov     eax, [eax]
.text:004014B4		       mov     [ebp-4],	eax
.text:004014B7		       jmp     short loc_4014C2
.text:004014B9 ; ---------------------------------------------------------------------------
.text:004014B9
.text:004014B9 loc_4014B9:			       ; CODE XREF: .text:004014D4j
.text:004014B9		       mov     eax, [ebp-4]
.text:004014BC		       mov     eax, [eax+8]
.text:004014BF		       mov     [ebp-4],	eax
.text:004014C2
.text:004014C2 loc_4014C2:			       ; CODE XREF: .text:004014B7j
.text:004014C2		       cmp     dword ptr [ebp-4], 0
.text:004014C6		       jz      short loc_4014D6
.text:004014C8		       mov     eax, [ebp-4]
.text:004014CB		       mov     edx, [eax]
.text:004014CD		       mov     eax, [ebp+0Ch]
.text:004014D0		       mov     eax, [eax]
.text:004014D2		       cmp     edx, eax
.text:004014D4		       jnz     short loc_4014B9
.text:004014D6
.text:004014D6 loc_4014D6:			       ; CODE XREF: .text:004014C6j
.text:004014D6		       cmp     dword ptr [ebp-4], 0
.text:004014DA		       jnz     short loc_40150F
.text:004014DC		       mov     eax, [ebp+8]
.text:004014DF		       mov     eax, [eax]
.text:004014E1		       test    eax, eax
.text:004014E3		       jz      short loc_40150F
.text:004014E5		       mov     eax, [ebp+8]
.text:004014E8		       mov     eax, [eax]
.text:004014EA		       mov     eax, [eax+4]
.text:004014ED		       mov     [ebp-4],	eax
.text:004014F0		       jmp     short loc_4014FB
.text:004014F2 ; ---------------------------------------------------------------------------
.text:004014F2
.text:004014F2 loc_4014F2:			       ; CODE XREF: .text:0040150Dj
.text:004014F2		       mov     eax, [ebp-4]
.text:004014F5		       mov     eax, [eax+4]
.text:004014F8		       mov     [ebp-4],	eax
.text:004014FB
.text:004014FB loc_4014FB:			       ; CODE XREF: .text:004014F0j
.text:004014FB		       cmp     dword ptr [ebp-4], 0
.text:004014FF		       jz      short loc_40150F
.text:00401501		       mov     eax, [ebp-4]
.text:00401504		       mov     edx, [eax]
.text:00401506		       mov     eax, [ebp+0Ch]
.text:00401509		       mov     eax, [eax]
.text:0040150B		       cmp     edx, eax
.text:0040150D		       jnz     short loc_4014F2
.text:0040150F
.text:0040150F loc_40150F:			       ; CODE XREF: .text:004014DAj
.text:0040150F					       ; .text:004014E3j ...
.text:0040150F		       mov     edx, [ebp+10h]
.text:00401512		       mov     eax, [ebp-4]
.text:00401515		       mov     [edx], eax
.text:00401517		       cmp     dword ptr [ebp-4], 0
.text:0040151B		       jnz     short loc_401581
.text:0040151D		       mov     eax, [ebp+8]
.text:00401520		       mov     eax, [eax]
.text:00401522		       test    eax, eax
.text:00401524		       jnz     short loc_401547
.text:00401526		       mov     edx, [ebp+8]
.text:00401529		       mov     eax, [ebp+0Ch]
.text:0040152C		       mov     [edx], eax
.text:0040152E		       mov     eax, [ebp+8]
.text:00401531		       mov     edx, [eax]
.text:00401533		       mov     eax, [ebp+8]
.text:00401536		       mov     eax, [eax]
.text:00401538		       mov     dword ptr [eax+8], 0
.text:0040153F		       mov     eax, [eax+8]
.text:00401542		       mov     [edx+4],	eax
.text:00401545		       jmp     short loc_401581
.text:00401547 ; ---------------------------------------------------------------------------
.text:00401547
.text:00401547 loc_401547:			       ; CODE XREF: .text:00401524j
.text:00401547		       mov     eax, [ebp+8]
.text:0040154A		       mov     edx, [eax]
.text:0040154C		       mov     eax, [ebp+0Ch]
.text:0040154F		       mov     [eax+4],	edx
.text:00401552		       mov     eax, [ebp+8]
.text:00401555		       mov     eax, [eax]
.text:00401557		       mov     edx, [eax+8]
.text:0040155A		       mov     eax, [ebp+0Ch]
.text:0040155D		       mov     [eax+8],	edx
.text:00401560		       mov     eax, [ebp+8]
.text:00401563		       mov     edx, [eax]
.text:00401565		       mov     eax, [ebp+0Ch]
.text:00401568		       mov     [edx+8],	eax
.text:0040156B		       mov     eax, [ebp+0Ch]
.text:0040156E		       mov     eax, [eax+8]
.text:00401571		       test    eax, eax
.text:00401573		       jz      short loc_401581
.text:00401575		       mov     eax, [ebp+0Ch]
.text:00401578		       mov     edx, [eax+8]
.text:0040157B		       mov     eax, [ebp+0Ch]
.text:0040157E		       mov     [edx+4],	eax
.text:00401581
.text:00401581 loc_401581:			       ; CODE XREF: .text:0040151Bj
.text:00401581					       ; .text:00401545j ...
.text:00401581		       mov     eax, [ebp+10h]
.text:00401584		       mov     eax, [eax]
.text:00401586		       test    eax, eax
.text:00401588		       setz    al
.text:0040158B		       movzx   eax, al
.text:0040158E		       leave
.text:0040158F		       retn
.text:00401590 ; ---------------------------------------------------------------------------
.text:00401590		       push    ebp
.text:00401591		       mov     ebp, esp
.text:00401593		       sub     esp, 10h
.text:00401596		       mov     eax, [ebp+8]
.text:00401599		       mov     eax, [eax]
.text:0040159B		       test    eax, eax
.text:0040159D		       jnz     short loc_4015A9
.text:0040159F		       mov     edx, [ebp+8]
.text:004015A2		       mov     eax, [ebp+0Ch]
.text:004015A5		       mov     [edx], eax
.text:004015A7		       jmp     short locret_401624
.text:004015A9 ; ---------------------------------------------------------------------------
.text:004015A9
.text:004015A9 loc_4015A9:			       ; CODE XREF: .text:0040159Dj
.text:004015A9		       cmp     dword ptr [ebp+0Ch], 0
.text:004015AD		       jz      short locret_401624
.text:004015AF		       mov     eax, [ebp+8]
.text:004015B2		       mov     eax, [eax]
.text:004015B4		       mov     [ebp-4],	eax
.text:004015B7		       jmp     short loc_4015C2
.text:004015B9 ; ---------------------------------------------------------------------------
.text:004015B9
.text:004015B9 loc_4015B9:			       ; CODE XREF: .text:004015CAj
.text:004015B9		       mov     eax, [ebp-4]
.text:004015BC		       mov     eax, [eax+4]
.text:004015BF		       mov     [ebp-4],	eax
.text:004015C2
.text:004015C2 loc_4015C2:			       ; CODE XREF: .text:004015B7j
.text:004015C2		       mov     eax, [ebp-4]
.text:004015C5		       mov     eax, [eax+4]
.text:004015C8		       test    eax, eax
.text:004015CA		       jnz     short loc_4015B9
.text:004015CC		       cmp     dword ptr [ebp-4], 0
.text:004015D0		       jnz     short loc_4015F0
.text:004015D2		       mov     eax, [ebp+0Ch]
.text:004015D5		       mov     [ebp-4],	eax
.text:004015D8		       mov     eax, [ebp-4]
.text:004015DB		       mov     dword ptr [eax+8], 0
.text:004015E2		       mov     eax, [ebp-4]
.text:004015E5		       mov     edx, [eax+8]
.text:004015E8		       mov     eax, [ebp-4]
.text:004015EB		       mov     [eax+4],	edx
.text:004015EE		       jmp     short locret_401624
.text:004015F0 ; ---------------------------------------------------------------------------
.text:004015F0
.text:004015F0 loc_4015F0:			       ; CODE XREF: .text:004015D0j
.text:004015F0		       mov     eax, [ebp-4]
.text:004015F3		       mov     edx, [eax+4]
.text:004015F6		       mov     eax, [ebp+0Ch]
.text:004015F9		       mov     [eax+4],	edx
.text:004015FC		       mov     edx, [ebp+0Ch]
.text:004015FF		       mov     eax, [ebp-4]
.text:00401602		       mov     [edx+8],	eax
.text:00401605		       mov     edx, [ebp-4]
.text:00401608		       mov     eax, [ebp+0Ch]
.text:0040160B		       mov     [edx+4],	eax
.text:0040160E		       mov     eax, [ebp+0Ch]
.text:00401611		       mov     eax, [eax+4]
.text:00401614		       test    eax, eax
.text:00401616		       jz      short locret_401624
.text:00401618		       mov     eax, [ebp+0Ch]
.text:0040161B		       mov     edx, [eax+4]
.text:0040161E		       mov     eax, [ebp+0Ch]
.text:00401621		       mov     [edx+8],	eax
.text:00401624
.text:00401624 locret_401624:			       ; CODE XREF: .text:004015A7j
.text:00401624					       ; .text:004015ADj ...
.text:00401624		       leave
.text:00401625		       retn
.text:00401626 ; ---------------------------------------------------------------------------
.text:00401626		       push    ebp
.text:00401627		       mov     ebp, esp
.text:00401629		       sub     esp, 10h
.text:0040162C		       mov     eax, [ebp+8]
.text:0040162F		       mov     eax, [eax]
.text:00401631		       mov     [ebp-4],	eax
.text:00401634		       mov     eax, [ebp-4]
.text:00401637		       cmp     eax, [ebp+0Ch]
.text:0040163A		       jnz     short loc_40165A
.text:0040163C		       mov     eax, [ebp+0Ch]
.text:0040163F		       mov     eax, [eax+8]
.text:00401642		       test    eax, eax
.text:00401644		       jz      short loc_401651
.text:00401646		       mov     eax, [ebp+0Ch]
.text:00401649		       mov     eax, [eax+8]
.text:0040164C		       mov     [ebp-4],	eax
.text:0040164F		       jmp     short loc_40165A
.text:00401651 ; ---------------------------------------------------------------------------
.text:00401651
.text:00401651 loc_401651:			       ; CODE XREF: .text:00401644j
.text:00401651		       mov     eax, [ebp+0Ch]
.text:00401654		       mov     eax, [eax+4]
.text:00401657		       mov     [ebp-4],	eax
.text:0040165A
.text:0040165A loc_40165A:			       ; CODE XREF: .text:0040163Aj
.text:0040165A					       ; .text:0040164Fj
.text:0040165A		       mov     eax, [ebp+0Ch]
.text:0040165D		       mov     eax, [eax+4]
.text:00401660		       test    eax, eax
.text:00401662		       jz      short loc_401673
.text:00401664		       mov     eax, [ebp+0Ch]
.text:00401667		       mov     edx, [eax+4]
.text:0040166A		       mov     eax, [ebp+0Ch]
.text:0040166D		       mov     eax, [eax+8]
.text:00401670		       mov     [edx+8],	eax
.text:00401673
.text:00401673 loc_401673:			       ; CODE XREF: .text:00401662j
.text:00401673		       mov     eax, [ebp+0Ch]
.text:00401676		       mov     eax, [eax+8]
.text:00401679		       test    eax, eax
.text:0040167B		       jz      short loc_40168C
.text:0040167D		       mov     eax, [ebp+0Ch]
.text:00401680		       mov     edx, [eax+8]
.text:00401683		       mov     eax, [ebp+0Ch]
.text:00401686		       mov     eax, [eax+4]
.text:00401689		       mov     [edx+4],	eax
.text:0040168C
.text:0040168C loc_40168C:			       ; CODE XREF: .text:0040167Bj
.text:0040168C		       mov     edx, [ebp+8]
.text:0040168F		       mov     eax, [ebp-4]
.text:00401692		       mov     [edx], eax
.text:00401694		       leave
.text:00401695		       retn
.text:00401696 ; ---------------------------------------------------------------------------
.text:00401696		       push    ebp
.text:00401697		       mov     ebp, esp
.text:00401699		       sub     esp, 10h
.text:0040169C		       mov     eax, [ebp+8]
.text:0040169F		       mov     eax, [eax]
.text:004016A1		       mov     [ebp-8],	eax
.text:004016A4		       jmp     short loc_4016AF
.text:004016A6 ; ---------------------------------------------------------------------------
.text:004016A6
.text:004016A6 loc_4016A6:			       ; CODE XREF: .text:004016C1j
.text:004016A6		       mov     eax, [ebp-8]
.text:004016A9		       mov     eax, [eax+8]
.text:004016AC		       mov     [ebp-8],	eax
.text:004016AF
.text:004016AF loc_4016AF:			       ; CODE XREF: .text:004016A4j
.text:004016AF		       cmp     dword ptr [ebp-8], 0
.text:004016B3		       jz      short loc_4016C3
.text:004016B5		       mov     eax, [ebp-8]
.text:004016B8		       mov     edx, [eax]
.text:004016BA		       mov     eax, [ebp+0Ch]
.text:004016BD		       mov     eax, [eax]
.text:004016BF		       cmp     edx, eax
.text:004016C1		       jnz     short loc_4016A6
.text:004016C3
.text:004016C3 loc_4016C3:			       ; CODE XREF: .text:004016B3j
.text:004016C3		       cmp     dword ptr [ebp-8], 0
.text:004016C7		       jnz     short loc_4016FC
.text:004016C9		       mov     eax, [ebp+8]
.text:004016CC		       mov     eax, [eax]
.text:004016CE		       test    eax, eax
.text:004016D0		       jz      short loc_4016FC
.text:004016D2		       mov     eax, [ebp+8]
.text:004016D5		       mov     eax, [eax]
.text:004016D7		       mov     eax, [eax+4]
.text:004016DA		       mov     [ebp-8],	eax
.text:004016DD		       jmp     short loc_4016E8
.text:004016DF ; ---------------------------------------------------------------------------
.text:004016DF
.text:004016DF loc_4016DF:			       ; CODE XREF: .text:004016FAj
.text:004016DF		       mov     eax, [ebp-8]
.text:004016E2		       mov     eax, [eax+4]
.text:004016E5		       mov     [ebp-8],	eax
.text:004016E8
.text:004016E8 loc_4016E8:			       ; CODE XREF: .text:004016DDj
.text:004016E8		       cmp     dword ptr [ebp-8], 0
.text:004016EC		       jz      short loc_4016FC
.text:004016EE		       mov     eax, [ebp-8]
.text:004016F1		       mov     edx, [eax]
.text:004016F3		       mov     eax, [ebp+0Ch]
.text:004016F6		       mov     eax, [eax]
.text:004016F8		       cmp     edx, eax
.text:004016FA		       jnz     short loc_4016DF
.text:004016FC
.text:004016FC loc_4016FC:			       ; CODE XREF: .text:004016C7j
.text:004016FC					       ; .text:004016D0j ...
.text:004016FC		       mov     edx, [ebp+10h]
.text:004016FF		       mov     eax, [ebp-8]
.text:00401702		       mov     [edx], eax
.text:00401704		       cmp     dword ptr [ebp-8], 0
.text:00401708		       jz      short loc_401772
.text:0040170A		       mov     eax, [ebp+8]
.text:0040170D		       mov     eax, [eax]
.text:0040170F		       mov     [ebp-4],	eax
.text:00401712		       mov     eax, [ebp-4]
.text:00401715		       cmp     eax, [ebp-8]
.text:00401718		       jnz     short loc_401738
.text:0040171A		       mov     eax, [ebp-8]
.text:0040171D		       mov     eax, [eax+8]
.text:00401720		       test    eax, eax
.text:00401722		       jz      short loc_40172F
.text:00401724		       mov     eax, [ebp-8]
.text:00401727		       mov     eax, [eax+8]
.text:0040172A		       mov     [ebp-4],	eax
.text:0040172D		       jmp     short loc_401738
.text:0040172F ; ---------------------------------------------------------------------------
.text:0040172F
.text:0040172F loc_40172F:			       ; CODE XREF: .text:00401722j
.text:0040172F		       mov     eax, [ebp-8]
.text:00401732		       mov     eax, [eax+4]
.text:00401735		       mov     [ebp-4],	eax
.text:00401738
.text:00401738 loc_401738:			       ; CODE XREF: .text:00401718j
.text:00401738					       ; .text:0040172Dj
.text:00401738		       mov     eax, [ebp-8]
.text:0040173B		       mov     eax, [eax+4]
.text:0040173E		       test    eax, eax
.text:00401740		       jz      short loc_401751
.text:00401742		       mov     eax, [ebp-8]
.text:00401745		       mov     edx, [eax+4]
.text:00401748		       mov     eax, [ebp-8]
.text:0040174B		       mov     eax, [eax+8]
.text:0040174E		       mov     [edx+8],	eax
.text:00401751
.text:00401751 loc_401751:			       ; CODE XREF: .text:00401740j
.text:00401751		       mov     eax, [ebp-8]
.text:00401754		       mov     eax, [eax+8]
.text:00401757		       test    eax, eax
.text:00401759		       jz      short loc_40176A
.text:0040175B		       mov     eax, [ebp-8]
.text:0040175E		       mov     edx, [eax+8]
.text:00401761		       mov     eax, [ebp-8]
.text:00401764		       mov     eax, [eax+4]
.text:00401767		       mov     [edx+4],	eax
.text:0040176A
.text:0040176A loc_40176A:			       ; CODE XREF: .text:00401759j
.text:0040176A		       mov     edx, [ebp+8]
.text:0040176D		       mov     eax, [ebp-4]
.text:00401770		       mov     [edx], eax
.text:00401772
.text:00401772 loc_401772:			       ; CODE XREF: .text:00401708j
.text:00401772		       mov     eax, [ebp+10h]
.text:00401775		       mov     eax, [eax]
.text:00401777		       test    eax, eax
.text:00401779		       setnz   al
.text:0040177C		       movzx   eax, al
.text:0040177F		       leave
.text:00401780		       retn
.text:00401781 ; ---------------------------------------------------------------------------
.text:00401781		       push    ebp
.text:00401782		       mov     ebp, esp
.text:00401784		       sub     esp, 10h
.text:00401787		       mov     eax, [ebp+8]
.text:0040178A		       mov     [ebp-8],	eax
.text:0040178D		       jmp     short loc_401798
.text:0040178F ; ---------------------------------------------------------------------------
.text:0040178F
.text:0040178F loc_40178F:			       ; CODE XREF: .text:004017A4j
.text:0040178F		       mov     eax, [ebp-8]
.text:00401792		       mov     eax, [eax+8]
.text:00401795		       mov     [ebp-8],	eax
.text:00401798
.text:00401798 loc_401798:			       ; CODE XREF: .text:0040178Dj
.text:00401798		       cmp     dword ptr [ebp-8], 0
.text:0040179C		       jz      short loc_4017A6
.text:0040179E		       mov     eax, [ebp-8]
.text:004017A1		       cmp     eax, [ebp+0Ch]
.text:004017A4		       jnz     short loc_40178F
.text:004017A6
.text:004017A6 loc_4017A6:			       ; CODE XREF: .text:0040179Cj
.text:004017A6		       cmp     dword ptr [ebp-8], 0
.text:004017AA		       setnz   al
.text:004017AD		       movzx   eax, al
.text:004017B0		       mov     [ebp-10h], eax
.text:004017B3		       cmp     dword ptr [ebp-10h], 0
.text:004017B7		       jnz     short loc_4017F4
.text:004017B9		       cmp     dword ptr [ebp+8], 0
.text:004017BD		       jz      short loc_4017F4
.text:004017BF		       mov     eax, [ebp+8]
.text:004017C2		       mov     eax, [eax+4]
.text:004017C5		       mov     [ebp-0Ch], eax
.text:004017C8		       mov     eax, [ebp-0Ch]
.text:004017CB		       mov     [ebp-4],	eax
.text:004017CE		       jmp     short loc_4017D9
.text:004017D0 ; ---------------------------------------------------------------------------
.text:004017D0
.text:004017D0 loc_4017D0:			       ; CODE XREF: .text:004017E5j
.text:004017D0		       mov     eax, [ebp-4]
.text:004017D3		       mov     eax, [eax+4]
.text:004017D6		       mov     [ebp-4],	eax
.text:004017D9
.text:004017D9 loc_4017D9:			       ; CODE XREF: .text:004017CEj
.text:004017D9		       cmp     dword ptr [ebp-4], 0
.text:004017DD		       jz      short loc_4017E7
.text:004017DF		       mov     eax, [ebp-4]
.text:004017E2		       cmp     eax, [ebp+0Ch]
.text:004017E5		       jnz     short loc_4017D0
.text:004017E7
.text:004017E7 loc_4017E7:			       ; CODE XREF: .text:004017DDj
.text:004017E7		       cmp     dword ptr [ebp-4], 0
.text:004017EB		       setnz   al
.text:004017EE		       movzx   eax, al
.text:004017F1		       mov     [ebp-10h], eax
.text:004017F4
.text:004017F4 loc_4017F4:			       ; CODE XREF: .text:004017B7j
.text:004017F4					       ; .text:004017BDj
.text:004017F4		       mov     eax, [ebp-10h]
.text:004017F7		       leave
.text:004017F8		       retn
.text:004017F9 ; ---------------------------------------------------------------------------
.text:004017F9		       push    ebp
.text:004017FA		       mov     ebp, esp
.text:004017FC		       sub     esp, 10h
.text:004017FF		       mov     eax, [ebp+8]
.text:00401802		       mov     [ebp-8],	eax
.text:00401805		       jmp     short loc_401810
.text:00401807 ; ---------------------------------------------------------------------------
.text:00401807
.text:00401807 loc_401807:			       ; CODE XREF: .text:00401822j
.text:00401807		       mov     eax, [ebp-8]
.text:0040180A		       mov     eax, [eax+8]
.text:0040180D		       mov     [ebp-8],	eax
.text:00401810
.text:00401810 loc_401810:			       ; CODE XREF: .text:00401805j
.text:00401810		       cmp     dword ptr [ebp-8], 0
.text:00401814		       jz      short loc_401824
.text:00401816		       mov     eax, [ebp-8]
.text:00401819		       mov     edx, [eax]
.text:0040181B		       mov     eax, [ebp+0Ch]
.text:0040181E		       mov     eax, [eax]
.text:00401820		       cmp     edx, eax
.text:00401822		       jnz     short loc_401807
.text:00401824
.text:00401824 loc_401824:			       ; CODE XREF: .text:00401814j
.text:00401824		       mov     eax, [ebp-8]
.text:00401827		       mov     [ebp-10h], eax
.text:0040182A		       cmp     dword ptr [ebp-10h], 0
.text:0040182E		       jnz     short loc_40186A
.text:00401830		       cmp     dword ptr [ebp+8], 0
.text:00401834		       jz      short loc_40186A
.text:00401836		       mov     eax, [ebp+8]
.text:00401839		       mov     eax, [eax+4]
.text:0040183C		       mov     [ebp-0Ch], eax
.text:0040183F		       mov     eax, [ebp-0Ch]
.text:00401842		       mov     [ebp-4],	eax
.text:00401845		       jmp     short loc_401850
.text:00401847 ; ---------------------------------------------------------------------------
.text:00401847
.text:00401847 loc_401847:			       ; CODE XREF: .text:00401862j
.text:00401847		       mov     eax, [ebp-4]
.text:0040184A		       mov     eax, [eax+4]
.text:0040184D		       mov     [ebp-4],	eax
.text:00401850
.text:00401850 loc_401850:			       ; CODE XREF: .text:00401845j
.text:00401850		       cmp     dword ptr [ebp-4], 0
.text:00401854		       jz      short loc_401864
.text:00401856		       mov     eax, [ebp-4]
.text:00401859		       mov     edx, [eax]
.text:0040185B		       mov     eax, [ebp+0Ch]
.text:0040185E		       mov     eax, [eax]
.text:00401860		       cmp     edx, eax
.text:00401862		       jnz     short loc_401847
.text:00401864
.text:00401864 loc_401864:			       ; CODE XREF: .text:00401854j
.text:00401864		       mov     eax, [ebp-4]
.text:00401867		       mov     [ebp-10h], eax
.text:0040186A
.text:0040186A loc_40186A:			       ; CODE XREF: .text:0040182Ej
.text:0040186A					       ; .text:00401834j
.text:0040186A		       mov     eax, [ebp-10h]
.text:0040186D		       leave
.text:0040186E		       retn
.text:0040186F
.text:0040186F ; =============== S U B R O U T I N E =======================================
.text:0040186F
.text:0040186F ; Attributes: bp-based frame
.text:0040186F
.text:0040186F sub_40186F      proc near	       ; CODE XREF: sub_401D24+96p
.text:0040186F
.text:0040186F var_8	       = dword ptr -8
.text:0040186F var_4	       = dword ptr -4
.text:0040186F arg_0	       = dword ptr  8
.text:0040186F
.text:0040186F		       push    ebp
.text:00401870		       mov     ebp, esp
.text:00401872		       sub     esp, 10h
.text:00401875		       mov     eax, [ebp+arg_0]
.text:00401878		       mov     [ebp+var_4], eax
.text:0040187B		       cmp     [ebp+var_4], 0
.text:0040187F		       jz      short loc_401896
.text:00401881		       jmp     short loc_40188C
.text:00401883 ; ---------------------------------------------------------------------------
.text:00401883
.text:00401883 loc_401883:			       ; CODE XREF: sub_40186F+25j
.text:00401883		       mov     eax, [ebp+var_4]
.text:00401886		       mov     eax, [eax+8]
.text:00401889		       mov     [ebp+var_4], eax
.text:0040188C
.text:0040188C loc_40188C:			       ; CODE XREF: sub_40186F+12j
.text:0040188C		       mov     eax, [ebp+var_4]
.text:0040188F		       mov     eax, [eax+8]
.text:00401892		       test    eax, eax
.text:00401894		       jnz     short loc_401883
.text:00401896
.text:00401896 loc_401896:			       ; CODE XREF: sub_40186F+10j
.text:00401896		       mov     eax, [ebp+var_4]
.text:00401899		       mov     [ebp+var_8], eax
.text:0040189C		       mov     eax, [ebp+var_8]
.text:0040189F		       leave
.text:004018A0		       retn
.text:004018A0 sub_40186F      endp
.text:004018A0
.text:004018A1
.text:004018A1 ; =============== S U B R O U T I N E =======================================
.text:004018A1
.text:004018A1 ; Attributes: bp-based frame
.text:004018A1
.text:004018A1 sub_4018A1      proc near	       ; CODE XREF: sub_401D24+D6p
.text:004018A1
.text:004018A1 var_8	       = dword ptr -8
.text:004018A1 var_4	       = dword ptr -4
.text:004018A1 arg_0	       = dword ptr  8
.text:004018A1
.text:004018A1		       push    ebp
.text:004018A2		       mov     ebp, esp
.text:004018A4		       sub     esp, 10h
.text:004018A7		       mov     eax, [ebp+arg_0]
.text:004018AA		       mov     [ebp+var_4], eax
.text:004018AD		       cmp     [ebp+var_4], 0
.text:004018B1		       jz      short loc_4018C8
.text:004018B3		       jmp     short loc_4018BE
.text:004018B5 ; ---------------------------------------------------------------------------
.text:004018B5
.text:004018B5 loc_4018B5:			       ; CODE XREF: sub_4018A1+25j
.text:004018B5		       mov     eax, [ebp+var_4]
.text:004018B8		       mov     eax, [eax+4]
.text:004018BB		       mov     [ebp+var_4], eax
.text:004018BE
.text:004018BE loc_4018BE:			       ; CODE XREF: sub_4018A1+12j
.text:004018BE		       mov     eax, [ebp+var_4]
.text:004018C1		       mov     eax, [eax+4]
.text:004018C4		       test    eax, eax
.text:004018C6		       jnz     short loc_4018B5
.text:004018C8
.text:004018C8 loc_4018C8:			       ; CODE XREF: sub_4018A1+10j
.text:004018C8		       mov     eax, [ebp+var_4]
.text:004018CB		       mov     [ebp+var_8], eax
.text:004018CE		       mov     eax, [ebp+var_8]
.text:004018D1		       leave
.text:004018D2		       retn
.text:004018D2 sub_4018A1      endp
.text:004018D2
.text:004018D3
.text:004018D3 ; =============== S U B R O U T I N E =======================================
.text:004018D3
.text:004018D3 ; Attributes: bp-based frame
.text:004018D3
.text:004018D3 sub_4018D3      proc near	       ; CODE XREF: sub_401D24+8Bp
.text:004018D3
.text:004018D3 var_38	       = dword ptr -38h
.text:004018D3 var_34	       = dword ptr -34h
.text:004018D3 var_28	       = dword ptr -28h
.text:004018D3 var_24	       = dword ptr -24h
.text:004018D3 var_20	       = dword ptr -20h
.text:004018D3 var_1C	       = dword ptr -1Ch
.text:004018D3 var_18	       = dword ptr -18h
.text:004018D3 var_14	       = dword ptr -14h
.text:004018D3 var_10	       = dword ptr -10h
.text:004018D3 var_C	       = dword ptr -0Ch
.text:004018D3 var_8	       = dword ptr -8
.text:004018D3 var_4	       = dword ptr -4
.text:004018D3 arg_0	       = dword ptr  8
.text:004018D3
.text:004018D3		       push    ebp
.text:004018D4		       mov     ebp, esp
.text:004018D6		       sub     esp, 40h
.text:004018D9		       mov     eax, [ebp+arg_0]
.text:004018DC		       mov     eax, [eax]
.text:004018DE		       mov     [ebp+var_34], eax
.text:004018E1		       cmp     [ebp+var_34], 0
.text:004018E5		       jz      locret_401ABE
.text:004018EB		       jmp     short loc_4018F6
.text:004018ED ; ---------------------------------------------------------------------------
.text:004018ED
.text:004018ED loc_4018ED:			       ; CODE XREF: sub_4018D3+2Bj
.text:004018ED		       mov     eax, [ebp+var_34]
.text:004018F0		       mov     eax, [eax+8]
.text:004018F3		       mov     [ebp+var_34], eax
.text:004018F6
.text:004018F6 loc_4018F6:			       ; CODE XREF: sub_4018D3+18j
.text:004018F6		       mov     eax, [ebp+var_34]
.text:004018F9		       mov     eax, [eax+8]
.text:004018FC		       test    eax, eax
.text:004018FE		       jnz     short loc_4018ED
.text:00401900		       mov     eax, [ebp+var_34]
.text:00401903		       mov     [ebp+var_38], eax
.text:00401906		       mov     [ebp+var_C], 1
.text:0040190D		       mov     [ebp+var_10], 1
.text:00401914		       jmp     loc_401A79
.text:00401919 ; ---------------------------------------------------------------------------
.text:00401919
.text:00401919 loc_401919:			       ; CODE XREF: sub_4018D3+1AAj
.text:00401919		       mov     eax, [ebp+var_38]
.text:0040191C		       mov     [ebp+var_20], eax
.text:0040191F		       mov     [ebp+var_38], 0
.text:00401926		       lea     eax, [ebp+var_38]
.text:00401929		       mov     [ebp+var_18], eax
.text:0040192C		       mov     [ebp+var_C], 0
.text:00401933		       jmp     loc_401A67
.text:00401938 ; ---------------------------------------------------------------------------
.text:00401938
.text:00401938 loc_401938:			       ; CODE XREF: sub_4018D3+198j
.text:00401938		       mov     eax, [ebp+var_20]
.text:0040193B		       mov     [ebp+var_28], eax
.text:0040193E		       mov     [ebp+var_14], 1
.text:00401945		       mov     eax, [ebp+var_28]
.text:00401948		       mov     [ebp+var_1C], eax
.text:0040194B		       jmp     short loc_40195A
.text:0040194D ; ---------------------------------------------------------------------------
.text:0040194D
.text:0040194D loc_40194D:			       ; CODE XREF: sub_4018D3+93j
.text:0040194D		       add     [ebp+var_14], 1
.text:00401951		       mov     eax, [ebp+var_1C]
.text:00401954		       mov     eax, [eax+4]
.text:00401957		       mov     [ebp+var_1C], eax
.text:0040195A
.text:0040195A loc_40195A:			       ; CODE XREF: sub_4018D3+78j
.text:0040195A		       mov     eax, [ebp+var_14]
.text:0040195D		       cmp     eax, [ebp+var_10]
.text:00401960		       jge     short loc_401968
.text:00401962		       cmp     [ebp+var_1C], 0
.text:00401966		       jnz     short loc_40194D
.text:00401968
.text:00401968 loc_401968:			       ; CODE XREF: sub_4018D3+8Dj
.text:00401968		       cmp     [ebp+var_1C], 0
.text:0040196C		       jnz     short loc_40197B
.text:0040196E		       mov     edx, [ebp+var_18]
.text:00401971		       mov     eax, [ebp+var_28]
.text:00401974		       mov     [edx], eax
.text:00401976		       jmp     loc_401A71
.text:0040197B ; ---------------------------------------------------------------------------
.text:0040197B
.text:0040197B loc_40197B:			       ; CODE XREF: sub_4018D3+99j
.text:0040197B		       mov     eax, [ebp+var_1C]
.text:0040197E		       mov     eax, [eax+4]
.text:00401981		       mov     [ebp+var_24], eax
.text:00401984		       mov     eax, [ebp+var_1C]
.text:00401987		       mov     dword ptr [eax+4], 0
.text:0040198E		       mov     [ebp+var_14], 1
.text:00401995		       mov     eax, [ebp+var_24]
.text:00401998		       mov     [ebp+var_1C], eax
.text:0040199B		       jmp     short loc_4019AA
.text:0040199D ; ---------------------------------------------------------------------------
.text:0040199D
.text:0040199D loc_40199D:			       ; CODE XREF: sub_4018D3+E3j
.text:0040199D		       add     [ebp+var_14], 1
.text:004019A1		       mov     eax, [ebp+var_1C]
.text:004019A4		       mov     eax, [eax+4]
.text:004019A7		       mov     [ebp+var_1C], eax
.text:004019AA
.text:004019AA loc_4019AA:			       ; CODE XREF: sub_4018D3+C8j
.text:004019AA		       mov     eax, [ebp+var_14]
.text:004019AD		       cmp     eax, [ebp+var_10]
.text:004019B0		       jge     short loc_4019B8
.text:004019B2		       cmp     [ebp+var_1C], 0
.text:004019B6		       jnz     short loc_40199D
.text:004019B8
.text:004019B8 loc_4019B8:			       ; CODE XREF: sub_4018D3+DDj
.text:004019B8		       cmp     [ebp+var_1C], 0
.text:004019BC		       jnz     short loc_4019C7
.text:004019BE		       mov     [ebp+var_20], 0
.text:004019C5		       jmp     short loc_401A26
.text:004019C7 ; ---------------------------------------------------------------------------
.text:004019C7
.text:004019C7 loc_4019C7:			       ; CODE XREF: sub_4018D3+E9j
.text:004019C7		       mov     eax, [ebp+var_1C]
.text:004019CA		       mov     eax, [eax+4]
.text:004019CD		       mov     [ebp+var_20], eax
.text:004019D0		       mov     eax, [ebp+var_1C]
.text:004019D3		       mov     dword ptr [eax+4], 0
.text:004019DA		       jmp     short loc_401A26
.text:004019DC ; ---------------------------------------------------------------------------
.text:004019DC
.text:004019DC loc_4019DC:			       ; CODE XREF: sub_4018D3+15Dj
.text:004019DC		       mov     eax, [ebp+var_28]
.text:004019DF		       mov     edx, [eax]
.text:004019E1		       mov     eax, [ebp+var_24]
.text:004019E4		       mov     eax, [eax]
.text:004019E6		       mov     ecx, edx
.text:004019E8		       sub     ecx, eax
.text:004019EA		       mov     eax, ecx
.text:004019EC		       test    eax, eax
.text:004019EE		       jns     short loc_401A0C
.text:004019F0		       mov     edx, [ebp+var_18]
.text:004019F3		       mov     eax, [ebp+var_28]
.text:004019F6		       mov     [edx], eax
.text:004019F8		       mov     eax, [ebp+var_28]
.text:004019FB		       add     eax, 4
.text:004019FE		       mov     [ebp+var_18], eax
.text:00401A01		       mov     eax, [ebp+var_28]
.text:00401A04		       mov     eax, [eax+4]
.text:00401A07		       mov     [ebp+var_28], eax
.text:00401A0A		       jmp     short loc_401A26
.text:00401A0C ; ---------------------------------------------------------------------------
.text:00401A0C
.text:00401A0C loc_401A0C:			       ; CODE XREF: sub_4018D3+11Bj
.text:00401A0C		       mov     edx, [ebp+var_18]
.text:00401A0F		       mov     eax, [ebp+var_24]
.text:00401A12		       mov     [edx], eax
.text:00401A14		       mov     eax, [ebp+var_24]
.text:00401A17		       add     eax, 4
.text:00401A1A		       mov     [ebp+var_18], eax
.text:00401A1D		       mov     eax, [ebp+var_24]
.text:00401A20		       mov     eax, [eax+4]
.text:00401A23		       mov     [ebp+var_24], eax
.text:00401A26
.text:00401A26 loc_401A26:			       ; CODE XREF: sub_4018D3+F2j
.text:00401A26					       ; sub_4018D3+107j ...
.text:00401A26		       cmp     [ebp+var_28], 0
.text:00401A2A		       jz      short loc_401A32
.text:00401A2C		       cmp     [ebp+var_24], 0
.text:00401A30		       jnz     short loc_4019DC
.text:00401A32
.text:00401A32 loc_401A32:			       ; CODE XREF: sub_4018D3+157j
.text:00401A32		       cmp     [ebp+var_28], 0
.text:00401A36		       jz      short loc_401A42
.text:00401A38		       mov     edx, [ebp+var_18]
.text:00401A3B		       mov     eax, [ebp+var_28]
.text:00401A3E		       mov     [edx], eax
.text:00401A40		       jmp     short loc_401A57
.text:00401A42 ; ---------------------------------------------------------------------------
.text:00401A42
.text:00401A42 loc_401A42:			       ; CODE XREF: sub_4018D3+163j
.text:00401A42		       mov     edx, [ebp+var_18]
.text:00401A45		       mov     eax, [ebp+var_24]
.text:00401A48		       mov     [edx], eax
.text:00401A4A		       jmp     short loc_401A57
.text:00401A4C ; ---------------------------------------------------------------------------
.text:00401A4C
.text:00401A4C loc_401A4C:			       ; CODE XREF: sub_4018D3+18Bj
.text:00401A4C		       mov     eax, [ebp+var_18]
.text:00401A4F		       mov     eax, [eax]
.text:00401A51		       add     eax, 4
.text:00401A54		       mov     [ebp+var_18], eax
.text:00401A57
.text:00401A57 loc_401A57:			       ; CODE XREF: sub_4018D3+16Dj
.text:00401A57					       ; sub_4018D3+177j
.text:00401A57		       mov     eax, [ebp+var_18]
.text:00401A5A		       mov     eax, [eax]
.text:00401A5C		       test    eax, eax
.text:00401A5E		       jnz     short loc_401A4C
.text:00401A60		       mov     [ebp+var_C], 1
.text:00401A67
.text:00401A67 loc_401A67:			       ; CODE XREF: sub_4018D3+60j
.text:00401A67		       cmp     [ebp+var_20], 0
.text:00401A6B		       jnz     loc_401938
.text:00401A71
.text:00401A71 loc_401A71:			       ; CODE XREF: sub_4018D3+A3j
.text:00401A71		       mov     eax, [ebp+var_10]
.text:00401A74		       add     eax, eax
.text:00401A76		       mov     [ebp+var_10], eax
.text:00401A79
.text:00401A79 loc_401A79:			       ; CODE XREF: sub_4018D3+41j
.text:00401A79		       cmp     [ebp+var_C], 0
.text:00401A7D		       jnz     loc_401919
.text:00401A83		       mov     eax, [ebp+var_38]
.text:00401A86		       mov     [ebp+var_34], eax
.text:00401A89		       mov     [ebp+var_8], 0
.text:00401A90		       mov     eax, [ebp+var_34]
.text:00401A93		       mov     [ebp+var_4], eax
.text:00401A96		       jmp     short loc_401AB0
.text:00401A98 ; ---------------------------------------------------------------------------
.text:00401A98
.text:00401A98 loc_401A98:			       ; CODE XREF: sub_4018D3+1E1j
.text:00401A98		       mov     edx, [ebp+var_4]
.text:00401A9B		       mov     eax, [ebp+var_8]
.text:00401A9E		       mov     [edx+8],	eax
.text:00401AA1		       mov     eax, [ebp+var_4]
.text:00401AA4		       mov     [ebp+var_8], eax
.text:00401AA7		       mov     eax, [ebp+var_4]
.text:00401AAA		       mov     eax, [eax+4]
.text:00401AAD		       mov     [ebp+var_4], eax
.text:00401AB0
.text:00401AB0 loc_401AB0:			       ; CODE XREF: sub_4018D3+1C3j
.text:00401AB0		       cmp     [ebp+var_4], 0
.text:00401AB4		       jnz     short loc_401A98
.text:00401AB6		       mov     edx, [ebp+arg_0]
.text:00401AB9		       mov     eax, [ebp+var_34]
.text:00401ABC		       mov     [edx], eax
.text:00401ABE
.text:00401ABE locret_401ABE:			       ; CODE XREF: sub_4018D3+12j
.text:00401ABE		       leave
.text:00401ABF		       retn
.text:00401ABF sub_4018D3      endp
.text:00401ABF
.text:00401AC0 ; ---------------------------------------------------------------------------
.text:00401AC0		       push    ebp
.text:00401AC1		       mov     ebp, esp
.text:00401AC3		       sub     esp, 30h
.text:00401AC6		       cmp     dword ptr [ebp+8], 0
.text:00401ACA		       jnz     short loc_401AD5
.text:00401ACC		       mov     dword ptr [ebp-28h], 0
.text:00401AD3		       jmp     short loc_401B3A
.text:00401AD5 ; ---------------------------------------------------------------------------
.text:00401AD5
.text:00401AD5 loc_401AD5:			       ; CODE XREF: .text:00401ACAj
.text:00401AD5		       mov     dword ptr [ebp-20h], 0
.text:00401ADC		       mov     eax, [ebp+8]
.text:00401ADF		       mov     [ebp-10h], eax
.text:00401AE2		       jmp     short loc_401AF7
.text:00401AE4 ; ---------------------------------------------------------------------------
.text:00401AE4
.text:00401AE4 loc_401AE4:			       ; CODE XREF: .text:00401AFBj
.text:00401AE4		       mov     eax, [ebp-10h]
.text:00401AE7		       mov     eax, [eax+8]
.text:00401AEA		       mov     [ebp-14h], eax
.text:00401AED		       add     dword ptr [ebp-20h], 1
.text:00401AF1		       mov     eax, [ebp-14h]
.text:00401AF4		       mov     [ebp-10h], eax
.text:00401AF7
.text:00401AF7 loc_401AF7:			       ; CODE XREF: .text:00401AE2j
.text:00401AF7		       cmp     dword ptr [ebp-10h], 0
.text:00401AFB		       jnz     short loc_401AE4
.text:00401AFD		       mov     eax, [ebp+8]
.text:00401B00		       mov     eax, [eax+4]
.text:00401B03		       mov     [ebp-24h], eax
.text:00401B06		       mov     dword ptr [ebp-1Ch], 0
.text:00401B0D		       mov     eax, [ebp-24h]
.text:00401B10		       mov     [ebp-4],	eax
.text:00401B13		       jmp     short loc_401B28
.text:00401B15 ; ---------------------------------------------------------------------------
.text:00401B15
.text:00401B15 loc_401B15:			       ; CODE XREF: .text:00401B2Cj
.text:00401B15		       mov     eax, [ebp-4]
.text:00401B18		       mov     eax, [eax+4]
.text:00401B1B		       mov     [ebp-8],	eax
.text:00401B1E		       add     dword ptr [ebp-1Ch], 1
.text:00401B22		       mov     eax, [ebp-8]
.text:00401B25		       mov     [ebp-4],	eax
.text:00401B28
.text:00401B28 loc_401B28:			       ; CODE XREF: .text:00401B13j
.text:00401B28		       cmp     dword ptr [ebp-4], 0
.text:00401B2C		       jnz     short loc_401B15
.text:00401B2E		       mov     eax, [ebp-1Ch]
.text:00401B31		       mov     edx, [ebp-20h]
.text:00401B34		       lea     eax, [edx+eax]
.text:00401B37		       mov     [ebp-28h], eax
.text:00401B3A
.text:00401B3A loc_401B3A:			       ; CODE XREF: .text:00401AD3j
.text:00401B3A		       mov     eax, [ebp-28h]
.text:00401B3D		       leave
.text:00401B3E		       retn
.text:00401B3F ; ---------------------------------------------------------------------------
.text:00401B3F		       push    ebp
.text:00401B40		       mov     ebp, esp
.text:00401B42		       sub     esp, 10h
.text:00401B45		       mov     eax, [ebp+8]
.text:00401B48		       mov     eax, [eax]
.text:00401B4A		       mov     [ebp-10h], eax
.text:00401B4D		       cmp     dword ptr [ebp-10h], 0
.text:00401B51		       jz      short locret_401BC0
.text:00401B53		       mov     eax, [ebp-10h]
.text:00401B56		       mov     eax, [eax+4]
.text:00401B59		       mov     [ebp-0Ch], eax
.text:00401B5C		       jmp     short loc_401B88
.text:00401B5E ; ---------------------------------------------------------------------------
.text:00401B5E
.text:00401B5E loc_401B5E:			       ; CODE XREF: .text:00401B8Cj
.text:00401B5E		       mov     eax, [ebp-10h]
.text:00401B61		       mov     eax, [eax+4]
.text:00401B64		       mov     [ebp-4],	eax
.text:00401B67		       mov     eax, [ebp-10h]
.text:00401B6A		       mov     eax, [eax+8]
.text:00401B6D		       mov     [ebp-8],	eax
.text:00401B70		       mov     edx, [ebp-10h]
.text:00401B73		       mov     eax, [ebp-8]
.text:00401B76		       mov     [edx+4],	eax
.text:00401B79		       mov     edx, [ebp-10h]
.text:00401B7C		       mov     eax, [ebp-4]
.text:00401B7F		       mov     [edx+8],	eax
.text:00401B82		       mov     eax, [ebp-8]
.text:00401B85		       mov     [ebp-10h], eax
.text:00401B88
.text:00401B88 loc_401B88:			       ; CODE XREF: .text:00401B5Cj
.text:00401B88		       cmp     dword ptr [ebp-10h], 0
.text:00401B8C		       jnz     short loc_401B5E
.text:00401B8E		       jmp     short loc_401BBA
.text:00401B90 ; ---------------------------------------------------------------------------
.text:00401B90
.text:00401B90 loc_401B90:			       ; CODE XREF: .text:00401BBEj
.text:00401B90		       mov     eax, [ebp-0Ch]
.text:00401B93		       mov     eax, [eax+4]
.text:00401B96		       mov     [ebp-4],	eax
.text:00401B99		       mov     eax, [ebp-0Ch]
.text:00401B9C		       mov     eax, [eax+8]
.text:00401B9F		       mov     [ebp-8],	eax
.text:00401BA2		       mov     edx, [ebp-0Ch]
.text:00401BA5		       mov     eax, [ebp-8]
.text:00401BA8		       mov     [edx+4],	eax
.text:00401BAB		       mov     edx, [ebp-0Ch]
.text:00401BAE		       mov     eax, [ebp-4]
.text:00401BB1		       mov     [edx+8],	eax
.text:00401BB4		       mov     eax, [ebp-4]
.text:00401BB7		       mov     [ebp-0Ch], eax
.text:00401BBA
.text:00401BBA loc_401BBA:			       ; CODE XREF: .text:00401B8Ej
.text:00401BBA		       cmp     dword ptr [ebp-0Ch], 0
.text:00401BBE		       jnz     short loc_401B90
.text:00401BC0
.text:00401BC0 locret_401BC0:			       ; CODE XREF: .text:00401B51j
.text:00401BC0		       leave
.text:00401BC1		       retn
.text:00401BC2
.text:00401BC2 ; =============== S U B R O U T I N E =======================================
.text:00401BC2
.text:00401BC2 ; Attributes: bp-based frame
.text:00401BC2
.text:00401BC2 sub_401BC2      proc near	       ; CODE XREF: sub_401C0B+23p
.text:00401BC2
.text:00401BC2 var_8	       = dword ptr -8
.text:00401BC2 arg_0	       = dword ptr  8
.text:00401BC2 arg_4	       = dword ptr  0Ch
.text:00401BC2 arg_8	       = dword ptr  10h
.text:00401BC2 arg_C	       = dword ptr  14h
.text:00401BC2
.text:00401BC2		       push    ebp
.text:00401BC3		       mov     ebp, esp
.text:00401BC5		       sub     esp, 8
.text:00401BC8		       mov     edx, [ebp+arg_0]
.text:00401BCB		       mov     eax, [ebp+arg_8]
.text:00401BCE		       mov     [edx+0Ch], eax
.text:00401BD1		       mov     edx, [ebp+arg_0]
.text:00401BD4		       mov     eax, [ebp+arg_C]
.text:00401BD7		       mov     [edx+10h], eax
.text:00401BDA		       mov     edx, [ebp+arg_0]
.text:00401BDD		       mov     eax, [ebp+arg_4]
.text:00401BE0		       mov     [edx+4],	eax
.text:00401BE3		       mov     edx, [ebp+arg_0]
.text:00401BE6		       mov     eax, [ebp+arg_4]
.text:00401BE9		       mov     [edx+8],	eax
.text:00401BEC		       cmp     [ebp+arg_4], 0
.text:00401BF0		       jz      short loc_401BFE
.text:00401BF2		       mov     eax, [ebp+arg_4]
.text:00401BF5		       mov     edx, [eax+4]
.text:00401BF8		       mov     eax, [ebp+arg_0]
.text:00401BFB		       mov     [eax+8],	edx
.text:00401BFE
.text:00401BFE loc_401BFE:			       ; CODE XREF: sub_401BC2+2Ej
.text:00401BFE		       mov     eax, [ebp+arg_0]
.text:00401C01		       mov     [esp+8+var_8], eax
.text:00401C04		       call    sub_401C3F
.text:00401C09		       leave
.text:00401C0A		       retn
.text:00401C0A sub_401BC2      endp
.text:00401C0A
.text:00401C0B
.text:00401C0B ; =============== S U B R O U T I N E =======================================
.text:00401C0B
.text:00401C0B ; Attributes: bp-based frame
.text:00401C0B
.text:00401C0B sub_401C0B      proc near	       ; CODE XREF: sub_401D24+11Dp
.text:00401C0B
.text:00401C0B var_18	       = dword ptr -18h
.text:00401C0B var_14	       = dword ptr -14h
.text:00401C0B var_10	       = dword ptr -10h
.text:00401C0B var_C	       = dword ptr -0Ch
.text:00401C0B arg_0	       = dword ptr  8
.text:00401C0B arg_4	       = dword ptr  0Ch
.text:00401C0B
.text:00401C0B		       push    ebp
.text:00401C0C		       mov     ebp, esp
.text:00401C0E		       sub     esp, 18h
.text:00401C11		       mov     [esp+18h+var_C],	0
.text:00401C19		       mov     [esp+18h+var_10], 0
.text:00401C21		       mov     eax, [ebp+arg_4]
.text:00401C24		       mov     [esp+18h+var_14], eax
.text:00401C28		       mov     eax, [ebp+arg_0]
.text:00401C2B		       mov     [esp+18h+var_18], eax
.text:00401C2E		       call    sub_401BC2
.text:00401C33		       leave
.text:00401C34		       retn
.text:00401C34 sub_401C0B      endp
.text:00401C34
.text:00401C35 ; ---------------------------------------------------------------------------
.text:00401C35		       push    ebp
.text:00401C36		       mov     ebp, esp
.text:00401C38		       mov     eax, [ebp+8]
.text:00401C3B		       mov     eax, [eax]
.text:00401C3D		       pop     ebp
.text:00401C3E		       retn
.text:00401C3F
.text:00401C3F ; =============== S U B R O U T I N E =======================================
.text:00401C3F
.text:00401C3F ; Attributes: bp-based frame
.text:00401C3F
.text:00401C3F sub_401C3F      proc near	       ; CODE XREF: sub_401BC2+42p
.text:00401C3F					       ; sub_401D24+138p
.text:00401C3F
.text:00401C3F var_18	       = dword ptr -18h
.text:00401C3F var_14	       = dword ptr -14h
.text:00401C3F var_C	       = dword ptr -0Ch
.text:00401C3F var_8	       = dword ptr -8
.text:00401C3F var_4	       = dword ptr -4
.text:00401C3F arg_0	       = dword ptr  8
.text:00401C3F
.text:00401C3F		       push    ebp
.text:00401C40		       mov     ebp, esp
.text:00401C42		       sub     esp, 18h
.text:00401C45		       mov     eax, [ebp+arg_0]
.text:00401C48		       mov     eax, [eax+4]
.text:00401C4B		       mov     [ebp+var_C], eax
.text:00401C4E		       mov     eax, [ebp+arg_0]
.text:00401C51		       mov     dword ptr [eax+4], 0
.text:00401C58		       mov     eax, [ebp+arg_0]
.text:00401C5B		       mov     eax, [eax+0Ch]
.text:00401C5E		       test    eax, eax
.text:00401C60		       jz      short loc_401C9B
.text:00401C62		       mov     eax, [ebp+arg_0]
.text:00401C65		       mov     eax, [eax+10h]
.text:00401C68		       mov     [ebp+var_8], eax
.text:00401C6B		       mov     eax, [ebp+arg_0]
.text:00401C6E		       mov     eax, [eax+0Ch]
.text:00401C71		       mov     [ebp+var_4], eax
.text:00401C74		       jmp     short loc_401C7F
.text:00401C76 ; ---------------------------------------------------------------------------
.text:00401C76
.text:00401C76 loc_401C76:			       ; CODE XREF: sub_401C3F+5Aj
.text:00401C76		       mov     eax, [ebp+var_C]
.text:00401C79		       mov     eax, [eax+8]
.text:00401C7C		       mov     [ebp+var_C], eax
.text:00401C7F
.text:00401C7F loc_401C7F:			       ; CODE XREF: sub_401C3F+35j
.text:00401C7F		       cmp     [ebp+var_C], 0
.text:00401C83		       jz      short loc_401C9B
.text:00401C85		       mov     eax, [ebp+var_C]
.text:00401C88		       mov     [esp+18h+var_14], eax
.text:00401C8C		       mov     eax, [ebp+var_8]
.text:00401C8F		       mov     [esp+18h+var_18], eax
.text:00401C92		       mov     eax, [ebp+var_4]
.text:00401C95		       call    eax
.text:00401C97		       test    eax, eax
.text:00401C99		       jnz     short loc_401C76
.text:00401C9B
.text:00401C9B loc_401C9B:			       ; CODE XREF: sub_401C3F+21j
.text:00401C9B					       ; sub_401C3F+44j
.text:00401C9B		       cmp     [ebp+var_C], 0
.text:00401C9F		       jz      short loc_401CAF
.text:00401CA1		       mov     eax, [ebp+var_C]
.text:00401CA4		       mov     edx, [eax+8]
.text:00401CA7		       mov     eax, [ebp+arg_0]
.text:00401CAA		       mov     [eax+4],	edx
.text:00401CAD		       jmp     short loc_401D17
.text:00401CAF ; ---------------------------------------------------------------------------
.text:00401CAF
.text:00401CAF loc_401CAF:			       ; CODE XREF: sub_401C3F+60j
.text:00401CAF		       mov     eax, [ebp+arg_0]
.text:00401CB2		       mov     eax, [eax+8]
.text:00401CB5		       mov     [ebp+var_C], eax
.text:00401CB8		       mov     eax, [ebp+arg_0]
.text:00401CBB		       mov     dword ptr [eax+8], 0
.text:00401CC2		       mov     eax, [ebp+arg_0]
.text:00401CC5		       mov     eax, [eax+0Ch]
.text:00401CC8		       test    eax, eax
.text:00401CCA		       jz      short loc_401D05
.text:00401CCC		       mov     eax, [ebp+arg_0]
.text:00401CCF		       mov     eax, [eax+10h]
.text:00401CD2		       mov     [ebp+var_8], eax
.text:00401CD5		       mov     eax, [ebp+arg_0]
.text:00401CD8		       mov     eax, [eax+0Ch]
.text:00401CDB		       mov     [ebp+var_4], eax
.text:00401CDE		       jmp     short loc_401CE9
.text:00401CE0 ; ---------------------------------------------------------------------------
.text:00401CE0
.text:00401CE0 loc_401CE0:			       ; CODE XREF: sub_401C3F+C4j
.text:00401CE0		       mov     eax, [ebp+var_C]
.text:00401CE3		       mov     eax, [eax+4]
.text:00401CE6		       mov     [ebp+var_C], eax
.text:00401CE9
.text:00401CE9 loc_401CE9:			       ; CODE XREF: sub_401C3F+9Fj
.text:00401CE9		       cmp     [ebp+var_C], 0
.text:00401CED		       jz      short loc_401D05
.text:00401CEF		       mov     eax, [ebp+var_8]
.text:00401CF2		       mov     [esp+18h+var_14], eax
.text:00401CF6		       mov     eax, [ebp+var_C]
.text:00401CF9		       mov     [esp+18h+var_18], eax
.text:00401CFC		       mov     eax, [ebp+var_4]
.text:00401CFF		       call    eax
.text:00401D01		       test    eax, eax
.text:00401D03		       jnz     short loc_401CE0
.text:00401D05
.text:00401D05 loc_401D05:			       ; CODE XREF: sub_401C3F+8Bj
.text:00401D05					       ; sub_401C3F+AEj
.text:00401D05		       cmp     [ebp+var_C], 0
.text:00401D09		       jz      short loc_401D17
.text:00401D0B		       mov     eax, [ebp+var_C]
.text:00401D0E		       mov     edx, [eax+4]
.text:00401D11		       mov     eax, [ebp+arg_0]
.text:00401D14		       mov     [eax+8],	edx
.text:00401D17
.text:00401D17 loc_401D17:			       ; CODE XREF: sub_401C3F+6Ej
.text:00401D17					       ; sub_401C3F+CAj
.text:00401D17		       mov     edx, [ebp+arg_0]
.text:00401D1A		       mov     eax, [ebp+var_C]
.text:00401D1D		       mov     [edx], eax
.text:00401D1F		       mov     eax, [ebp+var_C]
.text:00401D22		       leave
.text:00401D23		       retn
.text:00401D23 sub_401C3F      endp
.text:00401D23
.text:00401D24
.text:00401D24 ; =============== S U B R O U T I N E =======================================
.text:00401D24
.text:00401D24
.text:00401D24 sub_401D24      proc near	       ; DATA XREF: start+27o
.text:00401D24
.text:00401D24 var_4C	       = dword ptr -4Ch
.text:00401D24 var_48	       = dword ptr -48h
.text:00401D24 var_44	       = dword ptr -44h
.text:00401D24 arg_0	       = byte ptr  4
.text:00401D24
.text:00401D24		       lea     ecx, [esp+arg_0]
.text:00401D28		       and     esp, 0FFFFFFF0h
.text:00401D2B		       push    dword ptr [ecx-4]
.text:00401D2E		       push    ebp
.text:00401D2F		       mov     ebp, esp
.text:00401D31		       push    ecx
.text:00401D32		       sub     esp, 44h
.text:00401D35		       mov     [ebp-38h], ecx
.text:00401D38		       call    __main
.text:00401D3D		       mov     dword ptr [ebp-14h], 0
.text:00401D44		       mov     dword ptr [ebp-0Ch], 1
.text:00401D4B		       jmp     short loc_401D9F
.text:00401D4D ; ---------------------------------------------------------------------------
.text:00401D4D
.text:00401D4D loc_401D4D:			       ; CODE XREF: sub_401D24+83j
.text:00401D4D		       mov     eax, [ebp-0Ch]
.text:00401D50		       shl     eax, 2
.text:00401D53		       mov     edx, [ebp-38h]
.text:00401D56		       add     eax, [edx+4]
.text:00401D59		       mov     edx, [eax]
.text:00401D5B		       lea     eax, [ebp-10h]
.text:00401D5E		       mov     [esp+4Ch+var_44], eax
.text:00401D62		       mov     [esp+4Ch+var_48], offset	aD ; "%d"
.text:00401D6A		       mov     [esp+4Ch+var_4C], edx
.text:00401D6D		       call    sscanf
.text:00401D72		       mov     [esp+4Ch+var_4C], 0Ch
.text:00401D79		       call    malloc
.text:00401D7E		       mov     [ebp-8],	eax
.text:00401D81		       mov     edx, [ebp-10h]
.text:00401D84		       mov     eax, [ebp-8]
.text:00401D87		       mov     [eax], edx
.text:00401D89		       mov     eax, [ebp-8]
.text:00401D8C		       mov     [esp+4Ch+var_48], eax
.text:00401D90		       lea     eax, [ebp-14h]
.text:00401D93		       mov     [esp+4Ch+var_4C], eax
.text:00401D96		       call    sub_4011A0
.text:00401D9B		       add     dword ptr [ebp-0Ch], 1
.text:00401D9F
.text:00401D9F loc_401D9F:			       ; CODE XREF: sub_401D24+27j
.text:00401D9F		       mov     eax, [ebp-0Ch]
.text:00401DA2		       mov     edx, [ebp-38h]
.text:00401DA5		       cmp     eax, [edx]
.text:00401DA7		       jl      short loc_401D4D
.text:00401DA9		       lea     eax, [ebp-14h]
.text:00401DAC		       mov     [esp+4Ch+var_4C], eax
.text:00401DAF		       call    sub_4018D3
.text:00401DB4		       mov     eax, [ebp-14h]
.text:00401DB7		       mov     [esp+4Ch+var_4C], eax
.text:00401DBA		       call    sub_40186F
.text:00401DBF		       mov     [ebp-8],	eax
.text:00401DC2		       jmp     short loc_401DE2
.text:00401DC4 ; ---------------------------------------------------------------------------
.text:00401DC4
.text:00401DC4 loc_401DC4:			       ; CODE XREF: sub_401D24+C2j
.text:00401DC4		       mov     eax, [ebp-8]
.text:00401DC7		       mov     eax, [eax]
.text:00401DC9		       mov     [esp+4Ch+var_48], eax
.text:00401DCD		       mov     [esp+4Ch+var_4C], offset	aD_0 ; "%d "
.text:00401DD4		       call    printf
.text:00401DD9		       mov     eax, [ebp-8]
.text:00401DDC		       mov     eax, [eax+4]
.text:00401DDF		       mov     [ebp-8],	eax
.text:00401DE2
.text:00401DE2 loc_401DE2:			       ; CODE XREF: sub_401D24+9Ej
.text:00401DE2		       cmp     dword ptr [ebp-8], 0
.text:00401DE6		       jnz     short loc_401DC4
.text:00401DE8		       mov     [esp+4Ch+var_4C], 0Ah
.text:00401DEF		       call    putchar
.text:00401DF4		       mov     eax, [ebp-14h]
.text:00401DF7		       mov     [esp+4Ch+var_4C], eax
.text:00401DFA		       call    sub_4018A1
.text:00401DFF		       mov     [ebp-8],	eax
.text:00401E02		       jmp     short loc_401E22
.text:00401E04 ; ---------------------------------------------------------------------------
.text:00401E04
.text:00401E04 loc_401E04:			       ; CODE XREF: sub_401D24+102j
.text:00401E04		       mov     eax, [ebp-8]
.text:00401E07		       mov     eax, [eax]
.text:00401E09		       mov     [esp+4Ch+var_48], eax
.text:00401E0D		       mov     [esp+4Ch+var_4C], offset	aD_0 ; "%d "
.text:00401E14		       call    printf
.text:00401E19		       mov     eax, [ebp-8]
.text:00401E1C		       mov     eax, [eax+8]
.text:00401E1F		       mov     [ebp-8],	eax
.text:00401E22
.text:00401E22 loc_401E22:			       ; CODE XREF: sub_401D24+DEj
.text:00401E22		       cmp     dword ptr [ebp-8], 0
.text:00401E26		       jnz     short loc_401E04
.text:00401E28		       mov     [esp+4Ch+var_4C], 0Ah
.text:00401E2F		       call    putchar
.text:00401E34		       mov     eax, [ebp-14h]
.text:00401E37		       mov     [esp+4Ch+var_48], eax
.text:00401E3B		       lea     eax, [ebp-28h]
.text:00401E3E		       mov     [esp+4Ch+var_4C], eax
.text:00401E41		       call    sub_401C0B
.text:00401E46		       mov     [ebp-8],	eax
.text:00401E49		       jmp     short loc_401E64
.text:00401E4B ; ---------------------------------------------------------------------------
.text:00401E4B
.text:00401E4B loc_401E4B:			       ; CODE XREF: sub_401D24+144j
.text:00401E4B		       mov     eax, [ebp-8]
.text:00401E4E		       mov     [esp+4Ch+var_4C], eax
.text:00401E51		       call    free
.text:00401E56		       lea     eax, [ebp-28h]
.text:00401E59		       mov     [esp+4Ch+var_4C], eax
.text:00401E5C		       call    sub_401C3F
.text:00401E61		       mov     [ebp-8],	eax
.text:00401E64
.text:00401E64 loc_401E64:			       ; CODE XREF: sub_401D24+125j
.text:00401E64		       cmp     dword ptr [ebp-8], 0
.text:00401E68		       jnz     short loc_401E4B
.text:00401E6A		       mov     eax, 0
.text:00401E6F		       add     esp, 44h
.text:00401E72		       pop     ecx
.text:00401E73		       pop     ebp
.text:00401E74		       lea     esp, [ecx-4]
.text:00401E77		       retn
.text:00401E77 sub_401D24      endp
.text:00401E77
.text:00401E78 ; [00000006 BYTES: COLLAPSED FUNCTION __deregister_frame_info. PRESS KEYPAD "+" TO EXPAND]
.text:00401E7E		       align 10h
.text:00401E80 ; [00000006 BYTES: COLLAPSED FUNCTION __register_frame_info. PRESS KEYPAD "+" TO	EXPAND]
.text:00401E86		       align 10h
.text:00401E90
.text:00401E90 ; =============== S U B R O U T I N E =======================================
.text:00401E90
.text:00401E90 ; Attributes: bp-based frame
.text:00401E90
.text:00401E90 sub_401E90      proc near	       ; CODE XREF: start+2Ep
.text:00401E90
.text:00401E90 var_8	       = dword ptr -8
.text:00401E90 var_4	       = dword ptr -4
.text:00401E90 arg_0	       = dword ptr  8
.text:00401E90
.text:00401E90		       push    ebp
.text:00401E91		       mov     ebp, esp
.text:00401E93		       sub     esp, 8
.text:00401E96		       mov     eax, [ebp+arg_0]
.text:00401E99		       mov     [esp+8+var_4], 0
.text:00401EA1		       mov     [esp+8+var_8], eax
.text:00401EA4		       call    sub_401F30
.text:00401EA9		       sub     esp, 8
.text:00401EAC		       call    ds:_dll_crt0@0  ; dll_crt0()
.text:00401EB2		       nop
.text:00401EB3		       nop
.text:00401EB4		       nop
.text:00401EB5		       nop
.text:00401EB6		       nop
.text:00401EB7		       nop
.text:00401EB8		       nop
.text:00401EB9		       nop
.text:00401EBA		       nop
.text:00401EBB		       nop
.text:00401EBC		       nop
.text:00401EBD		       nop
.text:00401EBE		       nop
.text:00401EBF		       nop
.text:00401EBF sub_401E90      endp ; sp-analysis failed
.text:00401EBF
.text:00401EC0
.text:00401EC0 ; =============== S U B R O U T I N E =======================================
.text:00401EC0
.text:00401EC0 ; Attributes: bp-based frame
.text:00401EC0
.text:00401EC0 sub_401EC0      proc near	       ; CODE XREF: start+4Ap
.text:00401EC0					       ; DATA XREF: sub_401F30+72o ...
.text:00401EC0		       push    ebp
.text:00401EC1		       mov     ebp, esp
.text:00401EC3		       pop     ebp
.text:00401EC4		       retn
.text:00401EC4 sub_401EC0      endp
.text:00401EC4
.text:00401EC4 ; ---------------------------------------------------------------------------
.text:00401EC5		       align 10h
.text:00401ED0
.text:00401ED0 ; =============== S U B R O U T I N E =======================================
.text:00401ED0
.text:00401ED0 ; Attributes: bp-based frame
.text:00401ED0
.text:00401ED0 sub_401ED0      proc near	       ; CODE XREF: start+66p
.text:00401ED0					       ; DATA XREF: sub_401F30+79o ...
.text:00401ED0		       push    ebp
.text:00401ED1		       mov     ebp, esp
.text:00401ED3		       pop     ebp
.text:00401ED4		       retn
.text:00401ED4 sub_401ED0      endp
.text:00401ED4
.text:00401ED4 ; ---------------------------------------------------------------------------
.text:00401ED5		       align 10h
.text:00401EE0
.text:00401EE0 ; =============== S U B R O U T I N E =======================================
.text:00401EE0
.text:00401EE0 ; Attributes: bp-based frame
.text:00401EE0
.text:00401EE0 sub_401EE0      proc near	       ; CODE XREF: start+82p
.text:00401EE0					       ; DATA XREF: sub_401F30+80o ...
.text:00401EE0		       push    ebp
.text:00401EE1		       mov     ebp, esp
.text:00401EE3		       pop     ebp
.text:00401EE4		       retn
.text:00401EE4 sub_401EE0      endp
.text:00401EE4
.text:00401EE4 ; ---------------------------------------------------------------------------
.text:00401EE5		       align 10h
.text:00401EF0
.text:00401EF0 ; =============== S U B R O U T I N E =======================================
.text:00401EF0
.text:00401EF0 ; Attributes: bp-based frame
.text:00401EF0
.text:00401EF0 sub_401EF0      proc near	       ; CODE XREF: start+9Ep
.text:00401EF0					       ; DATA XREF: sub_401F30+87o ...
.text:00401EF0		       push    ebp
.text:00401EF1		       mov     ebp, esp
.text:00401EF3		       pop     ebp
.text:00401EF4		       retn
.text:00401EF4 sub_401EF0      endp
.text:00401EF4
.text:00401EF4 ; ---------------------------------------------------------------------------
.text:00401EF5		       align 10h
.text:00401F00 ; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
.text:00401F06		       align 4
.text:00401F08 ; [00000006 BYTES: COLLAPSED FUNCTION sscanf. PRESS KEYPAD "+" TO EXPAND]
.text:00401F0E		       align 10h
.text:00401F10 ; [00000006 BYTES: COLLAPSED FUNCTION malloc. PRESS KEYPAD "+" TO EXPAND]
.text:00401F16		       align 4
.text:00401F18 ; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
.text:00401F1E		       align 10h
.text:00401F20 ; [00000006 BYTES: COLLAPSED FUNCTION free. PRESS KEYPAD	"+" TO EXPAND]
.text:00401F26		       align 4
.text:00401F28 ; [00000006 BYTES: COLLAPSED FUNCTION putchar. PRESS KEYPAD "+" TO EXPAND]
.text:00401F2E		       align 10h
.text:00401F30
.text:00401F30 ; =============== S U B R O U T I N E =======================================
.text:00401F30
.text:00401F30 ; Attributes: bp-based frame
.text:00401F30
.text:00401F30 sub_401F30      proc near	       ; CODE XREF: sub_401E90+14p
.text:00401F30					       ; sub_402390+18p
.text:00401F30
.text:00401F30 var_18	       = dword ptr -18h
.text:00401F30 arg_0	       = dword ptr  8
.text:00401F30 arg_4	       = dword ptr  0Ch
.text:00401F30
.text:00401F30		       push    ebp
.text:00401F31		       mov     ebp, esp
.text:00401F33		       push    esi
.text:00401F34		       push    ebx
.text:00401F35		       sub     esp, 10h
.text:00401F38		       mov     ebx, [ebp+arg_4]
.text:00401F3B		       mov     esi, [ebp+arg_0]
.text:00401F3E		       mov     [esp+18h+var_18], 8
.text:00401F45		       call    cygwin_internal
.text:00401F4A		       test    ebx, ebx
.text:00401F4C		       mov     ecx, eax
.text:00401F4E		       jz      loc_402110
.text:00401F54		       mov     eax, ds:_impure_ptr
.text:00401F59		       test    ecx, ecx
.text:00401F5B		       mov     dword ptr [ebx+4], 0A8h
.text:00401F62		       mov     dword ptr [ebx+8], 3EFh
.text:00401F69		       mov     dword ptr [ebx+0Ch], 7
.text:00401F70		       mov     [ebx+10h], eax
.text:00401F73		       mov     eax, [ebp+0]
.text:00401F76		       mov     dword ptr [ebx+80h], 0
.text:00401F80		       mov     dword ptr [ebx+84h], 0E6h
.text:00401F8A		       mov     dword ptr [ebx+2Ch], offset dword_402430
.text:00401F91		       mov     dword ptr [ebx+30h], offset dword_40243C
.text:00401F98		       mov     dword ptr [ebx+14h], offset dword_405020
.text:00401F9F		       mov     [ebx+28h], esi
.text:00401FA2		       mov     dword ptr [ebx+48h], offset sub_401EC0
.text:00401FA9		       mov     dword ptr [ebx+4Ch], offset sub_401ED0
.text:00401FB0		       mov     dword ptr [ebx+50h], offset sub_401EE0
.text:00401FB7		       mov     dword ptr [ebx+54h], offset sub_401EF0
.text:00401FBE		       mov     dword ptr [ebx+24h], offset dword_405024
.text:00401FC5		       mov     [ebx], eax
.text:00401FC7		       mov     dword ptr [ebx+18h], offset malloc
.text:00401FCE		       mov     dword ptr [ebx+1Ch], offset free
.text:00401FD5		       mov     dword ptr [ebx+20h], offset loc_402380
.text:00401FDC		       mov     dword ptr [ebx+44h], offset loc_402388
.text:00401FE3		       jz      loc_4020AA
.text:00401FE9
.text:00401FE9 loc_401FE9:			       ; CODE XREF: sub_401F30+277j
.text:00401FE9		       mov     edx, [ecx+78h]
.text:00401FEC		       test    edx, edx
.text:00401FEE		       jz      loc_4020AA
.text:00401FF4		       mov     eax, ds:dword_405028
.text:00401FF9		       test    eax, eax
.text:00401FFB		       jnz     loc_4020AA
.text:00402001		       mov     eax, dword_403020
.text:00402006		       test    eax, eax
.text:00402008		       jz      loc_402220
.text:0040200E
.text:0040200E loc_40200E:			       ; CODE XREF: sub_401F30+2F7j
.text:0040200E		       mov     eax, dword_403024
.text:00402013		       test    eax, eax
.text:00402015		       jz      loc_402210
.text:0040201B
.text:0040201B loc_40201B:			       ; CODE XREF: sub_401F30+2E8j
.text:0040201B		       mov     eax, dword_403028
.text:00402020		       test    eax, eax
.text:00402022		       jz      loc_402200
.text:00402028
.text:00402028 loc_402028:			       ; CODE XREF: sub_401F30+2D8j
.text:00402028		       mov     eax, dword_40302C
.text:0040202D		       test    eax, eax
.text:0040202F		       jz      loc_4021F0
.text:00402035
.text:00402035 loc_402035:			       ; CODE XREF: sub_401F30+2C8j
.text:00402035		       mov     eax, dword_403030
.text:0040203A		       test    eax, eax
.text:0040203C		       jz      loc_4021E0
.text:00402042
.text:00402042 loc_402042:			       ; CODE XREF: sub_401F30+2B8j
.text:00402042		       mov     esi, dword_403034
.text:00402048		       test    esi, esi
.text:0040204A		       jz      loc_4021D0
.text:00402050
.text:00402050 loc_402050:			       ; CODE XREF: sub_401F30+2A8j
.text:00402050		       mov     ecx, dword_403038
.text:00402056		       test    ecx, ecx
.text:00402058		       jz      loc_4021C0
.text:0040205E
.text:0040205E loc_40205E:			       ; CODE XREF: sub_401F30+298j
.text:0040205E		       mov     eax, dword_40303C
.text:00402063		       test    eax, eax
.text:00402065		       jz      loc_4021B2
.text:0040206B
.text:0040206B loc_40206B:			       ; CODE XREF: sub_401F30+28Aj
.text:0040206B		       mov     eax, dword_403020
.text:00402070		       mov     [edx], eax
.text:00402072		       mov     eax, dword_403024
.text:00402077		       mov     [edx+4],	eax
.text:0040207A		       mov     eax, dword_403028
.text:0040207F		       mov     [edx+8],	eax
.text:00402082		       mov     eax, dword_40302C
.text:00402087		       mov     [edx+0Ch], eax
.text:0040208A		       mov     eax, dword_403030
.text:0040208F		       mov     [edx+10h], eax
.text:00402092		       mov     eax, dword_403034
.text:00402097		       mov     [edx+14h], eax
.text:0040209A		       mov     eax, dword_403038
.text:0040209F		       mov     [edx+18h], eax
.text:004020A2		       mov     eax, dword_40303C
.text:004020A7		       mov     [edx+1Ch], eax
.text:004020AA
.text:004020AA loc_4020AA:			       ; CODE XREF: sub_401F30+B3j
.text:004020AA					       ; sub_401F30+BEj ...
.text:004020AA		       mov     [esp+18h+var_18], 0
.text:004020B1		       call    GetModuleHandleA
.text:004020B6		       mov     dword ptr [ebx+34h], offset off_403000
.text:004020BD		       mov     dword ptr [ebx+38h], offset dword_4030AC
.text:004020C4		       mov     dword ptr [ebx+3Ch], offset dword_405000
.text:004020CB		       mov     dword ptr [ebx+40h], offset dword_405130
.text:004020D2		       mov     dword ptr [ebx+94h], offset dword_404000
.text:004020DC		       mov     [ebx+7Ch], eax
.text:004020DF		       sub     esp, 4
.text:004020E2		       mov     dword ptr [ebx+98h], offset dword_404000
.text:004020EC		       mov     dword ptr [ebx+9Ch], 400000h
.text:004020F6		       call    sub_402370
.text:004020FB		       lea     esp, [ebp-8]
.text:004020FE		       mov     eax, 1
.text:00402103		       pop     ebx
.text:00402104		       pop     esi
.text:00402105		       pop     ebp
.text:00402106		       retn    8
.text:00402106 ; ---------------------------------------------------------------------------
.text:00402109		       align 10h
.text:00402110
.text:00402110 loc_402110:			       ; CODE XREF: sub_401F30+1Ej
.text:00402110		       mov     dword ptr [eax+4], 0A8h
.text:00402117		       mov     edx, ds:_impure_ptr
.text:0040211D		       test    ecx, ecx
.text:0040211F		       mov     dword ptr [eax+8], 3EFh
.text:00402126		       mov     ebx, ecx
.text:00402128		       mov     dword ptr [eax+0Ch], 7
.text:0040212F		       mov     dword ptr [eax+80h], 0
.text:00402139		       mov     dword ptr [eax+84h], 0E6h
.text:00402143		       mov     dword ptr [eax+2Ch], offset dword_402430
.text:0040214A		       mov     dword ptr [eax+30h], offset dword_40243C
.text:00402151		       mov     dword ptr [eax+14h], offset dword_405020
.text:00402158		       mov     eax, [eax+0A4h]
.text:0040215E		       mov     [ecx+28h], esi
.text:00402161		       mov     dword ptr [ecx+48h], offset sub_401EC0
.text:00402168		       mov     dword ptr [ecx+4Ch], offset sub_401ED0
.text:0040216F		       mov     [edx], eax
.text:00402171		       mov     eax, [ebp+0]
.text:00402174		       mov     dword ptr [ecx+50h], offset sub_401EE0
.text:0040217B		       mov     dword ptr [ecx+54h], offset sub_401EF0
.text:00402182		       mov     dword ptr [ecx+24h], offset dword_405024
.text:00402189		       mov     [ecx], eax
.text:0040218B		       mov     dword ptr [ecx+18h], offset malloc
.text:00402192		       mov     dword ptr [ecx+1Ch], offset free
.text:00402199		       mov     dword ptr [ecx+20h], offset loc_402380
.text:004021A0		       mov     dword ptr [ecx+44h], offset loc_402388
.text:004021A7		       jnz     loc_401FE9
.text:004021AD		       jmp     loc_4020AA
.text:004021B2 ; ---------------------------------------------------------------------------
.text:004021B2
.text:004021B2 loc_4021B2:			       ; CODE XREF: sub_401F30+135j
.text:004021B2		       mov     eax, [edx+1Ch]
.text:004021B5		       mov     dword_40303C, eax
.text:004021BA		       jmp     loc_40206B
.text:004021BA ; ---------------------------------------------------------------------------
.text:004021BF		       align 10h
.text:004021C0
.text:004021C0 loc_4021C0:			       ; CODE XREF: sub_401F30+128j
.text:004021C0		       mov     eax, [edx+18h]
.text:004021C3		       mov     dword_403038, eax
.text:004021C8		       jmp     loc_40205E
.text:004021C8 ; ---------------------------------------------------------------------------
.text:004021CD		       align 10h
.text:004021D0
.text:004021D0 loc_4021D0:			       ; CODE XREF: sub_401F30+11Aj
.text:004021D0		       mov     eax, [edx+14h]
.text:004021D3		       mov     dword_403034, eax
.text:004021D8		       jmp     loc_402050
.text:004021D8 ; ---------------------------------------------------------------------------
.text:004021DD		       align 10h
.text:004021E0
.text:004021E0 loc_4021E0:			       ; CODE XREF: sub_401F30+10Cj
.text:004021E0		       mov     eax, [edx+10h]
.text:004021E3		       mov     dword_403030, eax
.text:004021E8		       jmp     loc_402042
.text:004021E8 ; ---------------------------------------------------------------------------
.text:004021ED		       align 10h
.text:004021F0
.text:004021F0 loc_4021F0:			       ; CODE XREF: sub_401F30+FFj
.text:004021F0		       mov     eax, [edx+0Ch]
.text:004021F3		       mov     dword_40302C, eax
.text:004021F8		       jmp     loc_402035
.text:004021F8 ; ---------------------------------------------------------------------------
.text:004021FD		       align 10h
.text:00402200
.text:00402200 loc_402200:			       ; CODE XREF: sub_401F30+F2j
.text:00402200		       mov     eax, [edx+8]
.text:00402203		       mov     dword_403028, eax
.text:00402208		       jmp     loc_402028
.text:00402208 ; ---------------------------------------------------------------------------
.text:0040220D		       align 10h
.text:00402210
.text:00402210 loc_402210:			       ; CODE XREF: sub_401F30+E5j
.text:00402210		       mov     eax, [edx+4]
.text:00402213		       mov     dword_403024, eax
.text:00402218		       jmp     loc_40201B
.text:00402218 ; ---------------------------------------------------------------------------
.text:0040221D		       align 10h
.text:00402220
.text:00402220 loc_402220:			       ; CODE XREF: sub_401F30+D8j
.text:00402220		       mov     eax, [edx]
.text:00402222		       mov     dword_403020, eax
.text:00402227		       jmp     loc_40200E
.text:00402227 sub_401F30      endp
.text:00402227
.text:00402227 ; ---------------------------------------------------------------------------
.text:0040222C		       align 10h
.text:00402230
.text:00402230 ; =============== S U B R O U T I N E =======================================
.text:00402230
.text:00402230 ; Attributes: bp-based frame
.text:00402230
.text:00402230 sub_402230      proc near	       ; DATA XREF: .text:00402324o
.text:00402230
.text:00402230 var_18	       = dword ptr -18h
.text:00402230 var_14	       = dword ptr -14h
.text:00402230 var_10	       = dword ptr -10h
.text:00402230
.text:00402230		       push    ebp
.text:00402231		       mov     ebp, esp
.text:00402233		       sub     esp, 18h
.text:00402236		       mov     eax, ds:dword_405050
.text:0040223B		       mov     [esp+18h+var_10], eax
.text:0040223F		       mov     eax, ds:dword_405040
.text:00402244		       mov     [esp+18h+var_14], eax
.text:00402248		       mov     eax, ds:dword_405030
.text:0040224D		       mov     [esp+18h+var_18], eax
.text:00402250		       call    sub_4023E0
.text:00402255		       sub     esp, 0Ch
.text:00402258		       leave
.text:00402259		       retn
.text:00402259 sub_402230      endp
.text:00402259
.text:00402259 ; ---------------------------------------------------------------------------
.text:0040225A		       align 10h
.text:00402260
.text:00402260 loc_402260:			       ; CODE XREF: .text:00402354j
.text:00402260		       push    ebp
.text:00402261		       mov     ebp, esp
.text:00402263		       push    ebx
.text:00402264		       sub     esp, 14h
.text:00402267		       mov     eax, [ebp+0Ch]
.text:0040226A		       mov     ecx, [ebp+8]
.text:0040226D		       mov     edx, [ebp+10h]
.text:00402270		       cmp     eax, 1
.text:00402273		       jz      loc_402300
.text:00402279		       jb      short loc_402293
.text:0040227B		       cmp     eax, 2
.text:0040227E		       jz      short loc_4022E6
.text:00402280		       cmp     eax, 3
.text:00402283		       mov     ebx, 1
.text:00402288		       jz      short loc_4022D0
.text:0040228A
.text:0040228A loc_40228A:			       ; CODE XREF: .text:004022AEj
.text:0040228A					       ; .text:004022C7j
.text:0040228A		       mov     eax, ebx
.text:0040228C		       mov     ebx, [ebp-4]
.text:0040228F		       leave
.text:00402290		       retn    0Ch
.text:00402293 ; ---------------------------------------------------------------------------
.text:00402293
.text:00402293 loc_402293:			       ; CODE XREF: .text:00402279j
.text:00402293		       mov     [esp+8],	edx
.text:00402297		       mov     dword ptr [esp+4], 0
.text:0040229F		       mov     [esp], ecx
.text:004022A2		       call    sub_4023E0
.text:004022A7		       sub     esp, 0Ch
.text:004022AA		       test    eax, eax
.text:004022AC		       mov     ebx, eax
.text:004022AE		       jz      short loc_40228A
.text:004022B0		       mov     eax, ds:dword_405060
.text:004022B5		       mov     [esp], eax
.text:004022B8		       call    cygwin_detach_dll
.text:004022BD		       mov     ds:dword_405060,	0FFFFFFFFh
.text:004022C7		       jmp     short loc_40228A
.text:004022C7 ; ---------------------------------------------------------------------------
.text:004022C9		       align 10h
.text:004022D0
.text:004022D0 loc_4022D0:			       ; CODE XREF: .text:00402288j
.text:004022D0		       mov     [ebp+10h], edx
.text:004022D3		       mov     ebx, [ebp-4]
.text:004022D6		       mov     dword ptr [ebp+0Ch], 3
.text:004022DD		       mov     [ebp+8],	ecx
.text:004022E0		       leave
.text:004022E1		       jmp     sub_4023E0
.text:004022E6 ; ---------------------------------------------------------------------------
.text:004022E6
.text:004022E6 loc_4022E6:			       ; CODE XREF: .text:0040227Ej
.text:004022E6		       mov     [ebp+10h], edx
.text:004022E9		       mov     ebx, [ebp-4]
.text:004022EC		       mov     dword ptr [ebp+0Ch], 2
.text:004022F3		       mov     [ebp+8],	ecx
.text:004022F6		       leave
.text:004022F7		       jmp     sub_4023E0
.text:004022F7 ; ---------------------------------------------------------------------------
.text:004022FC		       align 10h
.text:00402300
.text:00402300 loc_402300:			       ; CODE XREF: .text:00402273j
.text:00402300		       xor     eax, eax
.text:00402302		       test    edx, edx
.text:00402304		       setz    al
.text:00402307		       xor     ebx, ebx
.text:00402309		       mov     ds:dword_405030,	ecx
.text:0040230F		       mov     ds:dword_405040,	1
.text:00402319		       mov     ds:dword_405050,	edx
.text:0040231F		       mov     ds:dword_405028,	eax
.text:00402324		       mov     dword ptr [esp+4], offset sub_402230
.text:0040232C		       mov     [esp], ecx
.text:0040232F		       call    sub_402390
.text:00402334		       cmp     eax, 0FFFFFFFFh
.text:00402337		       setnz   bl
.text:0040233A		       mov     ds:dword_405060,	eax
.text:0040233F		       mov     eax, ebx
.text:00402341		       mov     ebx, [ebp-4]
.text:00402344		       leave
.text:00402345		       retn    0Ch
.text:00402345 ; ---------------------------------------------------------------------------
.text:00402348		       align 10h
.text:00402350		       push    ebp
.text:00402351		       mov     ebp, esp
.text:00402353		       leave
.text:00402354		       jmp     loc_402260
.text:00402354 ; ---------------------------------------------------------------------------
.text:00402359		       align 10h
.text:00402360 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+" TO EXPAND]
.text:00402366		       align 10h
.text:00402370
.text:00402370 ; =============== S U B R O U T I N E =======================================
.text:00402370
.text:00402370 ; Attributes: bp-based frame
.text:00402370
.text:00402370 sub_402370      proc near	       ; CODE XREF: sub_401F30+1C6p
.text:00402370		       push    ebp
.text:00402371		       mov     ebp, esp
.text:00402373		       pop     ebp
.text:00402374		       retn
.text:00402374 sub_402370      endp
.text:00402374
.text:00402374 ; ---------------------------------------------------------------------------
.text:00402375		       align 10h
.text:00402380
.text:00402380 loc_402380:			       ; DATA XREF: sub_401F30+A5o
.text:00402380					       ; sub_401F30+269o
.text:00402380		       jmp     ds:realloc
.text:00402380 ; ---------------------------------------------------------------------------
.text:00402386		       align 4
.text:00402388
.text:00402388 loc_402388:			       ; DATA XREF: sub_401F30+ACo
.text:00402388					       ; sub_401F30+270o
.text:00402388		       jmp     ds:calloc
.text:00402388 ; ---------------------------------------------------------------------------
.text:0040238E		       align 10h
.text:00402390
.text:00402390 ; =============== S U B R O U T I N E =======================================
.text:00402390
.text:00402390 ; Attributes: bp-based frame
.text:00402390
.text:00402390 sub_402390      proc near	       ; CODE XREF: .text:0040232Fp
.text:00402390
.text:00402390 var_18	       = dword ptr -18h
.text:00402390 var_14	       = dword ptr -14h
.text:00402390 var_4	       = dword ptr -4
.text:00402390 arg_0	       = dword ptr  8
.text:00402390 arg_4	       = dword ptr  0Ch
.text:00402390
.text:00402390 ; FUNCTION CHUNK	AT .text:004023F0 SIZE 00000006	BYTES
.text:00402390
.text:00402390		       push    ebp
.text:00402391		       mov     ebp, esp
.text:00402393		       push    ebx
.text:00402394		       sub     esp, 14h
.text:00402397		       mov     ebx, [ebp+arg_0]
.text:0040239A		       mov     [esp+18h+var_14], offset	dword_405070
.text:004023A2		       mov     eax, [ebp+arg_4]
.text:004023A5		       mov     [esp+18h+var_18], eax
.text:004023A8		       call    sub_401F30
.text:004023AD		       mov     [ebp+arg_0], ebx
.text:004023B0		       mov     ebx, [ebp+var_4]
.text:004023B3		       mov     [ebp+arg_4], offset dword_405070
.text:004023BA		       sub     esp, 8
.text:004023BD		       leave
.text:004023BE		       jmp     loc_4023F0
.text:004023BE sub_402390      endp
.text:004023BE
.text:004023BE ; ---------------------------------------------------------------------------
.text:004023C3		       align 10h
.text:004023D0 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_detach_dll.	PRESS KEYPAD "+" TO EXPAND]
.text:004023D6		       align 10h
.text:004023E0
.text:004023E0 ; =============== S U B R O U T I N E =======================================
.text:004023E0
.text:004023E0 ; Attributes: bp-based frame
.text:004023E0
.text:004023E0 sub_4023E0      proc near	       ; CODE XREF: sub_402230+20p
.text:004023E0					       ; .text:004022A2p ...
.text:004023E0		       push    ebp
.text:004023E1		       mov     eax, 1
.text:004023E6		       mov     ebp, esp
.text:004023E8		       pop     ebp
.text:004023E9		       retn    0Ch
.text:004023E9 sub_4023E0      endp
.text:004023E9
.text:004023E9 ; ---------------------------------------------------------------------------
.text:004023EC		       align 10h
.text:004023F0 ; START OF FUNCTION CHUNK FOR sub_402390
.text:004023F0
.text:004023F0 loc_4023F0:			       ; CODE XREF: sub_402390+2Ej
.text:004023F0		       jmp     ds:dll_dllcrt0
.text:004023F0 ; END OF	FUNCTION CHUNK FOR sub_402390
.text:004023F0 ; ---------------------------------------------------------------------------
.text:004023F6		       align 4
.text:004023F8 ; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA. PRESS KEYPAD "+"	TO EXPAND]
.text:004023FE		       align 10h
.text:00402400 ; [00000006 BYTES: COLLAPSED FUNCTION GetProcAddress. PRESS KEYPAD "+" TO EXPAND]
.text:00402406		       align 10h
.text:00402410		       push    ebp
.text:00402411		       mov     ebp, esp
.text:00402413		       pop     ebp
.text:00402414		       jmp     loc_4010B0
.text:00402414 ; ---------------------------------------------------------------------------
.text:00402419		       align 10h
.text:00402420		       push    ebp
.text:00402421		       mov     ebp, esp
.text:00402423		       pop     ebp
.text:00402424		       jmp     loc_401150
.text:00402424 ; ---------------------------------------------------------------------------
.text:00402429		       align 10h
.text:00402430 dword_402430    dd 0FFFFFFFFh, 402410h, 0 ; DATA	XREF: sub_401F30+5Ao
.text:00402430					       ; sub_401F30+213o
.text:0040243C dword_40243C    dd 0FFFFFFFFh, 402420h, 6Fh dup(0)
.text:0040243C					       ; DATA XREF: sub_401F30+61o
.text:0040243C					       ; sub_401F30+21Ao
.text:00402600		       dd 280h dup(?)
.text:00402600 _text	       ends
.text:00402600
.data:00403000 ; Section 2. (virtual address 00003000)
.data:00403000 ; Virtual size		       : 000000AC (    172.)
.data:00403000 ; Section size in file	       : 00000200 (    512.)
.data:00403000 ; Offset	to raw data for	section: 00001A00
.data:00403000 ; Flags C0600040: Data Readable Writable
.data:00403000 ; Alignment     : 32 bytes
.data:00403000 ; ===========================================================================
.data:00403000
.data:00403000 ; Segment type: Pure data
.data:00403000 ; Segment permissions: Read/Write
.data:00403000 ; Segment alignment '32byte' can not be represented in assembly
.data:00403000 _data	       segment para public 'DATA' use32
.data:00403000		       assume cs:_data
.data:00403000		       ;org 403000h
.data:00403000 off_403000      dd offset __register_frame_info
.data:00403000					       ; DATA XREF: .text:loc_401130r
.data:00403000					       ; sub_401F30+186o
.data:00403004 off_403004      dd offset __deregister_frame_info
.data:00403004					       ; DATA XREF: .text:loc_401190r
.data:00403008 dword_403008    dd 0		       ; DATA XREF: .text:loc_401140r
.data:0040300C		       align 20h
.data:00403020 dword_403020    dd 0		       ; DATA XREF: sub_401F30+D1r
.data:00403020					       ; sub_401F30:loc_40206Br ...
.data:00403024 dword_403024    dd 0		       ; DATA XREF: sub_401F30:loc_40200Er
.data:00403024					       ; sub_401F30+142r ...
.data:00403028 dword_403028    dd 0		       ; DATA XREF: sub_401F30:loc_40201Br
.data:00403028					       ; sub_401F30+14Ar ...
.data:0040302C dword_40302C    dd 0		       ; DATA XREF: sub_401F30:loc_402028r
.data:0040302C					       ; sub_401F30+152r ...
.data:00403030 dword_403030    dd 0		       ; DATA XREF: sub_401F30:loc_402035r
.data:00403030					       ; sub_401F30+15Ar ...
.data:00403034 dword_403034    dd 0		       ; DATA XREF: sub_401F30:loc_402042r
.data:00403034					       ; sub_401F30+162r ...
.data:00403038 dword_403038    dd 0		       ; DATA XREF: sub_401F30:loc_402050r
.data:00403038					       ; sub_401F30+16Ar ...
.data:0040303C dword_40303C    dd 0		       ; DATA XREF: sub_401F30:loc_40205Er
.data:0040303C					       ; sub_401F30+172r ...
.data:00403040 aCyggcc_s1_dll  db 'cyggcc_s-1.dll',0   ; DATA XREF: .text:004010B6o
.data:00403040					       ; .text:00401156o
.data:0040304F a__register_fra db '__register_frame_info',0 ; DATA XREF: .text:004010C9o
.data:00403065 aCyggcj9_dll    db 'cyggcj-9.dll',0     ; DATA XREF: .text:004010FAo
.data:00403072 a_jv_registercl db '_Jv_RegisterClasses',0 ; DATA XREF: .text:0040110Do
.data:00403086 a__deregister_f db '__deregister_frame_info',0 ; DATA XREF: .text:00401169o
.data:0040309E		       align 10h
.data:004030A0 aD	       db '%d',0               ; DATA XREF: sub_401D24+3Eo
.data:004030A3 aD_0	       db '%d ',0              ; DATA XREF: sub_401D24+A9o
.data:004030A3					       ; sub_401D24+E9o
.data:004030A7		       align 4
.data:004030A8 dword_4030A8    dd 0		       ; DATA XREF: .text:loc_4010F1r
.data:004030A8					       ; .text:loc_401124o
.data:004030AC dword_4030AC    dd 55h dup(0)	       ; DATA XREF: sub_401F30+18Do
.data:00403200		       align 1000h
.data:00403200 _data	       ends
.data:00403200
.eh_frame:00404000 ; Section 3.	(virtual address 00004000)
.eh_frame:00404000 ; Virtual size		   : 00000004 (	     4.)
.eh_frame:00404000 ; Section size in file	   : 00000200 (	   512.)
.eh_frame:00404000 ; Offset to raw data	for section: 00001C00
.eh_frame:00404000 ; Flags C0300040: Data Readable Writable
.eh_frame:00404000 ; Alignment	   : 4 bytes
.eh_frame:00404000 ; ===========================================================================
.eh_frame:00404000
.eh_frame:00404000 ; Segment type: Pure	data
.eh_frame:00404000 ; Segment permissions: Read/Write
.eh_frame:00404000 _eh_frame	   segment dword public	'DATA' use32
.eh_frame:00404000		   assume cs:_eh_frame
.eh_frame:00404000		   ;org	404000h
.eh_frame:00404000 dword_404000	   dd 80h dup(0)	   ; DATA XREF:	.text:004010E8o
.eh_frame:00404000					   ; .text:loc_401180o	...
.eh_frame:00404200		   align 1000h
.eh_frame:00404200 _eh_frame	   ends
.eh_frame:00404200
.bss:00405000 ;	Section	4. (virtual address 00005000)
.bss:00405000 ;	Virtual	size		      :	00000130 (    304.)
.bss:00405000 ;	Section	size in	file	      :	00000000 (	0.)
.bss:00405000 ;	Offset to raw data for section:	00000000
.bss:00405000 ;	Flags C0400080:	Bss Readable Writable
.bss:00405000 ;	Alignment     :	8 bytes
.bss:00405000 ;	===========================================================================
.bss:00405000
.bss:00405000 ;	Segment	type: Uninitialized
.bss:00405000 ;	Segment	permissions: Read/Write
.bss:00405000 ;	Segment	alignment 'qword' can not be represented in assembly
.bss:00405000 _bss	      segment para public 'BSS' use32
.bss:00405000		      assume cs:_bss
.bss:00405000		      ;org 405000h
.bss:00405000		      assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00405000 dword_405000    dd 8 dup(?)	      ;	DATA XREF: .text:loc_4010E0o
.bss:00405000					      ;	sub_401F30+194o
.bss:00405020 dword_405020    dd ?		      ;	DATA XREF: sub_401F30+68o
.bss:00405020					      ;	sub_401F30+221o
.bss:00405024 dword_405024    dd ?		      ;	DATA XREF: sub_401F30+8Eo
.bss:00405024					      ;	sub_401F30+252o
.bss:00405028 dword_405028    dd ?		      ;	DATA XREF: sub_401F30+C4r
.bss:00405028					      ;	.text:0040231Fw
.bss:0040502C		      align 10h
.bss:00405030 dword_405030    dd ?		      ;	DATA XREF: sub_402230+18r
.bss:00405030					      ;	.text:00402309w
.bss:00405034		      align 10h
.bss:00405040 dword_405040    dd ?		      ;	DATA XREF: sub_402230+Fr
.bss:00405040					      ;	.text:0040230Fw
.bss:00405044		      align 10h
.bss:00405050 dword_405050    dd ?		      ;	DATA XREF: sub_402230+6r
.bss:00405050					      ;	.text:00402319w
.bss:00405054		      align 10h
.bss:00405060 dword_405060    dd ?		      ;	DATA XREF: .text:004022B0r
.bss:00405060					      ;	.text:004022BDw ...
.bss:00405064		      align 10h
.bss:00405070 dword_405070    dd 30h dup(?)	      ;	DATA XREF: sub_402390+Ao
.bss:00405070					      ;	sub_402390+23o
.bss:00405130 dword_405130    dd 3B4h dup(?)	      ;	DATA XREF: sub_401F30+19Bo
.bss:00405130 _bss	      ends
.bss:00405130
.idata:00406000	; Section 5. (virtual address 00006000)
.idata:00406000	; Virtual size			: 00000270 (	624.)
.idata:00406000	; Section size in file		: 00000400 (   1024.)
.idata:00406000	; Offset to raw	data for section: 00001E00
.idata:00406000	; Flags	C0300040: Data Readable	Writable
.idata:00406000	; Alignment	: 4 bytes
.idata:00406000	; ===========================================================================
.idata:00406000
.idata:00406000	; Segment type:	Externs
.idata:00406000	; _idata
.idata:00406000
.idata:00406001
.idata:004060A0	;
.idata:004060A0	; Imports from cygwin1.dll
.idata:004060A0	;
.idata:004060A0			extrn __imp___main:dword ; DATA	XREF: __mainr
.idata:004060A4	; __stdcall dll_crt0()
.idata:004060A4			extrn _dll_crt0@0:dword	; CODE XREF: sub_401E90+1Cp
.idata:004060A4						; DATA XREF: sub_401E90+1Cr
.idata:004060A8			extrn _impure_ptr:dword	; DATA XREF: sub_401F30+24r
.idata:004060A8						; sub_401F30+1E7r
.idata:004060AC	; void *__cdecl	calloc(size_t NumOfElements, size_t SizeOfElements)
.idata:004060AC			extrn calloc:dword	; DATA XREF: .text:loc_402388r
.idata:004060B0			extrn __imp_cygwin_detach_dll:dword
.idata:004060B0						; DATA XREF: cygwin_detach_dllr
.idata:004060B4			extrn __imp_cygwin_internal:dword
.idata:004060B4						; DATA XREF: cygwin_internalr
.idata:004060B8			extrn dll_dllcrt0:dword	; DATA XREF: sub_402390:loc_4023F0r
.idata:004060BC	; void __cdecl free(void *Memory)
.idata:004060BC			extrn __imp_free:dword	; DATA XREF: freer
.idata:004060C0	; void *__cdecl	malloc(size_t Size)
.idata:004060C0			extrn __imp_malloc:dword ; DATA	XREF: mallocr
.idata:004060C4	; int printf(const char	*Format, ...)
.idata:004060C4			extrn __imp_printf:dword ; DATA	XREF: printfr
.idata:004060C8	; int __cdecl putchar(int Ch)
.idata:004060C8			extrn __imp_putchar:dword ; DATA XREF: putcharr
.idata:004060CC	; void *__cdecl	realloc(void *Memory, size_t NewSize)
.idata:004060CC			extrn realloc:dword	; DATA XREF: .text:loc_402380r
.idata:004060D0	; int sscanf(const char	*Src, const char *Format, ...)
.idata:004060D0			extrn __imp_sscanf:dword ; DATA	XREF: sscanfr
.idata:004060D4
.idata:004060D8	;
.idata:004060D8	; Imports from cyggcc_s-1.dll
.idata:004060D8	;
.idata:004060D8			extrn __imp___deregister_frame_info:dword
.idata:004060D8						; DATA XREF: __deregister_frame_infor
.idata:004060DC			extrn __imp___register_frame_info:dword
.idata:004060DC						; DATA XREF: __register_frame_infor
.idata:004060E0
.idata:004060E4	;
.idata:004060E4	; Imports from KERNEL32.dll
.idata:004060E4	;
.idata:004060E4	; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
.idata:004060E4			extrn __imp_GetModuleHandleA:dword
.idata:004060E4						; DATA XREF: GetModuleHandleAr
.idata:004060E8	; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
.idata:004060E8			extrn __imp_GetProcAddress:dword
.idata:004060E8						; DATA XREF: GetProcAddressr
.idata:004060EC
.idata:004060EC
.idata:004060EC
.idata:004060EC			end start
