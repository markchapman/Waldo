;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2009 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-313D-7374-F1			    |
; |   Aditya Thakur, University	of Wisconsin/Computer Sciences Department   |
; +-------------------------------------------------------------------------+
;
.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00401000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.text:00401000 ; |			License	info: 48-313D-7374-F1			   |
.text:00401000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input MD5   : 2C4392E436D39F331C4C5304E44CB8B7
.text:00401000
.text:00401000 ; File Name   : C:\aditya\work\waldo\tests\sglib-1.0.4\samples\arraybinsearch.exe
.text:00401000 ; Format	     : Portable	executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size		       : 000009C8 (   2504.)
.text:00401000 ; Section size in file	       : 00000A00 (   2560.)
.text:00401000 ; Offset	to raw data for	section: 00000400
.text:00401000 ; Flags 60500060: Text Data Executable Readable
.text:00401000 ; Alignment     : 16 bytes
.text:00401000
.text:00401000		       .686p
.text:00401000		       .mmx
.text:00401000		       .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text	       segment para public 'CODE' use32
.text:00401000		       assume cs:_text
.text:00401000		       ;org 401000h
.text:00401000		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: bp-based frame
.text:00401000
.text:00401000		       public start
.text:00401000 start	       proc near
.text:00401000
.text:00401000 var_28	       = dword ptr -28h
.text:00401000 var_24	       = dword ptr -24h
.text:00401000 var_20	       = dword ptr -20h
.text:00401000 var_2	       = word ptr -2
.text:00401000
.text:00401000		       push    ebp
.text:00401001		       mov     ebp, esp
.text:00401003		       sub     esp, 28h
.text:00401006		       and     esp, 0FFFFFFF0h
.text:00401009		       fnstcw  [ebp+var_2]
.text:0040100C		       movzx   eax, [ebp+var_2]
.text:00401010		       and     ax, 0F0C0h
.text:00401014		       mov     [ebp+var_2], ax
.text:00401018		       movzx   eax, [ebp+var_2]
.text:0040101C		       or      ax, 33Fh
.text:00401020		       mov     [ebp+var_2], ax
.text:00401024		       fldcw   [ebp+var_2]
.text:00401027		       mov     [esp+28h+var_28], offset	loc_4011A0
.text:0040102E		       call    sub_401400
.text:00401033		       mov     [esp+28h+var_20], 0
.text:0040103B		       mov     [esp+28h+var_24], 0
.text:00401043		       mov     [esp+28h+var_28], 0
.text:0040104A		       call    sub_401430
.text:0040104F		       mov     [esp+28h+var_20], 0
.text:00401057		       mov     [esp+28h+var_24], 0
.text:0040105F		       mov     [esp+28h+var_28], 0
.text:00401066		       call    sub_401440
.text:0040106B		       mov     [esp+28h+var_20], 0
.text:00401073		       mov     [esp+28h+var_24], 0
.text:0040107B		       mov     [esp+28h+var_28], 0
.text:00401082		       call    sub_401450
.text:00401087		       mov     [esp+28h+var_20], 0
.text:0040108F		       mov     [esp+28h+var_24], 0
.text:00401097		       mov     [esp+28h+var_28], 0
.text:0040109E		       call    sub_401460
.text:004010A3		       leave
.text:004010A4		       retn
.text:004010A4 start	       endp
.text:004010A4
.text:004010A4 ; ---------------------------------------------------------------------------
.text:004010A5		       align 10h
.text:004010B0
.text:004010B0 loc_4010B0:			       ; CODE XREF: .text:00401994j
.text:004010B0		       push    ebp
.text:004010B1		       mov     ebp, esp
.text:004010B3		       sub     esp, 8
.text:004010B6		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:004010BD		       call    GetModuleHandleA
.text:004010C2		       sub     esp, 4
.text:004010C5		       test    eax, eax
.text:004010C7		       jz      short loc_401130
.text:004010C9		       mov     dword ptr [esp+4], offset a__register_fra ; "__register_frame_info"
.text:004010D1		       mov     [esp], eax
.text:004010D4		       call    GetProcAddress
.text:004010D9		       sub     esp, 8
.text:004010DC		       test    eax, eax
.text:004010DE		       jz      short loc_401130
.text:004010E0
.text:004010E0 loc_4010E0:			       ; CODE XREF: .text:00401139j
.text:004010E0		       mov     dword ptr [esp+4], offset dword_404000
.text:004010E8		       mov     dword ptr [esp],	offset dword_403000
.text:004010EF		       call    eax
.text:004010F1
.text:004010F1 loc_4010F1:			       ; CODE XREF: .text:00401137j
.text:004010F1		       mov     eax, dword_4020A8
.text:004010F6		       test    eax, eax
.text:004010F8		       jz      short locret_40112D
.text:004010FA		       mov     dword ptr [esp],	offset aCyggcj9_dll ; "cyggcj-9.dll"
.text:00401101		       call    GetModuleHandleA
.text:00401106		       sub     esp, 4
.text:00401109		       test    eax, eax
.text:0040110B		       jz      short loc_401140
.text:0040110D		       mov     dword ptr [esp+4], offset a_jv_registercl ; "_Jv_RegisterClasses"
.text:00401115		       mov     [esp], eax
.text:00401118		       call    GetProcAddress
.text:0040111D		       sub     esp, 8
.text:00401120		       test    eax, eax
.text:00401122		       jz      short loc_401140
.text:00401124
.text:00401124 loc_401124:			       ; CODE XREF: .text:00401147j
.text:00401124		       mov     dword ptr [esp],	offset dword_4020A8
.text:0040112B		       call    eax
.text:0040112D
.text:0040112D locret_40112D:			       ; CODE XREF: .text:004010F8j
.text:0040112D		       leave
.text:0040112E		       retn
.text:0040112E ; ---------------------------------------------------------------------------
.text:0040112F		       align 10h
.text:00401130
.text:00401130 loc_401130:			       ; CODE XREF: .text:004010C7j
.text:00401130					       ; .text:004010DEj
.text:00401130		       mov     eax, off_402000
.text:00401135		       test    eax, eax
.text:00401137		       jz      short loc_4010F1
.text:00401139		       jmp     short loc_4010E0
.text:00401139 ; ---------------------------------------------------------------------------
.text:0040113B		       align 10h
.text:00401140
.text:00401140 loc_401140:			       ; CODE XREF: .text:0040110Bj
.text:00401140					       ; .text:00401122j
.text:00401140		       mov     eax, dword_402008
.text:00401145		       test    eax, eax
.text:00401147		       jnz     short loc_401124
.text:00401149		       leave
.text:0040114A		       retn
.text:0040114A ; ---------------------------------------------------------------------------
.text:0040114B		       align 10h
.text:00401150
.text:00401150 loc_401150:			       ; CODE XREF: .text:004019A4j
.text:00401150		       push    ebp
.text:00401151		       mov     ebp, esp
.text:00401153		       sub     esp, 8
.text:00401156		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:0040115D		       call    GetModuleHandleA
.text:00401162		       sub     esp, 4
.text:00401165		       test    eax, eax
.text:00401167		       jz      short loc_401190
.text:00401169		       mov     dword ptr [esp+4], offset a__deregister_f ; "__deregister_frame_info"
.text:00401171		       mov     [esp], eax
.text:00401174		       call    GetProcAddress
.text:00401179		       sub     esp, 8
.text:0040117C		       test    eax, eax
.text:0040117E		       jz      short loc_401190
.text:00401180
.text:00401180 loc_401180:			       ; CODE XREF: .text:00401197j
.text:00401180		       mov     dword ptr [esp],	offset dword_403000
.text:00401187		       call    eax
.text:00401189		       leave
.text:0040118A		       retn
.text:0040118A ; ---------------------------------------------------------------------------
.text:0040118B		       align 10h
.text:00401190
.text:00401190 loc_401190:			       ; CODE XREF: .text:00401167j
.text:00401190					       ; .text:0040117Ej
.text:00401190		       mov     eax, off_402004
.text:00401195		       test    eax, eax
.text:00401197		       jnz     short loc_401180
.text:00401199		       leave
.text:0040119A		       retn
.text:0040119A ; ---------------------------------------------------------------------------
.text:0040119B		       align 10h
.text:004011A0
.text:004011A0 loc_4011A0:			       ; DATA XREF: start+27o
.text:004011A0		       lea     ecx, [esp+4]
.text:004011A4		       and     esp, 0FFFFFFF0h
.text:004011A7		       push    dword ptr [ecx-4]
.text:004011AA		       push    ebp
.text:004011AB		       mov     ebp, esp
.text:004011AD		       push    ebx
.text:004011AE		       push    ecx
.text:004011AF		       mov     eax, 0FF0h
.text:004011B4		       call    sub_4013CC
.text:004011B9		       mov     [ebp-0FE4h], ecx
.text:004011BF		       call    __main
.text:004011C4		       mov     edx, [ebp-0FE4h]
.text:004011CA		       mov     eax, [edx]
.text:004011CC		       sub     eax, 1
.text:004011CF		       mov     [ebp-2Ch], eax
.text:004011D2		       mov     dword ptr [ebp-30h], 0
.text:004011D9		       jmp     short loc_401215
.text:004011DB ; ---------------------------------------------------------------------------
.text:004011DB
.text:004011DB loc_4011DB:			       ; CODE XREF: .text:0040121Bj
.text:004011DB		       mov     eax, [ebp-30h]
.text:004011DE		       shl     eax, 2
.text:004011E1		       lea     edx, [ebp-0FD0h]
.text:004011E7		       add     edx, eax
.text:004011E9		       mov     eax, [ebp-30h]
.text:004011EC		       add     eax, 1
.text:004011EF		       shl     eax, 2
.text:004011F2		       mov     ecx, [ebp-0FE4h]
.text:004011F8		       add     eax, [ecx+4]
.text:004011FB		       mov     eax, [eax]
.text:004011FD		       mov     [esp+8],	edx
.text:00401201		       mov     dword ptr [esp+4], offset aD ; "%d"
.text:00401209		       mov     [esp], eax
.text:0040120C		       call    sscanf
.text:00401211		       add     dword ptr [ebp-30h], 1
.text:00401215
.text:00401215 loc_401215:			       ; CODE XREF: .text:004011D9j
.text:00401215		       mov     eax, [ebp-30h]
.text:00401218		       cmp     eax, [ebp-2Ch]
.text:0040121B		       jl      short loc_4011DB
.text:0040121D		       mov     dword ptr [ebp-30h], 1
.text:00401224		       jmp     loc_401362
.text:00401229 ; ---------------------------------------------------------------------------
.text:00401229
.text:00401229 loc_401229:			       ; CODE XREF: .text:00401368j
.text:00401229		       mov     eax, [ebp-30h]
.text:0040122C		       mov     eax, [ebp+eax*4-0FD0h]
.text:00401233		       mov     [ebp-20h], eax
.text:00401236		       mov     dword ptr [ebp-14h], 0
.text:0040123D		       mov     eax, [ebp-30h]
.text:00401240		       mov     [ebp-10h], eax
.text:00401243		       mov     dword ptr [ebp-0Ch], 0
.text:0040124A		       jmp     loc_4012E8
.text:0040124F ; ---------------------------------------------------------------------------
.text:0040124F
.text:0040124F loc_40124F:			       ; CODE XREF: .text:004012F4j
.text:0040124F		       mov     edx, [ebp-14h]
.text:00401252		       mov     eax, [ebp-10h]
.text:00401255		       lea     edx, [eax+edx]
.text:00401258		       mov     eax, edx
.text:0040125A		       shr     eax, 1Fh
.text:0040125D		       add     eax, edx
.text:0040125F		       sar     eax, 1
.text:00401261		       mov     [ebp-1Ch], eax
.text:00401264		       mov     eax, [ebp-1Ch]
.text:00401267		       mov     eax, [ebp+eax*4-0FD0h]
.text:0040126E		       cmp     eax, [ebp-20h]
.text:00401271		       jg      short loc_4012A6
.text:00401273		       mov     eax, [ebp-1Ch]
.text:00401276		       mov     eax, [ebp+eax*4-0FD0h]
.text:0040127D		       cmp     eax, [ebp-20h]
.text:00401280		       jge     short loc_40128E
.text:00401282		       mov     dword ptr [ebp-0FDCh], 0FFFFFFFFh
.text:0040128C		       jmp     short loc_401298
.text:0040128E ; ---------------------------------------------------------------------------
.text:0040128E
.text:0040128E loc_40128E:			       ; CODE XREF: .text:00401280j
.text:0040128E		       mov     dword ptr [ebp-0FDCh], 0
.text:00401298
.text:00401298 loc_401298:			       ; CODE XREF: .text:0040128Cj
.text:00401298		       mov     eax, [ebp-0FDCh]
.text:0040129E		       mov     [ebp-0FE0h], eax
.text:004012A4		       jmp     short loc_4012B0
.text:004012A6 ; ---------------------------------------------------------------------------
.text:004012A6
.text:004012A6 loc_4012A6:			       ; CODE XREF: .text:00401271j
.text:004012A6		       mov     dword ptr [ebp-0FE0h], 1
.text:004012B0
.text:004012B0 loc_4012B0:			       ; CODE XREF: .text:004012A4j
.text:004012B0		       mov     edx, [ebp-0FE0h]
.text:004012B6		       mov     [ebp-18h], edx
.text:004012B9		       cmp     dword ptr [ebp-18h], 0
.text:004012BD		       jnz     short loc_4012CE
.text:004012BF		       mov     eax, [ebp-1Ch]
.text:004012C2		       mov     [ebp-24h], eax
.text:004012C5		       mov     dword ptr [ebp-0Ch], 1
.text:004012CC		       jmp     short loc_4012E8
.text:004012CE ; ---------------------------------------------------------------------------
.text:004012CE
.text:004012CE loc_4012CE:			       ; CODE XREF: .text:004012BDj
.text:004012CE		       cmp     dword ptr [ebp-18h], 0
.text:004012D2		       jns     short loc_4012DF
.text:004012D4		       mov     eax, [ebp-1Ch]
.text:004012D7		       add     eax, 1
.text:004012DA		       mov     [ebp-14h], eax
.text:004012DD		       jmp     short loc_4012E8
.text:004012DF ; ---------------------------------------------------------------------------
.text:004012DF
.text:004012DF loc_4012DF:			       ; CODE XREF: .text:004012D2j
.text:004012DF		       mov     eax, [ebp-1Ch]
.text:004012E2		       sub     eax, 1
.text:004012E5		       mov     [ebp-10h], eax
.text:004012E8
.text:004012E8 loc_4012E8:			       ; CODE XREF: .text:0040124Aj
.text:004012E8					       ; .text:004012CCj ...
.text:004012E8		       mov     eax, [ebp-14h]
.text:004012EB		       cmp     eax, [ebp-10h]
.text:004012EE		       jg      short loc_4012FA
.text:004012F0		       cmp     dword ptr [ebp-0Ch], 0
.text:004012F4		       jz      loc_40124F
.text:004012FA
.text:004012FA loc_4012FA:			       ; CODE XREF: .text:004012EEj
.text:004012FA		       cmp     dword ptr [ebp-0Ch], 0
.text:004012FE		       jnz     short loc_401309
.text:00401300		       mov     eax, [ebp-10h]
.text:00401303		       add     eax, 1
.text:00401306		       mov     [ebp-24h], eax
.text:00401309
.text:00401309 loc_401309:			       ; CODE XREF: .text:004012FEj
.text:00401309		       mov     eax, [ebp-0Ch]
.text:0040130C		       mov     [ebp-28h], eax
.text:0040130F		       mov     edx, [ebp-24h]
.text:00401312		       mov     eax, [ebp-30h]
.text:00401315		       sub     eax, edx
.text:00401317		       lea     ebx, ds:0[eax*4]
.text:0040131E		       mov     eax, [ebp-24h]
.text:00401321		       shl     eax, 2
.text:00401324		       lea     edx, [ebp-0FD0h]
.text:0040132A		       add     edx, eax
.text:0040132C		       mov     eax, [ebp-24h]
.text:0040132F		       add     eax, 1
.text:00401332		       lea     ecx, ds:0[eax*4]
.text:00401339		       lea     eax, [ebp-0FD0h]
.text:0040133F		       add     eax, ecx
.text:00401341		       mov     [esp+8],	ebx
.text:00401345		       mov     [esp+4],	edx
.text:00401349		       mov     [esp], eax
.text:0040134C		       call    memmove
.text:00401351		       mov     edx, [ebp-24h]
.text:00401354		       mov     eax, [ebp-20h]
.text:00401357		       mov     [ebp+edx*4-0FD0h], eax
.text:0040135E		       add     dword ptr [ebp-30h], 1
.text:00401362
.text:00401362 loc_401362:			       ; CODE XREF: .text:00401224j
.text:00401362		       mov     eax, [ebp-30h]
.text:00401365		       cmp     eax, [ebp-2Ch]
.text:00401368		       jl      loc_401229
.text:0040136E		       mov     dword ptr [ebp-30h], 0
.text:00401375		       jmp     short loc_401395
.text:00401377 ; ---------------------------------------------------------------------------
.text:00401377
.text:00401377 loc_401377:			       ; CODE XREF: .text:0040139Bj
.text:00401377		       mov     eax, [ebp-30h]
.text:0040137A		       mov     eax, [ebp+eax*4-0FD0h]
.text:00401381		       mov     [esp+4],	eax
.text:00401385		       mov     dword ptr [esp],	offset aD_0 ; "%d "
.text:0040138C		       call    printf
.text:00401391		       add     dword ptr [ebp-30h], 1
.text:00401395
.text:00401395 loc_401395:			       ; CODE XREF: .text:00401375j
.text:00401395		       mov     eax, [ebp-30h]
.text:00401398		       cmp     eax, [ebp-2Ch]
.text:0040139B		       jl      short loc_401377
.text:0040139D		       mov     dword ptr [esp],	0Ah
.text:004013A4		       call    putchar
.text:004013A9		       mov     eax, 0
.text:004013AE		       add     esp, 0FF0h
.text:004013B4		       pop     ecx
.text:004013B5		       pop     ebx
.text:004013B6		       pop     ebp
.text:004013B7		       lea     esp, [ecx-4]
.text:004013BA		       retn
.text:004013BA ; ---------------------------------------------------------------------------
.text:004013BB		       align 4
.text:004013BC ; [00000006 BYTES: COLLAPSED FUNCTION __deregister_frame_info. PRESS KEYPAD "+" TO EXPAND]
.text:004013C2		       align 4
.text:004013C4 ; [00000006 BYTES: COLLAPSED FUNCTION __register_frame_info. PRESS KEYPAD "+" TO	EXPAND]
.text:004013CA		       align 4
.text:004013CC
.text:004013CC ; =============== S U B R O U T I N E =======================================
.text:004013CC
.text:004013CC
.text:004013CC sub_4013CC      proc near	       ; CODE XREF: .text:004011B4p
.text:004013CC
.text:004013CC arg_0	       = byte ptr  4
.text:004013CC
.text:004013CC		       push    ecx
.text:004013CD		       lea     ecx, [esp+4+arg_0]
.text:004013D1		       cmp     eax, 1000h
.text:004013D6		       jb      short loc_4013ED
.text:004013D8
.text:004013D8 loc_4013D8:			       ; CODE XREF: sub_4013CC+1Fj
.text:004013D8		       sub     ecx, 1000h
.text:004013DE		       or      dword ptr [ecx],	0
.text:004013E1		       sub     eax, 1000h
.text:004013E6		       cmp     eax, 1000h
.text:004013EB		       ja      short loc_4013D8
.text:004013ED
.text:004013ED loc_4013ED:			       ; CODE XREF: sub_4013CC+Aj
.text:004013ED		       sub     ecx, eax
.text:004013EF		       or      dword ptr [ecx],	0
.text:004013F2		       mov     eax, esp
.text:004013F4		       mov     esp, ecx
.text:004013F6		       mov     ecx, [eax]
.text:004013F8		       mov     eax, [eax+4]
.text:004013FB		       push    eax
.text:004013FC		       retn
.text:004013FC sub_4013CC      endp
.text:004013FC
.text:004013FC ; ---------------------------------------------------------------------------
.text:004013FD		       align 10h
.text:00401400
.text:00401400 ; =============== S U B R O U T I N E =======================================
.text:00401400
.text:00401400 ; Attributes: bp-based frame
.text:00401400
.text:00401400 sub_401400      proc near	       ; CODE XREF: start+2Ep
.text:00401400
.text:00401400 var_8	       = dword ptr -8
.text:00401400 var_4	       = dword ptr -4
.text:00401400 arg_0	       = dword ptr  8
.text:00401400
.text:00401400		       push    ebp
.text:00401401		       mov     ebp, esp
.text:00401403		       sub     esp, 8
.text:00401406		       mov     eax, [ebp+arg_0]
.text:00401409		       mov     [esp+8+var_4], 0
.text:00401411		       mov     [esp+8+var_8], eax
.text:00401414		       call    sub_4014A0
.text:00401419		       sub     esp, 8
.text:0040141C		       call    ds:_dll_crt0@0  ; dll_crt0()
.text:00401422		       nop
.text:00401423		       nop
.text:00401424		       nop
.text:00401425		       nop
.text:00401426		       nop
.text:00401427		       nop
.text:00401428		       nop
.text:00401429		       nop
.text:0040142A		       nop
.text:0040142B		       nop
.text:0040142C		       nop
.text:0040142D		       nop
.text:0040142E		       nop
.text:0040142F		       nop
.text:0040142F sub_401400      endp ; sp-analysis failed
.text:0040142F
.text:00401430
.text:00401430 ; =============== S U B R O U T I N E =======================================
.text:00401430
.text:00401430 ; Attributes: bp-based frame
.text:00401430
.text:00401430 sub_401430      proc near	       ; CODE XREF: start+4Ap
.text:00401430					       ; DATA XREF: sub_4014A0+72o ...
.text:00401430		       push    ebp
.text:00401431		       mov     ebp, esp
.text:00401433		       pop     ebp
.text:00401434		       retn
.text:00401434 sub_401430      endp
.text:00401434
.text:00401434 ; ---------------------------------------------------------------------------
.text:00401435		       align 10h
.text:00401440
.text:00401440 ; =============== S U B R O U T I N E =======================================
.text:00401440
.text:00401440 ; Attributes: bp-based frame
.text:00401440
.text:00401440 sub_401440      proc near	       ; CODE XREF: start+66p
.text:00401440					       ; DATA XREF: sub_4014A0+79o ...
.text:00401440		       push    ebp
.text:00401441		       mov     ebp, esp
.text:00401443		       pop     ebp
.text:00401444		       retn
.text:00401444 sub_401440      endp
.text:00401444
.text:00401444 ; ---------------------------------------------------------------------------
.text:00401445		       align 10h
.text:00401450
.text:00401450 ; =============== S U B R O U T I N E =======================================
.text:00401450
.text:00401450 ; Attributes: bp-based frame
.text:00401450
.text:00401450 sub_401450      proc near	       ; CODE XREF: start+82p
.text:00401450					       ; DATA XREF: sub_4014A0+80o ...
.text:00401450		       push    ebp
.text:00401451		       mov     ebp, esp
.text:00401453		       pop     ebp
.text:00401454		       retn
.text:00401454 sub_401450      endp
.text:00401454
.text:00401454 ; ---------------------------------------------------------------------------
.text:00401455		       align 10h
.text:00401460
.text:00401460 ; =============== S U B R O U T I N E =======================================
.text:00401460
.text:00401460 ; Attributes: bp-based frame
.text:00401460
.text:00401460 sub_401460      proc near	       ; CODE XREF: start+9Ep
.text:00401460					       ; DATA XREF: sub_4014A0+87o ...
.text:00401460		       push    ebp
.text:00401461		       mov     ebp, esp
.text:00401463		       pop     ebp
.text:00401464		       retn
.text:00401464 sub_401460      endp
.text:00401464
.text:00401464 ; ---------------------------------------------------------------------------
.text:00401465		       align 10h
.text:00401470 ; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
.text:00401476		       align 4
.text:00401478 ; [00000006 BYTES: COLLAPSED FUNCTION sscanf. PRESS KEYPAD "+" TO EXPAND]
.text:0040147E		       align 10h
.text:00401480 ; [00000006 BYTES: COLLAPSED FUNCTION memmove. PRESS KEYPAD "+" TO EXPAND]
.text:00401486		       align 4
.text:00401488 ; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
.text:0040148E		       align 10h
.text:00401490 ; [00000006 BYTES: COLLAPSED FUNCTION putchar. PRESS KEYPAD "+" TO EXPAND]
.text:00401496		       align 10h
.text:004014A0
.text:004014A0 ; =============== S U B R O U T I N E =======================================
.text:004014A0
.text:004014A0 ; Attributes: bp-based frame
.text:004014A0
.text:004014A0 sub_4014A0      proc near	       ; CODE XREF: sub_401400+14p
.text:004014A0					       ; sub_401910+18p
.text:004014A0
.text:004014A0 var_18	       = dword ptr -18h
.text:004014A0 arg_0	       = dword ptr  8
.text:004014A0 arg_4	       = dword ptr  0Ch
.text:004014A0
.text:004014A0		       push    ebp
.text:004014A1		       mov     ebp, esp
.text:004014A3		       push    esi
.text:004014A4		       push    ebx
.text:004014A5		       sub     esp, 10h
.text:004014A8		       mov     ebx, [ebp+arg_4]
.text:004014AB		       mov     esi, [ebp+arg_0]
.text:004014AE		       mov     [esp+18h+var_18], 8
.text:004014B5		       call    cygwin_internal
.text:004014BA		       test    ebx, ebx
.text:004014BC		       mov     ecx, eax
.text:004014BE		       jz      loc_401680
.text:004014C4		       mov     eax, ds:_impure_ptr
.text:004014C9		       test    ecx, ecx
.text:004014CB		       mov     dword ptr [ebx+4], 0A8h
.text:004014D2		       mov     dword ptr [ebx+8], 3EFh
.text:004014D9		       mov     dword ptr [ebx+0Ch], 7
.text:004014E0		       mov     [ebx+10h], eax
.text:004014E3		       mov     eax, [ebp+0]
.text:004014E6		       mov     dword ptr [ebx+80h], 0
.text:004014F0		       mov     dword ptr [ebx+84h], 0E6h
.text:004014FA		       mov     dword ptr [ebx+2Ch], offset dword_4019B0
.text:00401501		       mov     dword ptr [ebx+30h], offset dword_4019BC
.text:00401508		       mov     dword ptr [ebx+14h], offset dword_404020
.text:0040150F		       mov     [ebx+28h], esi
.text:00401512		       mov     dword ptr [ebx+48h], offset sub_401430
.text:00401519		       mov     dword ptr [ebx+4Ch], offset sub_401440
.text:00401520		       mov     dword ptr [ebx+50h], offset sub_401450
.text:00401527		       mov     dword ptr [ebx+54h], offset sub_401460
.text:0040152E		       mov     dword ptr [ebx+24h], offset dword_404024
.text:00401535		       mov     [ebx], eax
.text:00401537		       mov     dword ptr [ebx+18h], offset loc_4018F0
.text:0040153E		       mov     dword ptr [ebx+1Ch], offset loc_4018F8
.text:00401545		       mov     dword ptr [ebx+20h], offset loc_401900
.text:0040154C		       mov     dword ptr [ebx+44h], offset loc_401908
.text:00401553		       jz      loc_40161A
.text:00401559
.text:00401559 loc_401559:			       ; CODE XREF: sub_4014A0+277j
.text:00401559		       mov     edx, [ecx+78h]
.text:0040155C		       test    edx, edx
.text:0040155E		       jz      loc_40161A
.text:00401564		       mov     eax, ds:dword_404028
.text:00401569		       test    eax, eax
.text:0040156B		       jnz     loc_40161A
.text:00401571		       mov     eax, dword_402020
.text:00401576		       test    eax, eax
.text:00401578		       jz      loc_401790
.text:0040157E
.text:0040157E loc_40157E:			       ; CODE XREF: sub_4014A0+2F7j
.text:0040157E		       mov     eax, dword_402024
.text:00401583		       test    eax, eax
.text:00401585		       jz      loc_401780
.text:0040158B
.text:0040158B loc_40158B:			       ; CODE XREF: sub_4014A0+2E8j
.text:0040158B		       mov     eax, dword_402028
.text:00401590		       test    eax, eax
.text:00401592		       jz      loc_401770
.text:00401598
.text:00401598 loc_401598:			       ; CODE XREF: sub_4014A0+2D8j
.text:00401598		       mov     eax, dword_40202C
.text:0040159D		       test    eax, eax
.text:0040159F		       jz      loc_401760
.text:004015A5
.text:004015A5 loc_4015A5:			       ; CODE XREF: sub_4014A0+2C8j
.text:004015A5		       mov     eax, dword_402030
.text:004015AA		       test    eax, eax
.text:004015AC		       jz      loc_401750
.text:004015B2
.text:004015B2 loc_4015B2:			       ; CODE XREF: sub_4014A0+2B8j
.text:004015B2		       mov     esi, dword_402034
.text:004015B8		       test    esi, esi
.text:004015BA		       jz      loc_401740
.text:004015C0
.text:004015C0 loc_4015C0:			       ; CODE XREF: sub_4014A0+2A8j
.text:004015C0		       mov     ecx, dword_402038
.text:004015C6		       test    ecx, ecx
.text:004015C8		       jz      loc_401730
.text:004015CE
.text:004015CE loc_4015CE:			       ; CODE XREF: sub_4014A0+298j
.text:004015CE		       mov     eax, dword_40203C
.text:004015D3		       test    eax, eax
.text:004015D5		       jz      loc_401722
.text:004015DB
.text:004015DB loc_4015DB:			       ; CODE XREF: sub_4014A0+28Aj
.text:004015DB		       mov     eax, dword_402020
.text:004015E0		       mov     [edx], eax
.text:004015E2		       mov     eax, dword_402024
.text:004015E7		       mov     [edx+4],	eax
.text:004015EA		       mov     eax, dword_402028
.text:004015EF		       mov     [edx+8],	eax
.text:004015F2		       mov     eax, dword_40202C
.text:004015F7		       mov     [edx+0Ch], eax
.text:004015FA		       mov     eax, dword_402030
.text:004015FF		       mov     [edx+10h], eax
.text:00401602		       mov     eax, dword_402034
.text:00401607		       mov     [edx+14h], eax
.text:0040160A		       mov     eax, dword_402038
.text:0040160F		       mov     [edx+18h], eax
.text:00401612		       mov     eax, dword_40203C
.text:00401617		       mov     [edx+1Ch], eax
.text:0040161A
.text:0040161A loc_40161A:			       ; CODE XREF: sub_4014A0+B3j
.text:0040161A					       ; sub_4014A0+BEj ...
.text:0040161A		       mov     [esp+18h+var_18], 0
.text:00401621		       call    GetModuleHandleA
.text:00401626		       mov     dword ptr [ebx+34h], offset off_402000
.text:0040162D		       mov     dword ptr [ebx+38h], offset dword_4020AC
.text:00401634		       mov     dword ptr [ebx+3Ch], offset dword_404000
.text:0040163B		       mov     dword ptr [ebx+40h], offset dword_404130
.text:00401642		       mov     dword ptr [ebx+94h], offset dword_403000
.text:0040164C		       mov     [ebx+7Ch], eax
.text:0040164F		       sub     esp, 4
.text:00401652		       mov     dword ptr [ebx+98h], offset dword_403000
.text:0040165C		       mov     dword ptr [ebx+9Ch], 400000h
.text:00401666		       call    sub_4018E0
.text:0040166B		       lea     esp, [ebp-8]
.text:0040166E		       mov     eax, 1
.text:00401673		       pop     ebx
.text:00401674		       pop     esi
.text:00401675		       pop     ebp
.text:00401676		       retn    8
.text:00401676 ; ---------------------------------------------------------------------------
.text:00401679		       align 10h
.text:00401680
.text:00401680 loc_401680:			       ; CODE XREF: sub_4014A0+1Ej
.text:00401680		       mov     dword ptr [eax+4], 0A8h
.text:00401687		       mov     edx, ds:_impure_ptr
.text:0040168D		       test    ecx, ecx
.text:0040168F		       mov     dword ptr [eax+8], 3EFh
.text:00401696		       mov     ebx, ecx
.text:00401698		       mov     dword ptr [eax+0Ch], 7
.text:0040169F		       mov     dword ptr [eax+80h], 0
.text:004016A9		       mov     dword ptr [eax+84h], 0E6h
.text:004016B3		       mov     dword ptr [eax+2Ch], offset dword_4019B0
.text:004016BA		       mov     dword ptr [eax+30h], offset dword_4019BC
.text:004016C1		       mov     dword ptr [eax+14h], offset dword_404020
.text:004016C8		       mov     eax, [eax+0A4h]
.text:004016CE		       mov     [ecx+28h], esi
.text:004016D1		       mov     dword ptr [ecx+48h], offset sub_401430
.text:004016D8		       mov     dword ptr [ecx+4Ch], offset sub_401440
.text:004016DF		       mov     [edx], eax
.text:004016E1		       mov     eax, [ebp+0]
.text:004016E4		       mov     dword ptr [ecx+50h], offset sub_401450
.text:004016EB		       mov     dword ptr [ecx+54h], offset sub_401460
.text:004016F2		       mov     dword ptr [ecx+24h], offset dword_404024
.text:004016F9		       mov     [ecx], eax
.text:004016FB		       mov     dword ptr [ecx+18h], offset loc_4018F0
.text:00401702		       mov     dword ptr [ecx+1Ch], offset loc_4018F8
.text:00401709		       mov     dword ptr [ecx+20h], offset loc_401900
.text:00401710		       mov     dword ptr [ecx+44h], offset loc_401908
.text:00401717		       jnz     loc_401559
.text:0040171D		       jmp     loc_40161A
.text:00401722 ; ---------------------------------------------------------------------------
.text:00401722
.text:00401722 loc_401722:			       ; CODE XREF: sub_4014A0+135j
.text:00401722		       mov     eax, [edx+1Ch]
.text:00401725		       mov     dword_40203C, eax
.text:0040172A		       jmp     loc_4015DB
.text:0040172A ; ---------------------------------------------------------------------------
.text:0040172F		       align 10h
.text:00401730
.text:00401730 loc_401730:			       ; CODE XREF: sub_4014A0+128j
.text:00401730		       mov     eax, [edx+18h]
.text:00401733		       mov     dword_402038, eax
.text:00401738		       jmp     loc_4015CE
.text:00401738 ; ---------------------------------------------------------------------------
.text:0040173D		       align 10h
.text:00401740
.text:00401740 loc_401740:			       ; CODE XREF: sub_4014A0+11Aj
.text:00401740		       mov     eax, [edx+14h]
.text:00401743		       mov     dword_402034, eax
.text:00401748		       jmp     loc_4015C0
.text:00401748 ; ---------------------------------------------------------------------------
.text:0040174D		       align 10h
.text:00401750
.text:00401750 loc_401750:			       ; CODE XREF: sub_4014A0+10Cj
.text:00401750		       mov     eax, [edx+10h]
.text:00401753		       mov     dword_402030, eax
.text:00401758		       jmp     loc_4015B2
.text:00401758 ; ---------------------------------------------------------------------------
.text:0040175D		       align 10h
.text:00401760
.text:00401760 loc_401760:			       ; CODE XREF: sub_4014A0+FFj
.text:00401760		       mov     eax, [edx+0Ch]
.text:00401763		       mov     dword_40202C, eax
.text:00401768		       jmp     loc_4015A5
.text:00401768 ; ---------------------------------------------------------------------------
.text:0040176D		       align 10h
.text:00401770
.text:00401770 loc_401770:			       ; CODE XREF: sub_4014A0+F2j
.text:00401770		       mov     eax, [edx+8]
.text:00401773		       mov     dword_402028, eax
.text:00401778		       jmp     loc_401598
.text:00401778 ; ---------------------------------------------------------------------------
.text:0040177D		       align 10h
.text:00401780
.text:00401780 loc_401780:			       ; CODE XREF: sub_4014A0+E5j
.text:00401780		       mov     eax, [edx+4]
.text:00401783		       mov     dword_402024, eax
.text:00401788		       jmp     loc_40158B
.text:00401788 ; ---------------------------------------------------------------------------
.text:0040178D		       align 10h
.text:00401790
.text:00401790 loc_401790:			       ; CODE XREF: sub_4014A0+D8j
.text:00401790		       mov     eax, [edx]
.text:00401792		       mov     dword_402020, eax
.text:00401797		       jmp     loc_40157E
.text:00401797 sub_4014A0      endp
.text:00401797
.text:00401797 ; ---------------------------------------------------------------------------
.text:0040179C		       align 10h
.text:004017A0
.text:004017A0 ; =============== S U B R O U T I N E =======================================
.text:004017A0
.text:004017A0 ; Attributes: bp-based frame
.text:004017A0
.text:004017A0 sub_4017A0      proc near	       ; DATA XREF: .text:00401894o
.text:004017A0
.text:004017A0 var_18	       = dword ptr -18h
.text:004017A0 var_14	       = dword ptr -14h
.text:004017A0 var_10	       = dword ptr -10h
.text:004017A0
.text:004017A0		       push    ebp
.text:004017A1		       mov     ebp, esp
.text:004017A3		       sub     esp, 18h
.text:004017A6		       mov     eax, ds:dword_404050
.text:004017AB		       mov     [esp+18h+var_10], eax
.text:004017AF		       mov     eax, ds:dword_404040
.text:004017B4		       mov     [esp+18h+var_14], eax
.text:004017B8		       mov     eax, ds:dword_404030
.text:004017BD		       mov     [esp+18h+var_18], eax
.text:004017C0		       call    sub_401960
.text:004017C5		       sub     esp, 0Ch
.text:004017C8		       leave
.text:004017C9		       retn
.text:004017C9 sub_4017A0      endp
.text:004017C9
.text:004017C9 ; ---------------------------------------------------------------------------
.text:004017CA		       align 10h
.text:004017D0
.text:004017D0 loc_4017D0:			       ; CODE XREF: .text:004018C4j
.text:004017D0		       push    ebp
.text:004017D1		       mov     ebp, esp
.text:004017D3		       push    ebx
.text:004017D4		       sub     esp, 14h
.text:004017D7		       mov     eax, [ebp+0Ch]
.text:004017DA		       mov     ecx, [ebp+8]
.text:004017DD		       mov     edx, [ebp+10h]
.text:004017E0		       cmp     eax, 1
.text:004017E3		       jz      loc_401870
.text:004017E9		       jb      short loc_401803
.text:004017EB		       cmp     eax, 2
.text:004017EE		       jz      short loc_401856
.text:004017F0		       cmp     eax, 3
.text:004017F3		       mov     ebx, 1
.text:004017F8		       jz      short loc_401840
.text:004017FA
.text:004017FA loc_4017FA:			       ; CODE XREF: .text:0040181Ej
.text:004017FA					       ; .text:00401837j
.text:004017FA		       mov     eax, ebx
.text:004017FC		       mov     ebx, [ebp-4]
.text:004017FF		       leave
.text:00401800		       retn    0Ch
.text:00401803 ; ---------------------------------------------------------------------------
.text:00401803
.text:00401803 loc_401803:			       ; CODE XREF: .text:004017E9j
.text:00401803		       mov     [esp+8],	edx
.text:00401807		       mov     dword ptr [esp+4], 0
.text:0040180F		       mov     [esp], ecx
.text:00401812		       call    sub_401960
.text:00401817		       sub     esp, 0Ch
.text:0040181A		       test    eax, eax
.text:0040181C		       mov     ebx, eax
.text:0040181E		       jz      short loc_4017FA
.text:00401820		       mov     eax, ds:dword_404060
.text:00401825		       mov     [esp], eax
.text:00401828		       call    cygwin_detach_dll
.text:0040182D		       mov     ds:dword_404060,	0FFFFFFFFh
.text:00401837		       jmp     short loc_4017FA
.text:00401837 ; ---------------------------------------------------------------------------
.text:00401839		       align 10h
.text:00401840
.text:00401840 loc_401840:			       ; CODE XREF: .text:004017F8j
.text:00401840		       mov     [ebp+10h], edx
.text:00401843		       mov     ebx, [ebp-4]
.text:00401846		       mov     dword ptr [ebp+0Ch], 3
.text:0040184D		       mov     [ebp+8],	ecx
.text:00401850		       leave
.text:00401851		       jmp     sub_401960
.text:00401856 ; ---------------------------------------------------------------------------
.text:00401856
.text:00401856 loc_401856:			       ; CODE XREF: .text:004017EEj
.text:00401856		       mov     [ebp+10h], edx
.text:00401859		       mov     ebx, [ebp-4]
.text:0040185C		       mov     dword ptr [ebp+0Ch], 2
.text:00401863		       mov     [ebp+8],	ecx
.text:00401866		       leave
.text:00401867		       jmp     sub_401960
.text:00401867 ; ---------------------------------------------------------------------------
.text:0040186C		       align 10h
.text:00401870
.text:00401870 loc_401870:			       ; CODE XREF: .text:004017E3j
.text:00401870		       xor     eax, eax
.text:00401872		       test    edx, edx
.text:00401874		       setz    al
.text:00401877		       xor     ebx, ebx
.text:00401879		       mov     ds:dword_404030,	ecx
.text:0040187F		       mov     ds:dword_404040,	1
.text:00401889		       mov     ds:dword_404050,	edx
.text:0040188F		       mov     ds:dword_404028,	eax
.text:00401894		       mov     dword ptr [esp+4], offset sub_4017A0
.text:0040189C		       mov     [esp], ecx
.text:0040189F		       call    sub_401910
.text:004018A4		       cmp     eax, 0FFFFFFFFh
.text:004018A7		       setnz   bl
.text:004018AA		       mov     ds:dword_404060,	eax
.text:004018AF		       mov     eax, ebx
.text:004018B1		       mov     ebx, [ebp-4]
.text:004018B4		       leave
.text:004018B5		       retn    0Ch
.text:004018B5 ; ---------------------------------------------------------------------------
.text:004018B8		       align 10h
.text:004018C0		       push    ebp
.text:004018C1		       mov     ebp, esp
.text:004018C3		       leave
.text:004018C4		       jmp     loc_4017D0
.text:004018C4 ; ---------------------------------------------------------------------------
.text:004018C9		       align 10h
.text:004018D0 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+" TO EXPAND]
.text:004018D6		       align 10h
.text:004018E0
.text:004018E0 ; =============== S U B R O U T I N E =======================================
.text:004018E0
.text:004018E0 ; Attributes: bp-based frame
.text:004018E0
.text:004018E0 sub_4018E0      proc near	       ; CODE XREF: sub_4014A0+1C6p
.text:004018E0		       push    ebp
.text:004018E1		       mov     ebp, esp
.text:004018E3		       pop     ebp
.text:004018E4		       retn
.text:004018E4 sub_4018E0      endp
.text:004018E4
.text:004018E4 ; ---------------------------------------------------------------------------
.text:004018E5		       align 10h
.text:004018F0
.text:004018F0 loc_4018F0:			       ; DATA XREF: sub_4014A0+97o
.text:004018F0					       ; sub_4014A0+25Bo
.text:004018F0		       jmp     ds:malloc
.text:004018F0 ; ---------------------------------------------------------------------------
.text:004018F6		       align 4
.text:004018F8
.text:004018F8 loc_4018F8:			       ; DATA XREF: sub_4014A0+9Eo
.text:004018F8					       ; sub_4014A0+262o
.text:004018F8		       jmp     ds:free
.text:004018F8 ; ---------------------------------------------------------------------------
.text:004018FE		       align 10h
.text:00401900
.text:00401900 loc_401900:			       ; DATA XREF: sub_4014A0+A5o
.text:00401900					       ; sub_4014A0+269o
.text:00401900		       jmp     ds:realloc
.text:00401900 ; ---------------------------------------------------------------------------
.text:00401906		       align 4
.text:00401908
.text:00401908 loc_401908:			       ; DATA XREF: sub_4014A0+ACo
.text:00401908					       ; sub_4014A0+270o
.text:00401908		       jmp     ds:calloc
.text:00401908 ; ---------------------------------------------------------------------------
.text:0040190E		       align 10h
.text:00401910
.text:00401910 ; =============== S U B R O U T I N E =======================================
.text:00401910
.text:00401910 ; Attributes: bp-based frame
.text:00401910
.text:00401910 sub_401910      proc near	       ; CODE XREF: .text:0040189Fp
.text:00401910
.text:00401910 var_18	       = dword ptr -18h
.text:00401910 var_14	       = dword ptr -14h
.text:00401910 var_4	       = dword ptr -4
.text:00401910 arg_0	       = dword ptr  8
.text:00401910 arg_4	       = dword ptr  0Ch
.text:00401910
.text:00401910 ; FUNCTION CHUNK	AT .text:00401970 SIZE 00000006	BYTES
.text:00401910
.text:00401910		       push    ebp
.text:00401911		       mov     ebp, esp
.text:00401913		       push    ebx
.text:00401914		       sub     esp, 14h
.text:00401917		       mov     ebx, [ebp+arg_0]
.text:0040191A		       mov     [esp+18h+var_14], offset	dword_404070
.text:00401922		       mov     eax, [ebp+arg_4]
.text:00401925		       mov     [esp+18h+var_18], eax
.text:00401928		       call    sub_4014A0
.text:0040192D		       mov     [ebp+arg_0], ebx
.text:00401930		       mov     ebx, [ebp+var_4]
.text:00401933		       mov     [ebp+arg_4], offset dword_404070
.text:0040193A		       sub     esp, 8
.text:0040193D		       leave
.text:0040193E		       jmp     loc_401970
.text:0040193E sub_401910      endp
.text:0040193E
.text:0040193E ; ---------------------------------------------------------------------------
.text:00401943		       align 10h
.text:00401950 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_detach_dll.	PRESS KEYPAD "+" TO EXPAND]
.text:00401956		       align 10h
.text:00401960
.text:00401960 ; =============== S U B R O U T I N E =======================================
.text:00401960
.text:00401960 ; Attributes: bp-based frame
.text:00401960
.text:00401960 sub_401960      proc near	       ; CODE XREF: sub_4017A0+20p
.text:00401960					       ; .text:00401812p ...
.text:00401960		       push    ebp
.text:00401961		       mov     eax, 1
.text:00401966		       mov     ebp, esp
.text:00401968		       pop     ebp
.text:00401969		       retn    0Ch
.text:00401969 sub_401960      endp
.text:00401969
.text:00401969 ; ---------------------------------------------------------------------------
.text:0040196C		       align 10h
.text:00401970 ; START OF FUNCTION CHUNK FOR sub_401910
.text:00401970
.text:00401970 loc_401970:			       ; CODE XREF: sub_401910+2Ej
.text:00401970		       jmp     ds:dll_dllcrt0
.text:00401970 ; END OF	FUNCTION CHUNK FOR sub_401910
.text:00401970 ; ---------------------------------------------------------------------------
.text:00401976		       align 4
.text:00401978 ; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA. PRESS KEYPAD "+"	TO EXPAND]
.text:0040197E		       align 10h
.text:00401980 ; [00000006 BYTES: COLLAPSED FUNCTION GetProcAddress. PRESS KEYPAD "+" TO EXPAND]
.text:00401986		       align 10h
.text:00401990		       push    ebp
.text:00401991		       mov     ebp, esp
.text:00401993		       pop     ebp
.text:00401994		       jmp     loc_4010B0
.text:00401994 ; ---------------------------------------------------------------------------
.text:00401999		       align 10h
.text:004019A0		       push    ebp
.text:004019A1		       mov     ebp, esp
.text:004019A3		       pop     ebp
.text:004019A4		       jmp     loc_401150
.text:004019A4 ; ---------------------------------------------------------------------------
.text:004019A9		       align 10h
.text:004019B0 dword_4019B0    dd 0FFFFFFFFh, 401990h, 0 ; DATA	XREF: sub_4014A0+5Ao
.text:004019B0					       ; sub_4014A0+213o
.text:004019BC dword_4019BC    dd 0FFFFFFFFh, 4019A0h, 0Fh dup(0)
.text:004019BC					       ; DATA XREF: sub_4014A0+61o
.text:004019BC					       ; sub_4014A0+21Ao
.text:00401A00		       dd 180h dup(?)
.text:00401A00 _text	       ends
.text:00401A00
.data:00402000 ; Section 2. (virtual address 00002000)
.data:00402000 ; Virtual size		       : 000000AC (    172.)
.data:00402000 ; Section size in file	       : 00000200 (    512.)
.data:00402000 ; Offset	to raw data for	section: 00000E00
.data:00402000 ; Flags C0600040: Data Readable Writable
.data:00402000 ; Alignment     : 32 bytes
.data:00402000 ; ===========================================================================
.data:00402000
.data:00402000 ; Segment type: Pure data
.data:00402000 ; Segment permissions: Read/Write
.data:00402000 ; Segment alignment '32byte' can not be represented in assembly
.data:00402000 _data	       segment para public 'DATA' use32
.data:00402000		       assume cs:_data
.data:00402000		       ;org 402000h
.data:00402000 off_402000      dd offset __register_frame_info
.data:00402000					       ; DATA XREF: .text:loc_401130r
.data:00402000					       ; sub_4014A0+186o
.data:00402004 off_402004      dd offset __deregister_frame_info
.data:00402004					       ; DATA XREF: .text:loc_401190r
.data:00402008 dword_402008    dd 0		       ; DATA XREF: .text:loc_401140r
.data:0040200C		       align 20h
.data:00402020 dword_402020    dd 0		       ; DATA XREF: sub_4014A0+D1r
.data:00402020					       ; sub_4014A0:loc_4015DBr ...
.data:00402024 dword_402024    dd 0		       ; DATA XREF: sub_4014A0:loc_40157Er
.data:00402024					       ; sub_4014A0+142r ...
.data:00402028 dword_402028    dd 0		       ; DATA XREF: sub_4014A0:loc_40158Br
.data:00402028					       ; sub_4014A0+14Ar ...
.data:0040202C dword_40202C    dd 0		       ; DATA XREF: sub_4014A0:loc_401598r
.data:0040202C					       ; sub_4014A0+152r ...
.data:00402030 dword_402030    dd 0		       ; DATA XREF: sub_4014A0:loc_4015A5r
.data:00402030					       ; sub_4014A0+15Ar ...
.data:00402034 dword_402034    dd 0		       ; DATA XREF: sub_4014A0:loc_4015B2r
.data:00402034					       ; sub_4014A0+162r ...
.data:00402038 dword_402038    dd 0		       ; DATA XREF: sub_4014A0:loc_4015C0r
.data:00402038					       ; sub_4014A0+16Ar ...
.data:0040203C dword_40203C    dd 0		       ; DATA XREF: sub_4014A0:loc_4015CEr
.data:0040203C					       ; sub_4014A0+172r ...
.data:00402040 aCyggcc_s1_dll  db 'cyggcc_s-1.dll',0   ; DATA XREF: .text:004010B6o
.data:00402040					       ; .text:00401156o
.data:0040204F a__register_fra db '__register_frame_info',0 ; DATA XREF: .text:004010C9o
.data:00402065 aCyggcj9_dll    db 'cyggcj-9.dll',0     ; DATA XREF: .text:004010FAo
.data:00402072 a_jv_registercl db '_Jv_RegisterClasses',0 ; DATA XREF: .text:0040110Do
.data:00402086 a__deregister_f db '__deregister_frame_info',0 ; DATA XREF: .text:00401169o
.data:0040209E		       align 10h
.data:004020A0 aD	       db '%d',0               ; DATA XREF: .text:00401201o
.data:004020A3 aD_0	       db '%d ',0              ; DATA XREF: .text:00401385o
.data:004020A7		       align 4
.data:004020A8 dword_4020A8    dd 0		       ; DATA XREF: .text:loc_4010F1r
.data:004020A8					       ; .text:loc_401124o
.data:004020AC dword_4020AC    dd 55h dup(0)	       ; DATA XREF: sub_4014A0+18Do
.data:00402200		       align 1000h
.data:00402200 _data	       ends
.data:00402200
.eh_frame:00403000 ; Section 3.	(virtual address 00003000)
.eh_frame:00403000 ; Virtual size		   : 00000004 (	     4.)
.eh_frame:00403000 ; Section size in file	   : 00000200 (	   512.)
.eh_frame:00403000 ; Offset to raw data	for section: 00001000
.eh_frame:00403000 ; Flags C0300040: Data Readable Writable
.eh_frame:00403000 ; Alignment	   : 4 bytes
.eh_frame:00403000 ; ===========================================================================
.eh_frame:00403000
.eh_frame:00403000 ; Segment type: Pure	data
.eh_frame:00403000 ; Segment permissions: Read/Write
.eh_frame:00403000 _eh_frame	   segment dword public	'DATA' use32
.eh_frame:00403000		   assume cs:_eh_frame
.eh_frame:00403000		   ;org	403000h
.eh_frame:00403000 dword_403000	   dd 80h dup(0)	   ; DATA XREF:	.text:004010E8o
.eh_frame:00403000					   ; .text:loc_401180o	...
.eh_frame:00403200		   align 1000h
.eh_frame:00403200 _eh_frame	   ends
.eh_frame:00403200
.bss:00404000 ;	Section	4. (virtual address 00004000)
.bss:00404000 ;	Virtual	size		      :	00000130 (    304.)
.bss:00404000 ;	Section	size in	file	      :	00000000 (	0.)
.bss:00404000 ;	Offset to raw data for section:	00000000
.bss:00404000 ;	Flags C0400080:	Bss Readable Writable
.bss:00404000 ;	Alignment     :	8 bytes
.bss:00404000 ;	===========================================================================
.bss:00404000
.bss:00404000 ;	Segment	type: Uninitialized
.bss:00404000 ;	Segment	permissions: Read/Write
.bss:00404000 ;	Segment	alignment 'qword' can not be represented in assembly
.bss:00404000 _bss	      segment para public 'BSS' use32
.bss:00404000		      assume cs:_bss
.bss:00404000		      ;org 404000h
.bss:00404000		      assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00404000 dword_404000    dd 8 dup(?)	      ;	DATA XREF: .text:loc_4010E0o
.bss:00404000					      ;	sub_4014A0+194o
.bss:00404020 dword_404020    dd ?		      ;	DATA XREF: sub_4014A0+68o
.bss:00404020					      ;	sub_4014A0+221o
.bss:00404024 dword_404024    dd ?		      ;	DATA XREF: sub_4014A0+8Eo
.bss:00404024					      ;	sub_4014A0+252o
.bss:00404028 dword_404028    dd ?		      ;	DATA XREF: sub_4014A0+C4r
.bss:00404028					      ;	.text:0040188Fw
.bss:0040402C		      align 10h
.bss:00404030 dword_404030    dd ?		      ;	DATA XREF: sub_4017A0+18r
.bss:00404030					      ;	.text:00401879w
.bss:00404034		      align 10h
.bss:00404040 dword_404040    dd ?		      ;	DATA XREF: sub_4017A0+Fr
.bss:00404040					      ;	.text:0040187Fw
.bss:00404044		      align 10h
.bss:00404050 dword_404050    dd ?		      ;	DATA XREF: sub_4017A0+6r
.bss:00404050					      ;	.text:00401889w
.bss:00404054		      align 10h
.bss:00404060 dword_404060    dd ?		      ;	DATA XREF: .text:00401820r
.bss:00404060					      ;	.text:0040182Dw ...
.bss:00404064		      align 10h
.bss:00404070 dword_404070    dd 30h dup(?)	      ;	DATA XREF: sub_401910+Ao
.bss:00404070					      ;	sub_401910+23o
.bss:00404130 dword_404130    dd 3B4h dup(?)	      ;	DATA XREF: sub_4014A0+19Bo
.bss:00404130 _bss	      ends
.bss:00404130
.idata:00405000	; Section 5. (virtual address 00005000)
.idata:00405000	; Virtual size			: 00000288 (	648.)
.idata:00405000	; Section size in file		: 00000400 (   1024.)
.idata:00405000	; Offset to raw	data for section: 00001200
.idata:00405000	; Flags	C0300040: Data Readable	Writable
.idata:00405000	; Alignment	: 4 bytes
.idata:00405000	; ===========================================================================
.idata:00405000
.idata:00405000	; Segment type:	Externs
.idata:00405000	; _idata
.idata:00405000
.idata:00405001
.idata:004050A4	;
.idata:004050A4	; Imports from cygwin1.dll
.idata:004050A4	;
.idata:004050A4			extrn __imp___main:dword ; DATA	XREF: __mainr
.idata:004050A8	; __stdcall dll_crt0()
.idata:004050A8			extrn _dll_crt0@0:dword	; CODE XREF: sub_401400+1Cp
.idata:004050A8						; DATA XREF: sub_401400+1Cr
.idata:004050AC			extrn _impure_ptr:dword	; DATA XREF: sub_4014A0+24r
.idata:004050AC						; sub_4014A0+1E7r
.idata:004050B0	; void *__cdecl	calloc(size_t NumOfElements, size_t SizeOfElements)
.idata:004050B0			extrn calloc:dword	; DATA XREF: .text:loc_401908r
.idata:004050B4			extrn __imp_cygwin_detach_dll:dword
.idata:004050B4						; DATA XREF: cygwin_detach_dllr
.idata:004050B8			extrn __imp_cygwin_internal:dword
.idata:004050B8						; DATA XREF: cygwin_internalr
.idata:004050BC			extrn dll_dllcrt0:dword	; DATA XREF: sub_401910:loc_401970r
.idata:004050C0	; void __cdecl free(void *Memory)
.idata:004050C0			extrn free:dword	; DATA XREF: .text:loc_4018F8r
.idata:004050C4	; void *__cdecl	malloc(size_t Size)
.idata:004050C4			extrn malloc:dword	; DATA XREF: .text:loc_4018F0r
.idata:004050C8	; void *__cdecl	memmove(void *Dst, const void *Src, size_t Size)
.idata:004050C8			extrn __imp_memmove:dword ; DATA XREF: memmover
.idata:004050CC	; int printf(const char	*Format, ...)
.idata:004050CC			extrn __imp_printf:dword ; DATA	XREF: printfr
.idata:004050D0	; int __cdecl putchar(int Ch)
.idata:004050D0			extrn __imp_putchar:dword ; DATA XREF: putcharr
.idata:004050D4	; void *__cdecl	realloc(void *Memory, size_t NewSize)
.idata:004050D4			extrn realloc:dword	; DATA XREF: .text:loc_401900r
.idata:004050D8	; int sscanf(const char	*Src, const char *Format, ...)
.idata:004050D8			extrn __imp_sscanf:dword ; DATA	XREF: sscanfr
.idata:004050DC
.idata:004050E0	;
.idata:004050E0	; Imports from cyggcc_s-1.dll
.idata:004050E0	;
.idata:004050E0			extrn __imp___deregister_frame_info:dword
.idata:004050E0						; DATA XREF: __deregister_frame_infor
.idata:004050E4			extrn __imp___register_frame_info:dword
.idata:004050E4						; DATA XREF: __register_frame_infor
.idata:004050E8
.idata:004050EC	;
.idata:004050EC	; Imports from KERNEL32.dll
.idata:004050EC	;
.idata:004050EC	; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
.idata:004050EC			extrn __imp_GetModuleHandleA:dword
.idata:004050EC						; DATA XREF: GetModuleHandleAr
.idata:004050F0	; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
.idata:004050F0			extrn __imp_GetProcAddress:dword
.idata:004050F0						; DATA XREF: GetProcAddressr
.idata:004050F4
.idata:004050F4
.idata:004050F4
.idata:004050F4			end start
