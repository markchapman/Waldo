;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2009 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-313D-7374-F1			    |
; |   Aditya Thakur, University	of Wisconsin/Computer Sciences Department   |
; +-------------------------------------------------------------------------+
;
.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00401000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.text:00401000 ; |			License	info: 48-313D-7374-F1			   |
.text:00401000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input MD5   : 797CF9C0C4DDC129F4DD7822E33AECC4
.text:00401000
.text:00401000 ; File Name   : C:\aditya\work\waldo\tests\sglib-1.0.4\samples\arraysort1.exe
.text:00401000 ; Format	     : Portable	executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size		       : 00000DD8 (   3544.)
.text:00401000 ; Section size in file	       : 00000E00 (   3584.)
.text:00401000 ; Offset	to raw data for	section: 00000400
.text:00401000 ; Flags 60500060: Text Data Executable Readable
.text:00401000 ; Alignment     : 16 bytes
.text:00401000
.text:00401000		       .686p
.text:00401000		       .mmx
.text:00401000		       .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text	       segment para public 'CODE' use32
.text:00401000		       assume cs:_text
.text:00401000		       ;org 401000h
.text:00401000		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: bp-based frame
.text:00401000
.text:00401000		       public start
.text:00401000 start	       proc near
.text:00401000
.text:00401000 var_28	       = dword ptr -28h
.text:00401000 var_24	       = dword ptr -24h
.text:00401000 var_20	       = dword ptr -20h
.text:00401000 var_2	       = word ptr -2
.text:00401000
.text:00401000		       push    ebp
.text:00401001		       mov     ebp, esp
.text:00401003		       sub     esp, 28h
.text:00401006		       and     esp, 0FFFFFFF0h
.text:00401009		       fnstcw  [ebp+var_2]
.text:0040100C		       movzx   eax, [ebp+var_2]
.text:00401010		       and     ax, 0F0C0h
.text:00401014		       mov     [ebp+var_2], ax
.text:00401018		       movzx   eax, [ebp+var_2]
.text:0040101C		       or      ax, 33Fh
.text:00401020		       mov     [ebp+var_2], ax
.text:00401024		       fldcw   [ebp+var_2]
.text:00401027		       mov     [esp+28h+var_28], offset	sub_4016FC
.text:0040102E		       call    sub_401820
.text:00401033		       mov     [esp+28h+var_20], 0
.text:0040103B		       mov     [esp+28h+var_24], 0
.text:00401043		       mov     [esp+28h+var_28], 0
.text:0040104A		       call    sub_401850
.text:0040104F		       mov     [esp+28h+var_20], 0
.text:00401057		       mov     [esp+28h+var_24], 0
.text:0040105F		       mov     [esp+28h+var_28], 0
.text:00401066		       call    sub_401860
.text:0040106B		       mov     [esp+28h+var_20], 0
.text:00401073		       mov     [esp+28h+var_24], 0
.text:0040107B		       mov     [esp+28h+var_28], 0
.text:00401082		       call    sub_401870
.text:00401087		       mov     [esp+28h+var_20], 0
.text:0040108F		       mov     [esp+28h+var_24], 0
.text:00401097		       mov     [esp+28h+var_28], 0
.text:0040109E		       call    sub_401880
.text:004010A3		       leave
.text:004010A4		       retn
.text:004010A4 start	       endp
.text:004010A4
.text:004010A4 ; ---------------------------------------------------------------------------
.text:004010A5		       align 10h
.text:004010B0
.text:004010B0 loc_4010B0:			       ; CODE XREF: .text:00401DA4j
.text:004010B0		       push    ebp
.text:004010B1		       mov     ebp, esp
.text:004010B3		       sub     esp, 8
.text:004010B6		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:004010BD		       call    GetModuleHandleA
.text:004010C2		       sub     esp, 4
.text:004010C5		       test    eax, eax
.text:004010C7		       jz      short loc_401130
.text:004010C9		       mov     dword ptr [esp+4], offset a__register_fra ; "__register_frame_info"
.text:004010D1		       mov     [esp], eax
.text:004010D4		       call    GetProcAddress
.text:004010D9		       sub     esp, 8
.text:004010DC		       test    eax, eax
.text:004010DE		       jz      short loc_401130
.text:004010E0
.text:004010E0 loc_4010E0:			       ; CODE XREF: .text:00401139j
.text:004010E0		       mov     dword ptr [esp+4], offset dword_404000
.text:004010E8		       mov     dword ptr [esp],	offset dword_403000
.text:004010EF		       call    eax
.text:004010F1
.text:004010F1 loc_4010F1:			       ; CODE XREF: .text:00401137j
.text:004010F1		       mov     eax, dword_4020A8
.text:004010F6		       test    eax, eax
.text:004010F8		       jz      short locret_40112D
.text:004010FA		       mov     dword ptr [esp],	offset aCyggcj9_dll ; "cyggcj-9.dll"
.text:00401101		       call    GetModuleHandleA
.text:00401106		       sub     esp, 4
.text:00401109		       test    eax, eax
.text:0040110B		       jz      short loc_401140
.text:0040110D		       mov     dword ptr [esp+4], offset a_jv_registercl ; "_Jv_RegisterClasses"
.text:00401115		       mov     [esp], eax
.text:00401118		       call    GetProcAddress
.text:0040111D		       sub     esp, 8
.text:00401120		       test    eax, eax
.text:00401122		       jz      short loc_401140
.text:00401124
.text:00401124 loc_401124:			       ; CODE XREF: .text:00401147j
.text:00401124		       mov     dword ptr [esp],	offset dword_4020A8
.text:0040112B		       call    eax
.text:0040112D
.text:0040112D locret_40112D:			       ; CODE XREF: .text:004010F8j
.text:0040112D		       leave
.text:0040112E		       retn
.text:0040112E ; ---------------------------------------------------------------------------
.text:0040112F		       align 10h
.text:00401130
.text:00401130 loc_401130:			       ; CODE XREF: .text:004010C7j
.text:00401130					       ; .text:004010DEj
.text:00401130		       mov     eax, off_402000
.text:00401135		       test    eax, eax
.text:00401137		       jz      short loc_4010F1
.text:00401139		       jmp     short loc_4010E0
.text:00401139 ; ---------------------------------------------------------------------------
.text:0040113B		       align 10h
.text:00401140
.text:00401140 loc_401140:			       ; CODE XREF: .text:0040110Bj
.text:00401140					       ; .text:00401122j
.text:00401140		       mov     eax, dword_402008
.text:00401145		       test    eax, eax
.text:00401147		       jnz     short loc_401124
.text:00401149		       leave
.text:0040114A		       retn
.text:0040114A ; ---------------------------------------------------------------------------
.text:0040114B		       align 10h
.text:00401150
.text:00401150 loc_401150:			       ; CODE XREF: .text:00401DB4j
.text:00401150		       push    ebp
.text:00401151		       mov     ebp, esp
.text:00401153		       sub     esp, 8
.text:00401156		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:0040115D		       call    GetModuleHandleA
.text:00401162		       sub     esp, 4
.text:00401165		       test    eax, eax
.text:00401167		       jz      short loc_401190
.text:00401169		       mov     dword ptr [esp+4], offset a__deregister_f ; "__deregister_frame_info"
.text:00401171		       mov     [esp], eax
.text:00401174		       call    GetProcAddress
.text:00401179		       sub     esp, 8
.text:0040117C		       test    eax, eax
.text:0040117E		       jz      short loc_401190
.text:00401180
.text:00401180 loc_401180:			       ; CODE XREF: .text:00401197j
.text:00401180		       mov     dword ptr [esp],	offset dword_403000
.text:00401187		       call    eax
.text:00401189		       leave
.text:0040118A		       retn
.text:0040118A ; ---------------------------------------------------------------------------
.text:0040118B		       align 10h
.text:00401190
.text:00401190 loc_401190:			       ; CODE XREF: .text:00401167j
.text:00401190					       ; .text:0040117Ej
.text:00401190		       mov     eax, off_402004
.text:00401195		       test    eax, eax
.text:00401197		       jnz     short loc_401180
.text:00401199		       leave
.text:0040119A		       retn
.text:0040119A ; ---------------------------------------------------------------------------
.text:0040119B		       align 10h
.text:004011A0		       push    ebp
.text:004011A1		       mov     ebp, esp
.text:004011A3		       sub     esp, 230h
.text:004011A9		       mov     dword ptr [ebp-12Ch], 0
.text:004011B3		       mov     eax, [ebp+0Ch]
.text:004011B6		       mov     [ebp-22Ch], eax
.text:004011BC		       mov     dword ptr [ebp-20h], 1
.text:004011C3		       jmp     loc_401499
.text:004011C8 ; ---------------------------------------------------------------------------
.text:004011C8
.text:004011C8 loc_4011C8:			       ; CODE XREF: .text:0040149Dj
.text:004011C8		       sub     dword ptr [ebp-20h], 1
.text:004011CC		       mov     eax, [ebp-20h]
.text:004011CF		       mov     eax, [ebp+eax*4-12Ch]
.text:004011D6		       mov     [ebp-1Ch], eax
.text:004011D9		       mov     eax, [ebp-20h]
.text:004011DC		       mov     eax, [ebp+eax*4-22Ch]
.text:004011E3		       mov     [ebp-18h], eax
.text:004011E6		       jmp     loc_40141A
.text:004011EB ; ---------------------------------------------------------------------------
.text:004011EB
.text:004011EB loc_4011EB:			       ; CODE XREF: .text:00401429j
.text:004011EB		       mov     eax, [ebp-1Ch]
.text:004011EE		       mov     [ebp-24h], eax
.text:004011F1		       mov     eax, [ebp-1Ch]
.text:004011F4		       add     eax, 1
.text:004011F7		       mov     [ebp-2Ch], eax
.text:004011FA		       mov     eax, [ebp-18h]
.text:004011FD		       sub     eax, 1
.text:00401200		       mov     [ebp-28h], eax
.text:00401203		       jmp     loc_40135F
.text:00401208 ; ---------------------------------------------------------------------------
.text:00401208
.text:00401208 loc_401208:			       ; CODE XREF: .text:0040122Cj
.text:00401208		       add     dword ptr [ebp-2Ch], 1
.text:0040120C
.text:0040120C loc_40120C:			       ; CODE XREF: .text:00401365j
.text:0040120C		       mov     eax, [ebp-2Ch]
.text:0040120F		       cmp     eax, [ebp-28h]
.text:00401212		       jg      short loc_40122E
.text:00401214		       mov     eax, [ebp-2Ch]
.text:00401217		       shl     eax, 2
.text:0040121A		       add     eax, [ebp+8]
.text:0040121D		       mov     edx, [eax]
.text:0040121F		       mov     eax, [ebp-24h]
.text:00401222		       shl     eax, 2
.text:00401225		       add     eax, [ebp+8]
.text:00401228		       mov     eax, [eax]
.text:0040122A		       cmp     edx, eax
.text:0040122C		       jle     short loc_401208
.text:0040122E
.text:0040122E loc_40122E:			       ; CODE XREF: .text:00401212j
.text:0040122E		       mov     eax, [ebp-2Ch]
.text:00401231		       cmp     eax, [ebp-28h]
.text:00401234		       jle     short loc_40127B
.text:00401236		       mov     eax, [ebp-28h]
.text:00401239		       shl     eax, 2
.text:0040123C		       add     eax, [ebp+8]
.text:0040123F		       mov     eax, [eax]
.text:00401241		       mov     [ebp-10h], eax
.text:00401244		       mov     eax, [ebp-28h]
.text:00401247		       shl     eax, 2
.text:0040124A		       mov     edx, eax
.text:0040124C		       add     edx, [ebp+8]
.text:0040124F		       mov     eax, [ebp-24h]
.text:00401252		       shl     eax, 2
.text:00401255		       add     eax, [ebp+8]
.text:00401258		       mov     eax, [eax]
.text:0040125A		       mov     [edx], eax
.text:0040125C		       mov     eax, [ebp-24h]
.text:0040125F		       shl     eax, 2
.text:00401262		       mov     edx, eax
.text:00401264		       add     edx, [ebp+8]
.text:00401267		       mov     eax, [ebp-10h]
.text:0040126A		       mov     [edx], eax
.text:0040126C		       mov     eax, [ebp-28h]
.text:0040126F		       mov     [ebp-2Ch], eax
.text:00401272		       jmp     loc_40135F
.text:00401277 ; ---------------------------------------------------------------------------
.text:00401277
.text:00401277 loc_401277:			       ; CODE XREF: .text:0040129Bj
.text:00401277					       ; .text:004012B5j
.text:00401277		       sub     dword ptr [ebp-28h], 1
.text:0040127B
.text:0040127B loc_40127B:			       ; CODE XREF: .text:00401234j
.text:0040127B		       mov     eax, [ebp-2Ch]
.text:0040127E		       cmp     eax, [ebp-28h]
.text:00401281		       jg      short loc_4012B7
.text:00401283		       mov     eax, [ebp-28h]
.text:00401286		       shl     eax, 2
.text:00401289		       add     eax, [ebp+8]
.text:0040128C		       mov     edx, [eax]
.text:0040128E		       mov     eax, [ebp-24h]
.text:00401291		       shl     eax, 2
.text:00401294		       add     eax, [ebp+8]
.text:00401297		       mov     eax, [eax]
.text:00401299		       cmp     edx, eax
.text:0040129B		       jg      short loc_401277
.text:0040129D		       mov     eax, [ebp-28h]
.text:004012A0		       shl     eax, 2
.text:004012A3		       add     eax, [ebp+8]
.text:004012A6		       mov     edx, [eax]
.text:004012A8		       mov     eax, [ebp-24h]
.text:004012AB		       shl     eax, 2
.text:004012AE		       add     eax, [ebp+8]
.text:004012B1		       mov     eax, [eax]
.text:004012B3		       cmp     edx, eax
.text:004012B5		       jge     short loc_401277
.text:004012B7
.text:004012B7 loc_4012B7:			       ; CODE XREF: .text:00401281j
.text:004012B7		       mov     eax, [ebp-2Ch]
.text:004012BA		       cmp     eax, [ebp-28h]
.text:004012BD		       jle     short loc_4012FD
.text:004012BF		       mov     eax, [ebp-28h]
.text:004012C2		       shl     eax, 2
.text:004012C5		       add     eax, [ebp+8]
.text:004012C8		       mov     eax, [eax]
.text:004012CA		       mov     [ebp-0Ch], eax
.text:004012CD		       mov     eax, [ebp-28h]
.text:004012D0		       shl     eax, 2
.text:004012D3		       mov     edx, eax
.text:004012D5		       add     edx, [ebp+8]
.text:004012D8		       mov     eax, [ebp-24h]
.text:004012DB		       shl     eax, 2
.text:004012DE		       add     eax, [ebp+8]
.text:004012E1		       mov     eax, [eax]
.text:004012E3		       mov     [edx], eax
.text:004012E5		       mov     eax, [ebp-24h]
.text:004012E8		       shl     eax, 2
.text:004012EB		       mov     edx, eax
.text:004012ED		       add     edx, [ebp+8]
.text:004012F0		       mov     eax, [ebp-0Ch]
.text:004012F3		       mov     [edx], eax
.text:004012F5		       mov     eax, [ebp-28h]
.text:004012F8		       mov     [ebp-2Ch], eax
.text:004012FB		       jmp     short loc_40135F
.text:004012FD ; ---------------------------------------------------------------------------
.text:004012FD
.text:004012FD loc_4012FD:			       ; CODE XREF: .text:004012BDj
.text:004012FD		       mov     eax, [ebp-2Ch]
.text:00401300		       cmp     eax, [ebp-28h]
.text:00401303		       jge     short loc_40135F
.text:00401305		       mov     eax, [ebp-2Ch]
.text:00401308		       shl     eax, 2
.text:0040130B		       add     eax, [ebp+8]
.text:0040130E		       mov     eax, [eax]
.text:00401310		       mov     [ebp-8],	eax
.text:00401313		       mov     eax, [ebp-2Ch]
.text:00401316		       shl     eax, 2
.text:00401319		       mov     edx, eax
.text:0040131B		       add     edx, [ebp+8]
.text:0040131E		       mov     eax, [ebp-28h]
.text:00401321		       shl     eax, 2
.text:00401324		       add     eax, [ebp+8]
.text:00401327		       mov     eax, [eax]
.text:00401329		       mov     [edx], eax
.text:0040132B		       mov     eax, [ebp-28h]
.text:0040132E		       shl     eax, 2
.text:00401331		       mov     edx, eax
.text:00401333		       add     edx, [ebp+8]
.text:00401336		       mov     eax, [ebp-8]
.text:00401339		       mov     [edx], eax
.text:0040133B		       mov     eax, [ebp-2Ch]
.text:0040133E		       add     eax, 2
.text:00401341		       cmp     eax, [ebp-28h]
.text:00401344		       jge     short loc_401350
.text:00401346		       add     dword ptr [ebp-2Ch], 1
.text:0040134A		       sub     dword ptr [ebp-28h], 1
.text:0040134E		       jmp     short loc_40135F
.text:00401350 ; ---------------------------------------------------------------------------
.text:00401350
.text:00401350 loc_401350:			       ; CODE XREF: .text:00401344j
.text:00401350		       mov     eax, [ebp-2Ch]
.text:00401353		       add     eax, 1
.text:00401356		       cmp     eax, [ebp-28h]
.text:00401359		       jge     short loc_40135F
.text:0040135B		       add     dword ptr [ebp-2Ch], 1
.text:0040135F
.text:0040135F loc_40135F:			       ; CODE XREF: .text:00401203j
.text:0040135F					       ; .text:00401272j ...
.text:0040135F		       mov     eax, [ebp-2Ch]
.text:00401362		       cmp     eax, [ebp-28h]
.text:00401365		       jl      loc_40120C
.text:0040136B		       mov     eax, [ebp-1Ch]
.text:0040136E		       mov     edx, [ebp-2Ch]
.text:00401371		       mov     ecx, edx
.text:00401373		       sub     ecx, eax
.text:00401375		       mov     eax, ecx
.text:00401377		       cmp     eax, 1
.text:0040137A		       jle     short loc_4013F8
.text:0040137C		       mov     eax, [ebp-28h]
.text:0040137F		       mov     edx, [ebp-18h]
.text:00401382		       mov     ecx, edx
.text:00401384		       sub     ecx, eax
.text:00401386		       mov     eax, ecx
.text:00401388		       cmp     eax, 1
.text:0040138B		       jle     short loc_4013F8
.text:0040138D		       mov     edx, [ebp-1Ch]
.text:00401390		       mov     eax, [ebp-2Ch]
.text:00401393		       mov     ecx, eax
.text:00401395		       sub     ecx, edx
.text:00401397		       mov     edx, [ebp-28h]
.text:0040139A		       mov     eax, [ebp-18h]
.text:0040139D		       sub     eax, edx
.text:0040139F		       sub     eax, 1
.text:004013A2		       cmp     ecx, eax
.text:004013A4		       jge     short loc_4013CF
.text:004013A6		       mov     edx, [ebp-20h]
.text:004013A9		       mov     eax, [ebp-28h]
.text:004013AC		       add     eax, 1
.text:004013AF		       mov     [ebp+edx*4-12Ch], eax
.text:004013B6		       mov     edx, [ebp-20h]
.text:004013B9		       mov     eax, [ebp-18h]
.text:004013BC		       mov     [ebp+edx*4-22Ch], eax
.text:004013C3		       add     dword ptr [ebp-20h], 1
.text:004013C7		       mov     eax, [ebp-2Ch]
.text:004013CA		       mov     [ebp-18h], eax
.text:004013CD		       jmp     short loc_40141A
.text:004013CF ; ---------------------------------------------------------------------------
.text:004013CF
.text:004013CF loc_4013CF:			       ; CODE XREF: .text:004013A4j
.text:004013CF		       mov     edx, [ebp-20h]
.text:004013D2		       mov     eax, [ebp-1Ch]
.text:004013D5		       mov     [ebp+edx*4-12Ch], eax
.text:004013DC		       mov     edx, [ebp-20h]
.text:004013DF		       mov     eax, [ebp-2Ch]
.text:004013E2		       mov     [ebp+edx*4-22Ch], eax
.text:004013E9		       add     dword ptr [ebp-20h], 1
.text:004013ED		       mov     eax, [ebp-28h]
.text:004013F0		       add     eax, 1
.text:004013F3		       mov     [ebp-1Ch], eax
.text:004013F6		       jmp     short loc_40141A
.text:004013F8 ; ---------------------------------------------------------------------------
.text:004013F8
.text:004013F8 loc_4013F8:			       ; CODE XREF: .text:0040137Aj
.text:004013F8					       ; .text:0040138Bj
.text:004013F8		       mov     eax, [ebp-1Ch]
.text:004013FB		       mov     edx, [ebp-2Ch]
.text:004013FE		       mov     ecx, edx
.text:00401400		       sub     ecx, eax
.text:00401402		       mov     eax, ecx
.text:00401404		       cmp     eax, 1
.text:00401407		       jle     short loc_401411
.text:00401409		       mov     eax, [ebp-2Ch]
.text:0040140C		       mov     [ebp-18h], eax
.text:0040140F		       jmp     short loc_40141A
.text:00401411 ; ---------------------------------------------------------------------------
.text:00401411
.text:00401411 loc_401411:			       ; CODE XREF: .text:00401407j
.text:00401411		       mov     eax, [ebp-28h]
.text:00401414		       add     eax, 1
.text:00401417		       mov     [ebp-1Ch], eax
.text:0040141A
.text:0040141A loc_40141A:			       ; CODE XREF: .text:004011E6j
.text:0040141A					       ; .text:004013CDj ...
.text:0040141A		       mov     eax, [ebp-1Ch]
.text:0040141D		       mov     edx, [ebp-18h]
.text:00401420		       mov     ecx, edx
.text:00401422		       sub     ecx, eax
.text:00401424		       mov     eax, ecx
.text:00401426		       cmp     eax, 2
.text:00401429		       jg      loc_4011EB
.text:0040142F		       mov     eax, [ebp-1Ch]
.text:00401432		       mov     edx, [ebp-18h]
.text:00401435		       mov     ecx, edx
.text:00401437		       sub     ecx, eax
.text:00401439		       mov     eax, ecx
.text:0040143B		       cmp     eax, 2
.text:0040143E		       jnz     short loc_401499
.text:00401440		       mov     eax, [ebp-1Ch]
.text:00401443		       shl     eax, 2
.text:00401446		       add     eax, [ebp+8]
.text:00401449		       mov     edx, [eax]
.text:0040144B		       mov     eax, [ebp-18h]
.text:0040144E		       sub     eax, 1
.text:00401451		       shl     eax, 2
.text:00401454		       add     eax, [ebp+8]
.text:00401457		       mov     eax, [eax]
.text:00401459		       cmp     edx, eax
.text:0040145B		       jle     short loc_401499
.text:0040145D		       mov     eax, [ebp-1Ch]
.text:00401460		       shl     eax, 2
.text:00401463		       add     eax, [ebp+8]
.text:00401466		       mov     eax, [eax]
.text:00401468		       mov     [ebp-4],	eax
.text:0040146B		       mov     eax, [ebp-1Ch]
.text:0040146E		       shl     eax, 2
.text:00401471		       mov     edx, eax
.text:00401473		       add     edx, [ebp+8]
.text:00401476		       mov     eax, [ebp-18h]
.text:00401479		       sub     eax, 1
.text:0040147C		       shl     eax, 2
.text:0040147F		       add     eax, [ebp+8]
.text:00401482		       mov     eax, [eax]
.text:00401484		       mov     [edx], eax
.text:00401486		       mov     eax, [ebp-18h]
.text:00401489		       sub     eax, 1
.text:0040148C		       shl     eax, 2
.text:0040148F		       mov     edx, eax
.text:00401491		       add     edx, [ebp+8]
.text:00401494		       mov     eax, [ebp-4]
.text:00401497		       mov     [edx], eax
.text:00401499
.text:00401499 loc_401499:			       ; CODE XREF: .text:004011C3j
.text:00401499					       ; .text:0040143Ej ...
.text:00401499		       cmp     dword ptr [ebp-20h], 0
.text:0040149D		       jg      loc_4011C8
.text:004014A3		       leave
.text:004014A4		       retn
.text:004014A5
.text:004014A5 ; =============== S U B R O U T I N E =======================================
.text:004014A5
.text:004014A5 ; Attributes: bp-based frame
.text:004014A5
.text:004014A5 sub_4014A5      proc near	       ; CODE XREF: sub_4016FC+8Cp
.text:004014A5
.text:004014A5 var_38	       = dword ptr -38h
.text:004014A5 var_30	       = dword ptr -30h
.text:004014A5 var_2C	       = dword ptr -2Ch
.text:004014A5 var_28	       = dword ptr -28h
.text:004014A5 var_24	       = dword ptr -24h
.text:004014A5 var_20	       = dword ptr -20h
.text:004014A5 var_1C	       = dword ptr -1Ch
.text:004014A5 var_14	       = dword ptr -14h
.text:004014A5 var_10	       = dword ptr -10h
.text:004014A5 var_C	       = dword ptr -0Ch
.text:004014A5 var_8	       = dword ptr -8
.text:004014A5 var_4	       = dword ptr -4
.text:004014A5 arg_0	       = dword ptr  8
.text:004014A5 arg_4	       = dword ptr  0Ch
.text:004014A5
.text:004014A5		       push    ebp
.text:004014A6		       mov     ebp, esp
.text:004014A8		       sub     esp, 40h
.text:004014AB		       mov     edx, [ebp+arg_4]
.text:004014AE		       mov     eax, edx
.text:004014B0		       shr     eax, 1Fh
.text:004014B3		       add     eax, edx
.text:004014B5		       sar     eax, 1
.text:004014B7		       mov     [ebp+var_38], eax
.text:004014BA		       jmp     loc_4015B7
.text:004014BF ; ---------------------------------------------------------------------------
.text:004014BF
.text:004014BF loc_4014BF:			       ; CODE XREF: sub_4014A5+116j
.text:004014BF		       mov     eax, [ebp+var_38]
.text:004014C2		       mov     [ebp+var_24], eax
.text:004014C5		       mov     eax, [ebp+var_24]
.text:004014C8		       mov     [ebp+var_30], eax
.text:004014CB
.text:004014CB loc_4014CB:			       ; CODE XREF: sub_4014A5+108j
.text:004014CB		       mov     eax, [ebp+var_30]
.text:004014CE		       mov     [ebp+var_24], eax
.text:004014D1		       mov     eax, [ebp+var_24]
.text:004014D4		       add     eax, eax
.text:004014D6		       add     eax, 1
.text:004014D9		       mov     [ebp+var_2C], eax
.text:004014DC		       mov     eax, [ebp+var_2C]
.text:004014DF		       add     eax, 1
.text:004014E2		       mov     [ebp+var_28], eax
.text:004014E5		       mov     eax, [ebp+var_2C]
.text:004014E8		       cmp     eax, [ebp+arg_4]
.text:004014EB		       jge     short loc_401569
.text:004014ED		       mov     eax, [ebp+var_30]
.text:004014F0		       shl     eax, 2
.text:004014F3		       add     eax, [ebp+arg_0]
.text:004014F6		       mov     edx, [eax]
.text:004014F8		       mov     eax, [ebp+var_2C]
.text:004014FB		       shl     eax, 2
.text:004014FE		       add     eax, [ebp+arg_0]
.text:00401501		       mov     eax, [eax]
.text:00401503		       cmp     edx, eax
.text:00401505		       jg      short loc_401527
.text:00401507		       mov     eax, [ebp+var_30]
.text:0040150A		       shl     eax, 2
.text:0040150D		       add     eax, [ebp+arg_0]
.text:00401510		       mov     edx, [eax]
.text:00401512		       mov     eax, [ebp+var_2C]
.text:00401515		       shl     eax, 2
.text:00401518		       add     eax, [ebp+arg_0]
.text:0040151B		       mov     eax, [eax]
.text:0040151D		       cmp     edx, eax
.text:0040151F		       jge     short loc_401527
.text:00401521		       mov     eax, [ebp+var_2C]
.text:00401524		       mov     [ebp+var_30], eax
.text:00401527
.text:00401527 loc_401527:			       ; CODE XREF: sub_4014A5+60j
.text:00401527					       ; sub_4014A5+7Aj
.text:00401527		       mov     eax, [ebp+var_28]
.text:0040152A		       cmp     eax, [ebp+arg_4]
.text:0040152D		       jge     short loc_401569
.text:0040152F		       mov     eax, [ebp+var_30]
.text:00401532		       shl     eax, 2
.text:00401535		       add     eax, [ebp+arg_0]
.text:00401538		       mov     edx, [eax]
.text:0040153A		       mov     eax, [ebp+var_28]
.text:0040153D		       shl     eax, 2
.text:00401540		       add     eax, [ebp+arg_0]
.text:00401543		       mov     eax, [eax]
.text:00401545		       cmp     edx, eax
.text:00401547		       jg      short loc_401569
.text:00401549		       mov     eax, [ebp+var_30]
.text:0040154C		       shl     eax, 2
.text:0040154F		       add     eax, [ebp+arg_0]
.text:00401552		       mov     edx, [eax]
.text:00401554		       mov     eax, [ebp+var_28]
.text:00401557		       shl     eax, 2
.text:0040155A		       add     eax, [ebp+arg_0]
.text:0040155D		       mov     eax, [eax]
.text:0040155F		       cmp     edx, eax
.text:00401561		       jge     short loc_401569
.text:00401563		       mov     eax, [ebp+var_28]
.text:00401566		       mov     [ebp+var_30], eax
.text:00401569
.text:00401569 loc_401569:			       ; CODE XREF: sub_4014A5+46j
.text:00401569					       ; sub_4014A5+88j ...
.text:00401569		       mov     eax, [ebp+var_30]
.text:0040156C		       cmp     eax, [ebp+var_24]
.text:0040156F		       jz      short loc_4015A7
.text:00401571		       mov     eax, [ebp+var_24]
.text:00401574		       shl     eax, 2
.text:00401577		       add     eax, [ebp+arg_0]
.text:0040157A		       mov     eax, [eax]
.text:0040157C		       mov     [ebp+var_20], eax
.text:0040157F		       mov     eax, [ebp+var_24]
.text:00401582		       shl     eax, 2
.text:00401585		       mov     edx, eax
.text:00401587		       add     edx, [ebp+arg_0]
.text:0040158A		       mov     eax, [ebp+var_30]
.text:0040158D		       shl     eax, 2
.text:00401590		       add     eax, [ebp+arg_0]
.text:00401593		       mov     eax, [eax]
.text:00401595		       mov     [edx], eax
.text:00401597		       mov     eax, [ebp+var_30]
.text:0040159A		       shl     eax, 2
.text:0040159D		       mov     edx, eax
.text:0040159F		       add     edx, [ebp+arg_0]
.text:004015A2		       mov     eax, [ebp+var_20]
.text:004015A5		       mov     [edx], eax
.text:004015A7
.text:004015A7 loc_4015A7:			       ; CODE XREF: sub_4014A5+CAj
.text:004015A7		       mov     eax, [ebp+var_30]
.text:004015AA		       cmp     eax, [ebp+var_24]
.text:004015AD		       jnz     loc_4014CB
.text:004015B3		       sub     [ebp+var_38], 1
.text:004015B7
.text:004015B7 loc_4015B7:			       ; CODE XREF: sub_4014A5+15j
.text:004015B7		       cmp     [ebp+var_38], 0
.text:004015BB		       jns     loc_4014BF
.text:004015C1		       mov     eax, [ebp+arg_4]
.text:004015C4		       sub     eax, 1
.text:004015C7		       mov     [ebp+var_38], eax
.text:004015CA		       jmp     loc_4016F0
.text:004015CF ; ---------------------------------------------------------------------------
.text:004015CF
.text:004015CF loc_4015CF:			       ; CODE XREF: sub_4014A5+24Fj
.text:004015CF		       mov     eax, [ebp+arg_0]
.text:004015D2		       mov     eax, [eax]
.text:004015D4		       mov     [ebp+var_1C], eax
.text:004015D7		       mov     eax, [ebp+var_38]
.text:004015DA		       shl     eax, 2
.text:004015DD		       add     eax, [ebp+arg_0]
.text:004015E0		       mov     edx, [eax]
.text:004015E2		       mov     eax, [ebp+arg_0]
.text:004015E5		       mov     [eax], edx
.text:004015E7		       mov     eax, [ebp+var_38]
.text:004015EA		       shl     eax, 2
.text:004015ED		       mov     edx, eax
.text:004015EF		       add     edx, [ebp+arg_0]
.text:004015F2		       mov     eax, [ebp+var_1C]
.text:004015F5		       mov     [edx], eax
.text:004015F7		       mov     [ebp+var_8], 0
.text:004015FE		       mov     eax, [ebp+var_8]
.text:00401601		       mov     [ebp+var_14], eax
.text:00401604
.text:00401604 loc_401604:			       ; CODE XREF: sub_4014A5+241j
.text:00401604		       mov     eax, [ebp+var_14]
.text:00401607		       mov     [ebp+var_8], eax
.text:0040160A		       mov     eax, [ebp+var_8]
.text:0040160D		       add     eax, eax
.text:0040160F		       add     eax, 1
.text:00401612		       mov     [ebp+var_10], eax
.text:00401615		       mov     eax, [ebp+var_10]
.text:00401618		       add     eax, 1
.text:0040161B		       mov     [ebp+var_C], eax
.text:0040161E		       mov     eax, [ebp+var_10]
.text:00401621		       cmp     eax, [ebp+var_38]
.text:00401624		       jge     short loc_4016A2
.text:00401626		       mov     eax, [ebp+var_14]
.text:00401629		       shl     eax, 2
.text:0040162C		       add     eax, [ebp+arg_0]
.text:0040162F		       mov     edx, [eax]
.text:00401631		       mov     eax, [ebp+var_10]
.text:00401634		       shl     eax, 2
.text:00401637		       add     eax, [ebp+arg_0]
.text:0040163A		       mov     eax, [eax]
.text:0040163C		       cmp     edx, eax
.text:0040163E		       jg      short loc_401660
.text:00401640		       mov     eax, [ebp+var_14]
.text:00401643		       shl     eax, 2
.text:00401646		       add     eax, [ebp+arg_0]
.text:00401649		       mov     edx, [eax]
.text:0040164B		       mov     eax, [ebp+var_10]
.text:0040164E		       shl     eax, 2
.text:00401651		       add     eax, [ebp+arg_0]
.text:00401654		       mov     eax, [eax]
.text:00401656		       cmp     edx, eax
.text:00401658		       jge     short loc_401660
.text:0040165A		       mov     eax, [ebp+var_10]
.text:0040165D		       mov     [ebp+var_14], eax
.text:00401660
.text:00401660 loc_401660:			       ; CODE XREF: sub_4014A5+199j
.text:00401660					       ; sub_4014A5+1B3j
.text:00401660		       mov     eax, [ebp+var_C]
.text:00401663		       cmp     eax, [ebp+var_38]
.text:00401666		       jge     short loc_4016A2
.text:00401668		       mov     eax, [ebp+var_14]
.text:0040166B		       shl     eax, 2
.text:0040166E		       add     eax, [ebp+arg_0]
.text:00401671		       mov     edx, [eax]
.text:00401673		       mov     eax, [ebp+var_C]
.text:00401676		       shl     eax, 2
.text:00401679		       add     eax, [ebp+arg_0]
.text:0040167C		       mov     eax, [eax]
.text:0040167E		       cmp     edx, eax
.text:00401680		       jg      short loc_4016A2
.text:00401682		       mov     eax, [ebp+var_14]
.text:00401685		       shl     eax, 2
.text:00401688		       add     eax, [ebp+arg_0]
.text:0040168B		       mov     edx, [eax]
.text:0040168D		       mov     eax, [ebp+var_C]
.text:00401690		       shl     eax, 2
.text:00401693		       add     eax, [ebp+arg_0]
.text:00401696		       mov     eax, [eax]
.text:00401698		       cmp     edx, eax
.text:0040169A		       jge     short loc_4016A2
.text:0040169C		       mov     eax, [ebp+var_C]
.text:0040169F		       mov     [ebp+var_14], eax
.text:004016A2
.text:004016A2 loc_4016A2:			       ; CODE XREF: sub_4014A5+17Fj
.text:004016A2					       ; sub_4014A5+1C1j ...
.text:004016A2		       mov     eax, [ebp+var_14]
.text:004016A5		       cmp     eax, [ebp+var_8]
.text:004016A8		       jz      short loc_4016E0
.text:004016AA		       mov     eax, [ebp+var_8]
.text:004016AD		       shl     eax, 2
.text:004016B0		       add     eax, [ebp+arg_0]
.text:004016B3		       mov     eax, [eax]
.text:004016B5		       mov     [ebp+var_4], eax
.text:004016B8		       mov     eax, [ebp+var_8]
.text:004016BB		       shl     eax, 2
.text:004016BE		       mov     edx, eax
.text:004016C0		       add     edx, [ebp+arg_0]
.text:004016C3		       mov     eax, [ebp+var_14]
.text:004016C6		       shl     eax, 2
.text:004016C9		       add     eax, [ebp+arg_0]
.text:004016CC		       mov     eax, [eax]
.text:004016CE		       mov     [edx], eax
.text:004016D0		       mov     eax, [ebp+var_14]
.text:004016D3		       shl     eax, 2
.text:004016D6		       mov     edx, eax
.text:004016D8		       add     edx, [ebp+arg_0]
.text:004016DB		       mov     eax, [ebp+var_4]
.text:004016DE		       mov     [edx], eax
.text:004016E0
.text:004016E0 loc_4016E0:			       ; CODE XREF: sub_4014A5+203j
.text:004016E0		       mov     eax, [ebp+var_14]
.text:004016E3		       cmp     eax, [ebp+var_8]
.text:004016E6		       jnz     loc_401604
.text:004016EC		       sub     [ebp+var_38], 1
.text:004016F0
.text:004016F0 loc_4016F0:			       ; CODE XREF: sub_4014A5+125j
.text:004016F0		       cmp     [ebp+var_38], 0
.text:004016F4		       jns     loc_4015CF
.text:004016FA		       leave
.text:004016FB		       retn
.text:004016FB sub_4014A5      endp
.text:004016FB
.text:004016FC
.text:004016FC ; =============== S U B R O U T I N E =======================================
.text:004016FC
.text:004016FC
.text:004016FC sub_4016FC      proc near	       ; DATA XREF: start+27o
.text:004016FC
.text:004016FC var_C	       = dword ptr -0Ch
.text:004016FC var_8	       = dword ptr -8
.text:004016FC var_4	       = dword ptr -4
.text:004016FC Format	       = byte ptr  4
.text:004016FC
.text:004016FC		       lea     ecx, [esp+Format]
.text:00401700		       and     esp, 0FFFFFFF0h
.text:00401703		       push    dword ptr [ecx-4]
.text:00401706		       push    ebp	       ; Format
.text:00401707		       mov     ebp, esp
.text:00401709		       push    ecx	       ; Ch
.text:0040170A		       mov     eax, 0FC4h
.text:0040170F		       call    sub_4017EC
.text:00401714		       mov     [ebp-0FB8h], ecx
.text:0040171A		       call    __main
.text:0040171F		       mov     edx, [ebp-0FB8h]
.text:00401725		       mov     eax, [edx]
.text:00401727		       sub     eax, 1
.text:0040172A		       mov     [ebp-8],	eax
.text:0040172D		       mov     dword ptr [ebp-0Ch], 0
.text:00401734		       jmp     short loc_401770
.text:00401736 ; ---------------------------------------------------------------------------
.text:00401736
.text:00401736 loc_401736:			       ; CODE XREF: sub_4016FC+7Aj
.text:00401736		       mov     eax, [ebp-0Ch]
.text:00401739		       shl     eax, 2
.text:0040173C		       lea     edx, [ebp-0FACh]
.text:00401742		       add     edx, eax
.text:00401744		       mov     eax, [ebp-0Ch]
.text:00401747		       add     eax, 1
.text:0040174A		       shl     eax, 2
.text:0040174D		       mov     ecx, [ebp-0FB8h]
.text:00401753		       add     eax, [ecx+4]
.text:00401756		       mov     eax, [eax]
.text:00401758		       mov     [esp+0Ch+var_4],	edx
.text:0040175C		       mov     [esp+0Ch+var_8],	offset aD ; "%d"
.text:00401764		       mov     [esp+0Ch+var_C],	eax
.text:00401767		       call    sscanf
.text:0040176C		       add     dword ptr [ebp-0Ch], 1
.text:00401770
.text:00401770 loc_401770:			       ; CODE XREF: sub_4016FC+38j
.text:00401770		       mov     eax, [ebp-0Ch]
.text:00401773		       cmp     eax, [ebp-8]
.text:00401776		       jl      short loc_401736
.text:00401778		       mov     eax, [ebp-8]
.text:0040177B		       mov     [esp+0Ch+var_8],	eax
.text:0040177F		       lea     eax, [ebp-0FACh]
.text:00401785		       mov     [esp+0Ch+var_C],	eax
.text:00401788		       call    sub_4014A5
.text:0040178D		       mov     dword ptr [ebp-0Ch], 0
.text:00401794		       jmp     short loc_4017B4
.text:00401796 ; ---------------------------------------------------------------------------
.text:00401796
.text:00401796 loc_401796:			       ; CODE XREF: sub_4016FC+BEj
.text:00401796		       mov     eax, [ebp-0Ch]
.text:00401799		       mov     eax, [ebp+eax*4-0FACh]
.text:004017A0		       mov     [esp+0Ch+var_8],	eax
.text:004017A4		       mov     [esp+0Ch+var_C],	offset aD_0 ; "%d "
.text:004017AB		       call    printf
.text:004017B0		       add     dword ptr [ebp-0Ch], 1
.text:004017B4
.text:004017B4 loc_4017B4:			       ; CODE XREF: sub_4016FC+98j
.text:004017B4		       mov     eax, [ebp-0Ch]
.text:004017B7		       cmp     eax, [ebp-8]
.text:004017BA		       jl      short loc_401796
.text:004017BC		       mov     [esp+0Ch+var_C],	0Ah
.text:004017C3		       call    putchar
.text:004017C8		       mov     eax, 0
.text:004017CD		       add     esp, 0FC4h
.text:004017D3		       pop     ecx
.text:004017D4		       pop     ebp
.text:004017D5		       lea     esp, [ecx-4]
.text:004017D8		       retn
.text:004017D8 sub_4016FC      endp ; sp-analysis failed
.text:004017D8
.text:004017D8 ; ---------------------------------------------------------------------------
.text:004017D9		       align 4
.text:004017DC ; [00000006 BYTES: COLLAPSED FUNCTION __deregister_frame_info. PRESS KEYPAD "+" TO EXPAND]
.text:004017E2		       align 4
.text:004017E4 ; [00000006 BYTES: COLLAPSED FUNCTION __register_frame_info. PRESS KEYPAD "+" TO	EXPAND]
.text:004017EA		       align 4
.text:004017EC
.text:004017EC ; =============== S U B R O U T I N E =======================================
.text:004017EC
.text:004017EC
.text:004017EC sub_4017EC      proc near	       ; CODE XREF: sub_4016FC+13p
.text:004017EC
.text:004017EC arg_0	       = byte ptr  4
.text:004017EC
.text:004017EC		       push    ecx
.text:004017ED		       lea     ecx, [esp+4+arg_0]
.text:004017F1		       cmp     eax, 1000h
.text:004017F6		       jb      short loc_40180D
.text:004017F8
.text:004017F8 loc_4017F8:			       ; CODE XREF: sub_4017EC+1Fj
.text:004017F8		       sub     ecx, 1000h
.text:004017FE		       or      dword ptr [ecx],	0
.text:00401801		       sub     eax, 1000h
.text:00401806		       cmp     eax, 1000h
.text:0040180B		       ja      short loc_4017F8
.text:0040180D
.text:0040180D loc_40180D:			       ; CODE XREF: sub_4017EC+Aj
.text:0040180D		       sub     ecx, eax
.text:0040180F		       or      dword ptr [ecx],	0
.text:00401812		       mov     eax, esp
.text:00401814		       mov     esp, ecx
.text:00401816		       mov     ecx, [eax]
.text:00401818		       mov     eax, [eax+4]
.text:0040181B		       push    eax
.text:0040181C		       retn
.text:0040181C sub_4017EC      endp
.text:0040181C
.text:0040181C ; ---------------------------------------------------------------------------
.text:0040181D		       align 10h
.text:00401820
.text:00401820 ; =============== S U B R O U T I N E =======================================
.text:00401820
.text:00401820 ; Attributes: bp-based frame
.text:00401820
.text:00401820 sub_401820      proc near	       ; CODE XREF: start+2Ep
.text:00401820
.text:00401820 var_8	       = dword ptr -8
.text:00401820 var_4	       = dword ptr -4
.text:00401820 arg_0	       = dword ptr  8
.text:00401820
.text:00401820		       push    ebp
.text:00401821		       mov     ebp, esp
.text:00401823		       sub     esp, 8
.text:00401826		       mov     eax, [ebp+arg_0]
.text:00401829		       mov     [esp+8+var_4], 0
.text:00401831		       mov     [esp+8+var_8], eax
.text:00401834		       call    sub_4018B0
.text:00401839		       sub     esp, 8
.text:0040183C		       call    ds:_dll_crt0@0  ; dll_crt0()
.text:00401842		       nop
.text:00401843		       nop
.text:00401844		       nop
.text:00401845		       nop
.text:00401846		       nop
.text:00401847		       nop
.text:00401848		       nop
.text:00401849		       nop
.text:0040184A		       nop
.text:0040184B		       nop
.text:0040184C		       nop
.text:0040184D		       nop
.text:0040184E		       nop
.text:0040184F		       nop
.text:0040184F sub_401820      endp ; sp-analysis failed
.text:0040184F
.text:00401850
.text:00401850 ; =============== S U B R O U T I N E =======================================
.text:00401850
.text:00401850 ; Attributes: bp-based frame
.text:00401850
.text:00401850 sub_401850      proc near	       ; CODE XREF: start+4Ap
.text:00401850					       ; DATA XREF: sub_4018B0+72o ...
.text:00401850		       push    ebp
.text:00401851		       mov     ebp, esp
.text:00401853		       pop     ebp
.text:00401854		       retn
.text:00401854 sub_401850      endp
.text:00401854
.text:00401854 ; ---------------------------------------------------------------------------
.text:00401855		       align 10h
.text:00401860
.text:00401860 ; =============== S U B R O U T I N E =======================================
.text:00401860
.text:00401860 ; Attributes: bp-based frame
.text:00401860
.text:00401860 sub_401860      proc near	       ; CODE XREF: start+66p
.text:00401860					       ; DATA XREF: sub_4018B0+79o ...
.text:00401860		       push    ebp
.text:00401861		       mov     ebp, esp
.text:00401863		       pop     ebp
.text:00401864		       retn
.text:00401864 sub_401860      endp
.text:00401864
.text:00401864 ; ---------------------------------------------------------------------------
.text:00401865		       align 10h
.text:00401870
.text:00401870 ; =============== S U B R O U T I N E =======================================
.text:00401870
.text:00401870 ; Attributes: bp-based frame
.text:00401870
.text:00401870 sub_401870      proc near	       ; CODE XREF: start+82p
.text:00401870					       ; DATA XREF: sub_4018B0+80o ...
.text:00401870		       push    ebp
.text:00401871		       mov     ebp, esp
.text:00401873		       pop     ebp
.text:00401874		       retn
.text:00401874 sub_401870      endp
.text:00401874
.text:00401874 ; ---------------------------------------------------------------------------
.text:00401875		       align 10h
.text:00401880
.text:00401880 ; =============== S U B R O U T I N E =======================================
.text:00401880
.text:00401880 ; Attributes: bp-based frame
.text:00401880
.text:00401880 sub_401880      proc near	       ; CODE XREF: start+9Ep
.text:00401880					       ; DATA XREF: sub_4018B0+87o ...
.text:00401880		       push    ebp
.text:00401881		       mov     ebp, esp
.text:00401883		       pop     ebp
.text:00401884		       retn
.text:00401884 sub_401880      endp
.text:00401884
.text:00401884 ; ---------------------------------------------------------------------------
.text:00401885		       align 10h
.text:00401890 ; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
.text:00401896		       align 4
.text:00401898 ; [00000006 BYTES: COLLAPSED FUNCTION sscanf. PRESS KEYPAD "+" TO EXPAND]
.text:0040189E		       align 10h
.text:004018A0 ; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
.text:004018A6		       align 4
.text:004018A8 ; [00000006 BYTES: COLLAPSED FUNCTION putchar. PRESS KEYPAD "+" TO EXPAND]
.text:004018AE		       align 10h
.text:004018B0
.text:004018B0 ; =============== S U B R O U T I N E =======================================
.text:004018B0
.text:004018B0 ; Attributes: bp-based frame
.text:004018B0
.text:004018B0 sub_4018B0      proc near	       ; CODE XREF: sub_401820+14p
.text:004018B0					       ; sub_401D20+18p
.text:004018B0
.text:004018B0 var_18	       = dword ptr -18h
.text:004018B0 arg_0	       = dword ptr  8
.text:004018B0 arg_4	       = dword ptr  0Ch
.text:004018B0
.text:004018B0		       push    ebp
.text:004018B1		       mov     ebp, esp
.text:004018B3		       push    esi
.text:004018B4		       push    ebx
.text:004018B5		       sub     esp, 10h
.text:004018B8		       mov     ebx, [ebp+arg_4]
.text:004018BB		       mov     esi, [ebp+arg_0]
.text:004018BE		       mov     [esp+18h+var_18], 8
.text:004018C5		       call    cygwin_internal
.text:004018CA		       test    ebx, ebx
.text:004018CC		       mov     ecx, eax
.text:004018CE		       jz      loc_401A90
.text:004018D4		       mov     eax, ds:_impure_ptr
.text:004018D9		       test    ecx, ecx
.text:004018DB		       mov     dword ptr [ebx+4], 0A8h
.text:004018E2		       mov     dword ptr [ebx+8], 3EFh
.text:004018E9		       mov     dword ptr [ebx+0Ch], 7
.text:004018F0		       mov     [ebx+10h], eax
.text:004018F3		       mov     eax, [ebp+0]
.text:004018F6		       mov     dword ptr [ebx+80h], 0
.text:00401900		       mov     dword ptr [ebx+84h], 0E6h
.text:0040190A		       mov     dword ptr [ebx+2Ch], offset dword_401DC0
.text:00401911		       mov     dword ptr [ebx+30h], offset dword_401DCC
.text:00401918		       mov     dword ptr [ebx+14h], offset dword_404020
.text:0040191F		       mov     [ebx+28h], esi
.text:00401922		       mov     dword ptr [ebx+48h], offset sub_401850
.text:00401929		       mov     dword ptr [ebx+4Ch], offset sub_401860
.text:00401930		       mov     dword ptr [ebx+50h], offset sub_401870
.text:00401937		       mov     dword ptr [ebx+54h], offset sub_401880
.text:0040193E		       mov     dword ptr [ebx+24h], offset dword_404024
.text:00401945		       mov     [ebx], eax
.text:00401947		       mov     dword ptr [ebx+18h], offset loc_401D00
.text:0040194E		       mov     dword ptr [ebx+1Ch], offset loc_401D08
.text:00401955		       mov     dword ptr [ebx+20h], offset loc_401D10
.text:0040195C		       mov     dword ptr [ebx+44h], offset loc_401D18
.text:00401963		       jz      loc_401A2A
.text:00401969
.text:00401969 loc_401969:			       ; CODE XREF: sub_4018B0+277j
.text:00401969		       mov     edx, [ecx+78h]
.text:0040196C		       test    edx, edx
.text:0040196E		       jz      loc_401A2A
.text:00401974		       mov     eax, ds:dword_404028
.text:00401979		       test    eax, eax
.text:0040197B		       jnz     loc_401A2A
.text:00401981		       mov     eax, dword_402020
.text:00401986		       test    eax, eax
.text:00401988		       jz      loc_401BA0
.text:0040198E
.text:0040198E loc_40198E:			       ; CODE XREF: sub_4018B0+2F7j
.text:0040198E		       mov     eax, dword_402024
.text:00401993		       test    eax, eax
.text:00401995		       jz      loc_401B90
.text:0040199B
.text:0040199B loc_40199B:			       ; CODE XREF: sub_4018B0+2E8j
.text:0040199B		       mov     eax, dword_402028
.text:004019A0		       test    eax, eax
.text:004019A2		       jz      loc_401B80
.text:004019A8
.text:004019A8 loc_4019A8:			       ; CODE XREF: sub_4018B0+2D8j
.text:004019A8		       mov     eax, dword_40202C
.text:004019AD		       test    eax, eax
.text:004019AF		       jz      loc_401B70
.text:004019B5
.text:004019B5 loc_4019B5:			       ; CODE XREF: sub_4018B0+2C8j
.text:004019B5		       mov     eax, dword_402030
.text:004019BA		       test    eax, eax
.text:004019BC		       jz      loc_401B60
.text:004019C2
.text:004019C2 loc_4019C2:			       ; CODE XREF: sub_4018B0+2B8j
.text:004019C2		       mov     esi, dword_402034
.text:004019C8		       test    esi, esi
.text:004019CA		       jz      loc_401B50
.text:004019D0
.text:004019D0 loc_4019D0:			       ; CODE XREF: sub_4018B0+2A8j
.text:004019D0		       mov     ecx, dword_402038
.text:004019D6		       test    ecx, ecx
.text:004019D8		       jz      loc_401B40
.text:004019DE
.text:004019DE loc_4019DE:			       ; CODE XREF: sub_4018B0+298j
.text:004019DE		       mov     eax, dword_40203C
.text:004019E3		       test    eax, eax
.text:004019E5		       jz      loc_401B32
.text:004019EB
.text:004019EB loc_4019EB:			       ; CODE XREF: sub_4018B0+28Aj
.text:004019EB		       mov     eax, dword_402020
.text:004019F0		       mov     [edx], eax
.text:004019F2		       mov     eax, dword_402024
.text:004019F7		       mov     [edx+4],	eax
.text:004019FA		       mov     eax, dword_402028
.text:004019FF		       mov     [edx+8],	eax
.text:00401A02		       mov     eax, dword_40202C
.text:00401A07		       mov     [edx+0Ch], eax
.text:00401A0A		       mov     eax, dword_402030
.text:00401A0F		       mov     [edx+10h], eax
.text:00401A12		       mov     eax, dword_402034
.text:00401A17		       mov     [edx+14h], eax
.text:00401A1A		       mov     eax, dword_402038
.text:00401A1F		       mov     [edx+18h], eax
.text:00401A22		       mov     eax, dword_40203C
.text:00401A27		       mov     [edx+1Ch], eax
.text:00401A2A
.text:00401A2A loc_401A2A:			       ; CODE XREF: sub_4018B0+B3j
.text:00401A2A					       ; sub_4018B0+BEj ...
.text:00401A2A		       mov     [esp+18h+var_18], 0
.text:00401A31		       call    GetModuleHandleA
.text:00401A36		       mov     dword ptr [ebx+34h], offset off_402000
.text:00401A3D		       mov     dword ptr [ebx+38h], offset dword_4020AC
.text:00401A44		       mov     dword ptr [ebx+3Ch], offset dword_404000
.text:00401A4B		       mov     dword ptr [ebx+40h], offset dword_404130
.text:00401A52		       mov     dword ptr [ebx+94h], offset dword_403000
.text:00401A5C		       mov     [ebx+7Ch], eax
.text:00401A5F		       sub     esp, 4
.text:00401A62		       mov     dword ptr [ebx+98h], offset dword_403000
.text:00401A6C		       mov     dword ptr [ebx+9Ch], 400000h
.text:00401A76		       call    sub_401CF0
.text:00401A7B		       lea     esp, [ebp-8]
.text:00401A7E		       mov     eax, 1
.text:00401A83		       pop     ebx
.text:00401A84		       pop     esi
.text:00401A85		       pop     ebp
.text:00401A86		       retn    8
.text:00401A86 ; ---------------------------------------------------------------------------
.text:00401A89		       align 10h
.text:00401A90
.text:00401A90 loc_401A90:			       ; CODE XREF: sub_4018B0+1Ej
.text:00401A90		       mov     dword ptr [eax+4], 0A8h
.text:00401A97		       mov     edx, ds:_impure_ptr
.text:00401A9D		       test    ecx, ecx
.text:00401A9F		       mov     dword ptr [eax+8], 3EFh
.text:00401AA6		       mov     ebx, ecx
.text:00401AA8		       mov     dword ptr [eax+0Ch], 7
.text:00401AAF		       mov     dword ptr [eax+80h], 0
.text:00401AB9		       mov     dword ptr [eax+84h], 0E6h
.text:00401AC3		       mov     dword ptr [eax+2Ch], offset dword_401DC0
.text:00401ACA		       mov     dword ptr [eax+30h], offset dword_401DCC
.text:00401AD1		       mov     dword ptr [eax+14h], offset dword_404020
.text:00401AD8		       mov     eax, [eax+0A4h]
.text:00401ADE		       mov     [ecx+28h], esi
.text:00401AE1		       mov     dword ptr [ecx+48h], offset sub_401850
.text:00401AE8		       mov     dword ptr [ecx+4Ch], offset sub_401860
.text:00401AEF		       mov     [edx], eax
.text:00401AF1		       mov     eax, [ebp+0]
.text:00401AF4		       mov     dword ptr [ecx+50h], offset sub_401870
.text:00401AFB		       mov     dword ptr [ecx+54h], offset sub_401880
.text:00401B02		       mov     dword ptr [ecx+24h], offset dword_404024
.text:00401B09		       mov     [ecx], eax
.text:00401B0B		       mov     dword ptr [ecx+18h], offset loc_401D00
.text:00401B12		       mov     dword ptr [ecx+1Ch], offset loc_401D08
.text:00401B19		       mov     dword ptr [ecx+20h], offset loc_401D10
.text:00401B20		       mov     dword ptr [ecx+44h], offset loc_401D18
.text:00401B27		       jnz     loc_401969
.text:00401B2D		       jmp     loc_401A2A
.text:00401B32 ; ---------------------------------------------------------------------------
.text:00401B32
.text:00401B32 loc_401B32:			       ; CODE XREF: sub_4018B0+135j
.text:00401B32		       mov     eax, [edx+1Ch]
.text:00401B35		       mov     dword_40203C, eax
.text:00401B3A		       jmp     loc_4019EB
.text:00401B3A ; ---------------------------------------------------------------------------
.text:00401B3F		       align 10h
.text:00401B40
.text:00401B40 loc_401B40:			       ; CODE XREF: sub_4018B0+128j
.text:00401B40		       mov     eax, [edx+18h]
.text:00401B43		       mov     dword_402038, eax
.text:00401B48		       jmp     loc_4019DE
.text:00401B48 ; ---------------------------------------------------------------------------
.text:00401B4D		       align 10h
.text:00401B50
.text:00401B50 loc_401B50:			       ; CODE XREF: sub_4018B0+11Aj
.text:00401B50		       mov     eax, [edx+14h]
.text:00401B53		       mov     dword_402034, eax
.text:00401B58		       jmp     loc_4019D0
.text:00401B58 ; ---------------------------------------------------------------------------
.text:00401B5D		       align 10h
.text:00401B60
.text:00401B60 loc_401B60:			       ; CODE XREF: sub_4018B0+10Cj
.text:00401B60		       mov     eax, [edx+10h]
.text:00401B63		       mov     dword_402030, eax
.text:00401B68		       jmp     loc_4019C2
.text:00401B68 ; ---------------------------------------------------------------------------
.text:00401B6D		       align 10h
.text:00401B70
.text:00401B70 loc_401B70:			       ; CODE XREF: sub_4018B0+FFj
.text:00401B70		       mov     eax, [edx+0Ch]
.text:00401B73		       mov     dword_40202C, eax
.text:00401B78		       jmp     loc_4019B5
.text:00401B78 ; ---------------------------------------------------------------------------
.text:00401B7D		       align 10h
.text:00401B80
.text:00401B80 loc_401B80:			       ; CODE XREF: sub_4018B0+F2j
.text:00401B80		       mov     eax, [edx+8]
.text:00401B83		       mov     dword_402028, eax
.text:00401B88		       jmp     loc_4019A8
.text:00401B88 ; ---------------------------------------------------------------------------
.text:00401B8D		       align 10h
.text:00401B90
.text:00401B90 loc_401B90:			       ; CODE XREF: sub_4018B0+E5j
.text:00401B90		       mov     eax, [edx+4]
.text:00401B93		       mov     dword_402024, eax
.text:00401B98		       jmp     loc_40199B
.text:00401B98 ; ---------------------------------------------------------------------------
.text:00401B9D		       align 10h
.text:00401BA0
.text:00401BA0 loc_401BA0:			       ; CODE XREF: sub_4018B0+D8j
.text:00401BA0		       mov     eax, [edx]
.text:00401BA2		       mov     dword_402020, eax
.text:00401BA7		       jmp     loc_40198E
.text:00401BA7 sub_4018B0      endp
.text:00401BA7
.text:00401BA7 ; ---------------------------------------------------------------------------
.text:00401BAC		       align 10h
.text:00401BB0
.text:00401BB0 ; =============== S U B R O U T I N E =======================================
.text:00401BB0
.text:00401BB0 ; Attributes: bp-based frame
.text:00401BB0
.text:00401BB0 sub_401BB0      proc near	       ; DATA XREF: .text:00401CA4o
.text:00401BB0
.text:00401BB0 var_18	       = dword ptr -18h
.text:00401BB0 var_14	       = dword ptr -14h
.text:00401BB0 var_10	       = dword ptr -10h
.text:00401BB0
.text:00401BB0		       push    ebp
.text:00401BB1		       mov     ebp, esp
.text:00401BB3		       sub     esp, 18h
.text:00401BB6		       mov     eax, ds:dword_404050
.text:00401BBB		       mov     [esp+18h+var_10], eax
.text:00401BBF		       mov     eax, ds:dword_404040
.text:00401BC4		       mov     [esp+18h+var_14], eax
.text:00401BC8		       mov     eax, ds:dword_404030
.text:00401BCD		       mov     [esp+18h+var_18], eax
.text:00401BD0		       call    sub_401D70
.text:00401BD5		       sub     esp, 0Ch
.text:00401BD8		       leave
.text:00401BD9		       retn
.text:00401BD9 sub_401BB0      endp
.text:00401BD9
.text:00401BD9 ; ---------------------------------------------------------------------------
.text:00401BDA		       align 10h
.text:00401BE0
.text:00401BE0 loc_401BE0:			       ; CODE XREF: .text:00401CD4j
.text:00401BE0		       push    ebp
.text:00401BE1		       mov     ebp, esp
.text:00401BE3		       push    ebx
.text:00401BE4		       sub     esp, 14h
.text:00401BE7		       mov     eax, [ebp+0Ch]
.text:00401BEA		       mov     ecx, [ebp+8]
.text:00401BED		       mov     edx, [ebp+10h]
.text:00401BF0		       cmp     eax, 1
.text:00401BF3		       jz      loc_401C80
.text:00401BF9		       jb      short loc_401C13
.text:00401BFB		       cmp     eax, 2
.text:00401BFE		       jz      short loc_401C66
.text:00401C00		       cmp     eax, 3
.text:00401C03		       mov     ebx, 1
.text:00401C08		       jz      short loc_401C50
.text:00401C0A
.text:00401C0A loc_401C0A:			       ; CODE XREF: .text:00401C2Ej
.text:00401C0A					       ; .text:00401C47j
.text:00401C0A		       mov     eax, ebx
.text:00401C0C		       mov     ebx, [ebp-4]
.text:00401C0F		       leave
.text:00401C10		       retn    0Ch
.text:00401C13 ; ---------------------------------------------------------------------------
.text:00401C13
.text:00401C13 loc_401C13:			       ; CODE XREF: .text:00401BF9j
.text:00401C13		       mov     [esp+8],	edx
.text:00401C17		       mov     dword ptr [esp+4], 0
.text:00401C1F		       mov     [esp], ecx
.text:00401C22		       call    sub_401D70
.text:00401C27		       sub     esp, 0Ch
.text:00401C2A		       test    eax, eax
.text:00401C2C		       mov     ebx, eax
.text:00401C2E		       jz      short loc_401C0A
.text:00401C30		       mov     eax, ds:dword_404060
.text:00401C35		       mov     [esp], eax
.text:00401C38		       call    cygwin_detach_dll
.text:00401C3D		       mov     ds:dword_404060,	0FFFFFFFFh
.text:00401C47		       jmp     short loc_401C0A
.text:00401C47 ; ---------------------------------------------------------------------------
.text:00401C49		       align 10h
.text:00401C50
.text:00401C50 loc_401C50:			       ; CODE XREF: .text:00401C08j
.text:00401C50		       mov     [ebp+10h], edx
.text:00401C53		       mov     ebx, [ebp-4]
.text:00401C56		       mov     dword ptr [ebp+0Ch], 3
.text:00401C5D		       mov     [ebp+8],	ecx
.text:00401C60		       leave
.text:00401C61		       jmp     sub_401D70
.text:00401C66 ; ---------------------------------------------------------------------------
.text:00401C66
.text:00401C66 loc_401C66:			       ; CODE XREF: .text:00401BFEj
.text:00401C66		       mov     [ebp+10h], edx
.text:00401C69		       mov     ebx, [ebp-4]
.text:00401C6C		       mov     dword ptr [ebp+0Ch], 2
.text:00401C73		       mov     [ebp+8],	ecx
.text:00401C76		       leave
.text:00401C77		       jmp     sub_401D70
.text:00401C77 ; ---------------------------------------------------------------------------
.text:00401C7C		       align 10h
.text:00401C80
.text:00401C80 loc_401C80:			       ; CODE XREF: .text:00401BF3j
.text:00401C80		       xor     eax, eax
.text:00401C82		       test    edx, edx
.text:00401C84		       setz    al
.text:00401C87		       xor     ebx, ebx
.text:00401C89		       mov     ds:dword_404030,	ecx
.text:00401C8F		       mov     ds:dword_404040,	1
.text:00401C99		       mov     ds:dword_404050,	edx
.text:00401C9F		       mov     ds:dword_404028,	eax
.text:00401CA4		       mov     dword ptr [esp+4], offset sub_401BB0
.text:00401CAC		       mov     [esp], ecx
.text:00401CAF		       call    sub_401D20
.text:00401CB4		       cmp     eax, 0FFFFFFFFh
.text:00401CB7		       setnz   bl
.text:00401CBA		       mov     ds:dword_404060,	eax
.text:00401CBF		       mov     eax, ebx
.text:00401CC1		       mov     ebx, [ebp-4]
.text:00401CC4		       leave
.text:00401CC5		       retn    0Ch
.text:00401CC5 ; ---------------------------------------------------------------------------
.text:00401CC8		       align 10h
.text:00401CD0		       push    ebp
.text:00401CD1		       mov     ebp, esp
.text:00401CD3		       leave
.text:00401CD4		       jmp     loc_401BE0
.text:00401CD4 ; ---------------------------------------------------------------------------
.text:00401CD9		       align 10h
.text:00401CE0 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+" TO EXPAND]
.text:00401CE6		       align 10h
.text:00401CF0
.text:00401CF0 ; =============== S U B R O U T I N E =======================================
.text:00401CF0
.text:00401CF0 ; Attributes: bp-based frame
.text:00401CF0
.text:00401CF0 sub_401CF0      proc near	       ; CODE XREF: sub_4018B0+1C6p
.text:00401CF0		       push    ebp
.text:00401CF1		       mov     ebp, esp
.text:00401CF3		       pop     ebp
.text:00401CF4		       retn
.text:00401CF4 sub_401CF0      endp
.text:00401CF4
.text:00401CF4 ; ---------------------------------------------------------------------------
.text:00401CF5		       align 10h
.text:00401D00
.text:00401D00 loc_401D00:			       ; DATA XREF: sub_4018B0+97o
.text:00401D00					       ; sub_4018B0+25Bo
.text:00401D00		       jmp     ds:malloc
.text:00401D00 ; ---------------------------------------------------------------------------
.text:00401D06		       align 4
.text:00401D08
.text:00401D08 loc_401D08:			       ; DATA XREF: sub_4018B0+9Eo
.text:00401D08					       ; sub_4018B0+262o
.text:00401D08		       jmp     ds:free
.text:00401D08 ; ---------------------------------------------------------------------------
.text:00401D0E		       align 10h
.text:00401D10
.text:00401D10 loc_401D10:			       ; DATA XREF: sub_4018B0+A5o
.text:00401D10					       ; sub_4018B0+269o
.text:00401D10		       jmp     ds:realloc
.text:00401D10 ; ---------------------------------------------------------------------------
.text:00401D16		       align 4
.text:00401D18
.text:00401D18 loc_401D18:			       ; DATA XREF: sub_4018B0+ACo
.text:00401D18					       ; sub_4018B0+270o
.text:00401D18		       jmp     ds:calloc
.text:00401D18 ; ---------------------------------------------------------------------------
.text:00401D1E		       align 10h
.text:00401D20
.text:00401D20 ; =============== S U B R O U T I N E =======================================
.text:00401D20
.text:00401D20 ; Attributes: bp-based frame
.text:00401D20
.text:00401D20 sub_401D20      proc near	       ; CODE XREF: .text:00401CAFp
.text:00401D20
.text:00401D20 var_18	       = dword ptr -18h
.text:00401D20 var_14	       = dword ptr -14h
.text:00401D20 var_4	       = dword ptr -4
.text:00401D20 arg_0	       = dword ptr  8
.text:00401D20 arg_4	       = dword ptr  0Ch
.text:00401D20
.text:00401D20 ; FUNCTION CHUNK	AT .text:00401D80 SIZE 00000006	BYTES
.text:00401D20
.text:00401D20		       push    ebp
.text:00401D21		       mov     ebp, esp
.text:00401D23		       push    ebx
.text:00401D24		       sub     esp, 14h
.text:00401D27		       mov     ebx, [ebp+arg_0]
.text:00401D2A		       mov     [esp+18h+var_14], offset	dword_404070
.text:00401D32		       mov     eax, [ebp+arg_4]
.text:00401D35		       mov     [esp+18h+var_18], eax
.text:00401D38		       call    sub_4018B0
.text:00401D3D		       mov     [ebp+arg_0], ebx
.text:00401D40		       mov     ebx, [ebp+var_4]
.text:00401D43		       mov     [ebp+arg_4], offset dword_404070
.text:00401D4A		       sub     esp, 8
.text:00401D4D		       leave
.text:00401D4E		       jmp     loc_401D80
.text:00401D4E sub_401D20      endp
.text:00401D4E
.text:00401D4E ; ---------------------------------------------------------------------------
.text:00401D53		       align 10h
.text:00401D60 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_detach_dll.	PRESS KEYPAD "+" TO EXPAND]
.text:00401D66		       align 10h
.text:00401D70
.text:00401D70 ; =============== S U B R O U T I N E =======================================
.text:00401D70
.text:00401D70 ; Attributes: bp-based frame
.text:00401D70
.text:00401D70 sub_401D70      proc near	       ; CODE XREF: sub_401BB0+20p
.text:00401D70					       ; .text:00401C22p ...
.text:00401D70		       push    ebp
.text:00401D71		       mov     eax, 1
.text:00401D76		       mov     ebp, esp
.text:00401D78		       pop     ebp
.text:00401D79		       retn    0Ch
.text:00401D79 sub_401D70      endp
.text:00401D79
.text:00401D79 ; ---------------------------------------------------------------------------
.text:00401D7C		       align 10h
.text:00401D80 ; START OF FUNCTION CHUNK FOR sub_401D20
.text:00401D80
.text:00401D80 loc_401D80:			       ; CODE XREF: sub_401D20+2Ej
.text:00401D80		       jmp     ds:dll_dllcrt0
.text:00401D80 ; END OF	FUNCTION CHUNK FOR sub_401D20
.text:00401D80 ; ---------------------------------------------------------------------------
.text:00401D86		       align 4
.text:00401D88 ; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA. PRESS KEYPAD "+"	TO EXPAND]
.text:00401D8E		       align 10h
.text:00401D90 ; [00000006 BYTES: COLLAPSED FUNCTION GetProcAddress. PRESS KEYPAD "+" TO EXPAND]
.text:00401D96		       align 10h
.text:00401DA0		       push    ebp
.text:00401DA1		       mov     ebp, esp
.text:00401DA3		       pop     ebp
.text:00401DA4		       jmp     loc_4010B0
.text:00401DA4 ; ---------------------------------------------------------------------------
.text:00401DA9		       align 10h
.text:00401DB0		       push    ebp
.text:00401DB1		       mov     ebp, esp
.text:00401DB3		       pop     ebp
.text:00401DB4		       jmp     loc_401150
.text:00401DB4 ; ---------------------------------------------------------------------------
.text:00401DB9		       align 10h
.text:00401DC0 dword_401DC0    dd 0FFFFFFFFh, 401DA0h, 0 ; DATA	XREF: sub_4018B0+5Ao
.text:00401DC0					       ; sub_4018B0+213o
.text:00401DCC dword_401DCC    dd 0FFFFFFFFh, 401DB0h, 0Bh dup(0)
.text:00401DCC					       ; DATA XREF: sub_4018B0+61o
.text:00401DCC					       ; sub_4018B0+21Ao
.text:00401E00		       dd 80h dup(?)
.text:00401E00 _text	       ends
.text:00401E00
.data:00402000 ; Section 2. (virtual address 00002000)
.data:00402000 ; Virtual size		       : 000000AC (    172.)
.data:00402000 ; Section size in file	       : 00000200 (    512.)
.data:00402000 ; Offset	to raw data for	section: 00001200
.data:00402000 ; Flags C0600040: Data Readable Writable
.data:00402000 ; Alignment     : 32 bytes
.data:00402000 ; ===========================================================================
.data:00402000
.data:00402000 ; Segment type: Pure data
.data:00402000 ; Segment permissions: Read/Write
.data:00402000 ; Segment alignment '32byte' can not be represented in assembly
.data:00402000 _data	       segment para public 'DATA' use32
.data:00402000		       assume cs:_data
.data:00402000		       ;org 402000h
.data:00402000 off_402000      dd offset __register_frame_info
.data:00402000					       ; DATA XREF: .text:loc_401130r
.data:00402000					       ; sub_4018B0+186o
.data:00402004 off_402004      dd offset __deregister_frame_info
.data:00402004					       ; DATA XREF: .text:loc_401190r
.data:00402008 dword_402008    dd 0		       ; DATA XREF: .text:loc_401140r
.data:0040200C		       align 20h
.data:00402020 dword_402020    dd 0		       ; DATA XREF: sub_4018B0+D1r
.data:00402020					       ; sub_4018B0:loc_4019EBr ...
.data:00402024 dword_402024    dd 0		       ; DATA XREF: sub_4018B0:loc_40198Er
.data:00402024					       ; sub_4018B0+142r ...
.data:00402028 dword_402028    dd 0		       ; DATA XREF: sub_4018B0:loc_40199Br
.data:00402028					       ; sub_4018B0+14Ar ...
.data:0040202C dword_40202C    dd 0		       ; DATA XREF: sub_4018B0:loc_4019A8r
.data:0040202C					       ; sub_4018B0+152r ...
.data:00402030 dword_402030    dd 0		       ; DATA XREF: sub_4018B0:loc_4019B5r
.data:00402030					       ; sub_4018B0+15Ar ...
.data:00402034 dword_402034    dd 0		       ; DATA XREF: sub_4018B0:loc_4019C2r
.data:00402034					       ; sub_4018B0+162r ...
.data:00402038 dword_402038    dd 0		       ; DATA XREF: sub_4018B0:loc_4019D0r
.data:00402038					       ; sub_4018B0+16Ar ...
.data:0040203C dword_40203C    dd 0		       ; DATA XREF: sub_4018B0:loc_4019DEr
.data:0040203C					       ; sub_4018B0+172r ...
.data:00402040 aCyggcc_s1_dll  db 'cyggcc_s-1.dll',0   ; DATA XREF: .text:004010B6o
.data:00402040					       ; .text:00401156o
.data:0040204F a__register_fra db '__register_frame_info',0 ; DATA XREF: .text:004010C9o
.data:00402065 aCyggcj9_dll    db 'cyggcj-9.dll',0     ; DATA XREF: .text:004010FAo
.data:00402072 a_jv_registercl db '_Jv_RegisterClasses',0 ; DATA XREF: .text:0040110Do
.data:00402086 a__deregister_f db '__deregister_frame_info',0 ; DATA XREF: .text:00401169o
.data:0040209E		       align 10h
.data:004020A0 aD	       db '%d',0               ; DATA XREF: sub_4016FC+60o
.data:004020A3 aD_0	       db '%d ',0              ; DATA XREF: sub_4016FC+A8o
.data:004020A7		       align 4
.data:004020A8 dword_4020A8    dd 0		       ; DATA XREF: .text:loc_4010F1r
.data:004020A8					       ; .text:loc_401124o
.data:004020AC dword_4020AC    dd 55h dup(0)	       ; DATA XREF: sub_4018B0+18Do
.data:00402200		       align 1000h
.data:00402200 _data	       ends
.data:00402200
.eh_frame:00403000 ; Section 3.	(virtual address 00003000)
.eh_frame:00403000 ; Virtual size		   : 00000004 (	     4.)
.eh_frame:00403000 ; Section size in file	   : 00000200 (	   512.)
.eh_frame:00403000 ; Offset to raw data	for section: 00001400
.eh_frame:00403000 ; Flags C0300040: Data Readable Writable
.eh_frame:00403000 ; Alignment	   : 4 bytes
.eh_frame:00403000 ; ===========================================================================
.eh_frame:00403000
.eh_frame:00403000 ; Segment type: Pure	data
.eh_frame:00403000 ; Segment permissions: Read/Write
.eh_frame:00403000 _eh_frame	   segment dword public	'DATA' use32
.eh_frame:00403000		   assume cs:_eh_frame
.eh_frame:00403000		   ;org	403000h
.eh_frame:00403000 dword_403000	   dd 80h dup(0)	   ; DATA XREF:	.text:004010E8o
.eh_frame:00403000					   ; .text:loc_401180o	...
.eh_frame:00403200		   align 1000h
.eh_frame:00403200 _eh_frame	   ends
.eh_frame:00403200
.bss:00404000 ;	Section	4. (virtual address 00004000)
.bss:00404000 ;	Virtual	size		      :	00000130 (    304.)
.bss:00404000 ;	Section	size in	file	      :	00000000 (	0.)
.bss:00404000 ;	Offset to raw data for section:	00000000
.bss:00404000 ;	Flags C0400080:	Bss Readable Writable
.bss:00404000 ;	Alignment     :	8 bytes
.bss:00404000 ;	===========================================================================
.bss:00404000
.bss:00404000 ;	Segment	type: Uninitialized
.bss:00404000 ;	Segment	permissions: Read/Write
.bss:00404000 ;	Segment	alignment 'qword' can not be represented in assembly
.bss:00404000 _bss	      segment para public 'BSS' use32
.bss:00404000		      assume cs:_bss
.bss:00404000		      ;org 404000h
.bss:00404000		      assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00404000 dword_404000    dd 8 dup(?)	      ;	DATA XREF: .text:loc_4010E0o
.bss:00404000					      ;	sub_4018B0+194o
.bss:00404020 dword_404020    dd ?		      ;	DATA XREF: sub_4018B0+68o
.bss:00404020					      ;	sub_4018B0+221o
.bss:00404024 dword_404024    dd ?		      ;	DATA XREF: sub_4018B0+8Eo
.bss:00404024					      ;	sub_4018B0+252o
.bss:00404028 dword_404028    dd ?		      ;	DATA XREF: sub_4018B0+C4r
.bss:00404028					      ;	.text:00401C9Fw
.bss:0040402C		      align 10h
.bss:00404030 dword_404030    dd ?		      ;	DATA XREF: sub_401BB0+18r
.bss:00404030					      ;	.text:00401C89w
.bss:00404034		      align 10h
.bss:00404040 dword_404040    dd ?		      ;	DATA XREF: sub_401BB0+Fr
.bss:00404040					      ;	.text:00401C8Fw
.bss:00404044		      align 10h
.bss:00404050 dword_404050    dd ?		      ;	DATA XREF: sub_401BB0+6r
.bss:00404050					      ;	.text:00401C99w
.bss:00404054		      align 10h
.bss:00404060 dword_404060    dd ?		      ;	DATA XREF: .text:00401C30r
.bss:00404060					      ;	.text:00401C3Dw ...
.bss:00404064		      align 10h
.bss:00404070 dword_404070    dd 30h dup(?)	      ;	DATA XREF: sub_401D20+Ao
.bss:00404070					      ;	sub_401D20+23o
.bss:00404130 dword_404130    dd 3B4h dup(?)	      ;	DATA XREF: sub_4018B0+19Bo
.bss:00404130 _bss	      ends
.bss:00404130
.idata:00405000	; Section 5. (virtual address 00005000)
.idata:00405000	; Virtual size			: 00000270 (	624.)
.idata:00405000	; Section size in file		: 00000400 (   1024.)
.idata:00405000	; Offset to raw	data for section: 00001600
.idata:00405000	; Flags	C0300040: Data Readable	Writable
.idata:00405000	; Alignment	: 4 bytes
.idata:00405000	; ===========================================================================
.idata:00405000
.idata:00405000	; Segment type:	Externs
.idata:00405000	; _idata
.idata:00405000
.idata:00405001
.idata:004050A0	;
.idata:004050A0	; Imports from cygwin1.dll
.idata:004050A0	;
.idata:004050A0			extrn __imp___main:dword ; DATA	XREF: __mainr
.idata:004050A4	; __stdcall dll_crt0()
.idata:004050A4			extrn _dll_crt0@0:dword	; CODE XREF: sub_401820+1Cp
.idata:004050A4						; DATA XREF: sub_401820+1Cr
.idata:004050A8			extrn _impure_ptr:dword	; DATA XREF: sub_4018B0+24r
.idata:004050A8						; sub_4018B0+1E7r
.idata:004050AC	; void *__cdecl	calloc(size_t NumOfElements, size_t SizeOfElements)
.idata:004050AC			extrn calloc:dword	; DATA XREF: .text:loc_401D18r
.idata:004050B0			extrn __imp_cygwin_detach_dll:dword
.idata:004050B0						; DATA XREF: cygwin_detach_dllr
.idata:004050B4			extrn __imp_cygwin_internal:dword
.idata:004050B4						; DATA XREF: cygwin_internalr
.idata:004050B8			extrn dll_dllcrt0:dword	; DATA XREF: sub_401D20:loc_401D80r
.idata:004050BC	; void __cdecl free(void *Memory)
.idata:004050BC			extrn free:dword	; DATA XREF: .text:loc_401D08r
.idata:004050C0	; void *__cdecl	malloc(size_t Size)
.idata:004050C0			extrn malloc:dword	; DATA XREF: .text:loc_401D00r
.idata:004050C4	; int printf(const char	*Format, ...)
.idata:004050C4			extrn __imp_printf:dword ; DATA	XREF: printfr
.idata:004050C8	; int __cdecl putchar(int Ch)
.idata:004050C8			extrn __imp_putchar:dword ; DATA XREF: putcharr
.idata:004050CC	; void *__cdecl	realloc(void *Memory, size_t NewSize)
.idata:004050CC			extrn realloc:dword	; DATA XREF: .text:loc_401D10r
.idata:004050D0	; int sscanf(const char	*Src, const char *Format, ...)
.idata:004050D0			extrn __imp_sscanf:dword ; DATA	XREF: sscanfr
.idata:004050D4
.idata:004050D8	;
.idata:004050D8	; Imports from cyggcc_s-1.dll
.idata:004050D8	;
.idata:004050D8			extrn __imp___deregister_frame_info:dword
.idata:004050D8						; DATA XREF: __deregister_frame_infor
.idata:004050DC			extrn __imp___register_frame_info:dword
.idata:004050DC						; DATA XREF: __register_frame_infor
.idata:004050E0
.idata:004050E4	;
.idata:004050E4	; Imports from KERNEL32.dll
.idata:004050E4	;
.idata:004050E4	; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
.idata:004050E4			extrn __imp_GetModuleHandleA:dword
.idata:004050E4						; DATA XREF: GetModuleHandleAr
.idata:004050E8	; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
.idata:004050E8			extrn __imp_GetProcAddress:dword
.idata:004050E8						; DATA XREF: GetProcAddressr
.idata:004050EC
.idata:004050EC
.idata:004050EC
.idata:004050EC			end start
