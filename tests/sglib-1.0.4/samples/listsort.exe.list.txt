;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2009 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-313D-7374-F1			    |
; |   Aditya Thakur, University	of Wisconsin/Computer Sciences Department   |
; +-------------------------------------------------------------------------+
;
.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00401000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.text:00401000 ; |			License	info: 48-313D-7374-F1			   |
.text:00401000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input MD5   : 31905D79DAFBE4152185A1D49A2299F9
.text:00401000
.text:00401000 ; File Name   : C:\aditya\work\waldo\tests\sglib-1.0.4\samples\listsort.exe
.text:00401000 ; Format	     : Portable	executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size		       : 00000A28 (   2600.)
.text:00401000 ; Section size in file	       : 00000C00 (   3072.)
.text:00401000 ; Offset	to raw data for	section: 00000400
.text:00401000 ; Flags 60500060: Text Data Executable Readable
.text:00401000 ; Alignment     : 16 bytes
.text:00401000
.text:00401000		       .686p
.text:00401000		       .mmx
.text:00401000		       .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text	       segment para public 'CODE' use32
.text:00401000		       assume cs:_text
.text:00401000		       ;org 401000h
.text:00401000		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: bp-based frame
.text:00401000
.text:00401000		       public start
.text:00401000 start	       proc near
.text:00401000
.text:00401000 var_28	       = dword ptr -28h
.text:00401000 var_24	       = dword ptr -24h
.text:00401000 var_20	       = dword ptr -20h
.text:00401000 var_2	       = word ptr -2
.text:00401000
.text:00401000		       push    ebp
.text:00401001		       mov     ebp, esp
.text:00401003		       sub     esp, 28h
.text:00401006		       and     esp, 0FFFFFFF0h
.text:00401009		       fnstcw  [ebp+var_2]
.text:0040100C		       movzx   eax, [ebp+var_2]
.text:00401010		       and     ax, 0F0C0h
.text:00401014		       mov     [ebp+var_2], ax
.text:00401018		       movzx   eax, [ebp+var_2]
.text:0040101C		       or      ax, 33Fh
.text:00401020		       mov     [ebp+var_2], ax
.text:00401024		       fldcw   [ebp+var_2]
.text:00401027		       mov     [esp+28h+var_28], offset	loc_4011A0
.text:0040102E		       call    sub_401470
.text:00401033		       mov     [esp+28h+var_20], 0
.text:0040103B		       mov     [esp+28h+var_24], 0
.text:00401043		       mov     [esp+28h+var_28], 0
.text:0040104A		       call    sub_4014A0
.text:0040104F		       mov     [esp+28h+var_20], 0
.text:00401057		       mov     [esp+28h+var_24], 0
.text:0040105F		       mov     [esp+28h+var_28], 0
.text:00401066		       call    sub_4014B0
.text:0040106B		       mov     [esp+28h+var_20], 0
.text:00401073		       mov     [esp+28h+var_24], 0
.text:0040107B		       mov     [esp+28h+var_28], 0
.text:00401082		       call    sub_4014C0
.text:00401087		       mov     [esp+28h+var_20], 0
.text:0040108F		       mov     [esp+28h+var_24], 0
.text:00401097		       mov     [esp+28h+var_28], 0
.text:0040109E		       call    sub_4014D0
.text:004010A3		       leave
.text:004010A4		       retn
.text:004010A4 start	       endp
.text:004010A4
.text:004010A4 ; ---------------------------------------------------------------------------
.text:004010A5		       align 10h
.text:004010B0
.text:004010B0 loc_4010B0:			       ; CODE XREF: .text:004019F4j
.text:004010B0		       push    ebp
.text:004010B1		       mov     ebp, esp
.text:004010B3		       sub     esp, 8
.text:004010B6		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:004010BD		       call    GetModuleHandleA
.text:004010C2		       sub     esp, 4
.text:004010C5		       test    eax, eax
.text:004010C7		       jz      short loc_401130
.text:004010C9		       mov     dword ptr [esp+4], offset a__register_fra ; "__register_frame_info"
.text:004010D1		       mov     [esp], eax
.text:004010D4		       call    GetProcAddress
.text:004010D9		       sub     esp, 8
.text:004010DC		       test    eax, eax
.text:004010DE		       jz      short loc_401130
.text:004010E0
.text:004010E0 loc_4010E0:			       ; CODE XREF: .text:00401139j
.text:004010E0		       mov     dword ptr [esp+4], offset dword_404000
.text:004010E8		       mov     dword ptr [esp],	offset dword_403000
.text:004010EF		       call    eax
.text:004010F1
.text:004010F1 loc_4010F1:			       ; CODE XREF: .text:00401137j
.text:004010F1		       mov     eax, dword_4020A8
.text:004010F6		       test    eax, eax
.text:004010F8		       jz      short locret_40112D
.text:004010FA		       mov     dword ptr [esp],	offset aCyggcj9_dll ; "cyggcj-9.dll"
.text:00401101		       call    GetModuleHandleA
.text:00401106		       sub     esp, 4
.text:00401109		       test    eax, eax
.text:0040110B		       jz      short loc_401140
.text:0040110D		       mov     dword ptr [esp+4], offset a_jv_registercl ; "_Jv_RegisterClasses"
.text:00401115		       mov     [esp], eax
.text:00401118		       call    GetProcAddress
.text:0040111D		       sub     esp, 8
.text:00401120		       test    eax, eax
.text:00401122		       jz      short loc_401140
.text:00401124
.text:00401124 loc_401124:			       ; CODE XREF: .text:00401147j
.text:00401124		       mov     dword ptr [esp],	offset dword_4020A8
.text:0040112B		       call    eax
.text:0040112D
.text:0040112D locret_40112D:			       ; CODE XREF: .text:004010F8j
.text:0040112D		       leave
.text:0040112E		       retn
.text:0040112E ; ---------------------------------------------------------------------------
.text:0040112F		       align 10h
.text:00401130
.text:00401130 loc_401130:			       ; CODE XREF: .text:004010C7j
.text:00401130					       ; .text:004010DEj
.text:00401130		       mov     eax, off_402000
.text:00401135		       test    eax, eax
.text:00401137		       jz      short loc_4010F1
.text:00401139		       jmp     short loc_4010E0
.text:00401139 ; ---------------------------------------------------------------------------
.text:0040113B		       align 10h
.text:00401140
.text:00401140 loc_401140:			       ; CODE XREF: .text:0040110Bj
.text:00401140					       ; .text:00401122j
.text:00401140		       mov     eax, dword_402008
.text:00401145		       test    eax, eax
.text:00401147		       jnz     short loc_401124
.text:00401149		       leave
.text:0040114A		       retn
.text:0040114A ; ---------------------------------------------------------------------------
.text:0040114B		       align 10h
.text:00401150
.text:00401150 loc_401150:			       ; CODE XREF: .text:00401A04j
.text:00401150		       push    ebp
.text:00401151		       mov     ebp, esp
.text:00401153		       sub     esp, 8
.text:00401156		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:0040115D		       call    GetModuleHandleA
.text:00401162		       sub     esp, 4
.text:00401165		       test    eax, eax
.text:00401167		       jz      short loc_401190
.text:00401169		       mov     dword ptr [esp+4], offset a__deregister_f ; "__deregister_frame_info"
.text:00401171		       mov     [esp], eax
.text:00401174		       call    GetProcAddress
.text:00401179		       sub     esp, 8
.text:0040117C		       test    eax, eax
.text:0040117E		       jz      short loc_401190
.text:00401180
.text:00401180 loc_401180:			       ; CODE XREF: .text:00401197j
.text:00401180		       mov     dword ptr [esp],	offset dword_403000
.text:00401187		       call    eax
.text:00401189		       leave
.text:0040118A		       retn
.text:0040118A ; ---------------------------------------------------------------------------
.text:0040118B		       align 10h
.text:00401190
.text:00401190 loc_401190:			       ; CODE XREF: .text:00401167j
.text:00401190					       ; .text:0040117Ej
.text:00401190		       mov     eax, off_402004
.text:00401195		       test    eax, eax
.text:00401197		       jnz     short loc_401180
.text:00401199		       leave
.text:0040119A		       retn
.text:0040119A ; ---------------------------------------------------------------------------
.text:0040119B		       align 10h
.text:004011A0
.text:004011A0 loc_4011A0:			       ; DATA XREF: start+27o
.text:004011A0		       lea     ecx, [esp+4]
.text:004011A4		       and     esp, 0FFFFFFF0h
.text:004011A7		       push    dword ptr [ecx-4]
.text:004011AA		       push    ebp
.text:004011AB		       mov     ebp, esp
.text:004011AD		       push    ecx
.text:004011AE		       sub     esp, 74h
.text:004011B1		       mov     [ebp-68h], ecx
.text:004011B4		       call    __main
.text:004011B9		       mov     dword ptr [ebp-48h], 0
.text:004011C0		       mov     dword ptr [ebp-50h], 1
.text:004011C7		       jmp     short loc_401218
.text:004011C9 ; ---------------------------------------------------------------------------
.text:004011C9
.text:004011C9 loc_4011C9:			       ; CODE XREF: .text:00401220j
.text:004011C9		       mov     eax, [ebp-50h]
.text:004011CC		       shl     eax, 2
.text:004011CF		       mov     edx, [ebp-68h]
.text:004011D2		       add     eax, [edx+4]
.text:004011D5		       mov     edx, [eax]
.text:004011D7		       lea     eax, [ebp-54h]
.text:004011DA		       mov     [esp+8],	eax
.text:004011DE		       mov     dword ptr [esp+4], offset aD ; "%d"
.text:004011E6		       mov     [esp], edx
.text:004011E9		       call    sscanf
.text:004011EE		       mov     dword ptr [esp],	8
.text:004011F5		       call    malloc
.text:004011FA		       mov     [ebp-4Ch], eax
.text:004011FD		       mov     edx, [ebp-54h]
.text:00401200		       mov     eax, [ebp-4Ch]
.text:00401203		       mov     [eax], edx
.text:00401205		       mov     edx, [ebp-4Ch]
.text:00401208		       mov     eax, [ebp-48h]
.text:0040120B		       mov     [edx+4],	eax
.text:0040120E		       mov     eax, [ebp-4Ch]
.text:00401211		       mov     [ebp-48h], eax
.text:00401214		       add     dword ptr [ebp-50h], 1
.text:00401218
.text:00401218 loc_401218:			       ; CODE XREF: .text:004011C7j
.text:00401218		       mov     eax, [ebp-50h]
.text:0040121B		       mov     ecx, [ebp-68h]
.text:0040121E		       cmp     eax, [ecx]
.text:00401220		       jl      short loc_4011C9
.text:00401222		       mov     eax, [ebp-48h]
.text:00401225		       mov     [ebp-40h], eax
.text:00401228		       mov     dword ptr [ebp-38h], 0
.text:0040122F		       jmp     short loc_40124F
.text:00401231 ; ---------------------------------------------------------------------------
.text:00401231
.text:00401231 loc_401231:			       ; CODE XREF: .text:00401253j
.text:00401231		       mov     eax, [ebp-40h]
.text:00401234		       mov     eax, [eax+4]
.text:00401237		       mov     [ebp-3Ch], eax
.text:0040123A		       mov     edx, [ebp-40h]
.text:0040123D		       mov     eax, [ebp-38h]
.text:00401240		       mov     [edx+4],	eax
.text:00401243		       mov     eax, [ebp-40h]
.text:00401246		       mov     [ebp-38h], eax
.text:00401249		       mov     eax, [ebp-3Ch]
.text:0040124C		       mov     [ebp-40h], eax
.text:0040124F
.text:0040124F loc_40124F:			       ; CODE XREF: .text:0040122Fj
.text:0040124F		       cmp     dword ptr [ebp-40h], 0
.text:00401253		       jnz     short loc_401231
.text:00401255		       mov     eax, [ebp-38h]
.text:00401258		       mov     [ebp-48h], eax
.text:0040125B		       mov     eax, [ebp-48h]
.text:0040125E		       mov     [ebp-58h], eax
.text:00401261		       mov     dword ptr [ebp-18h], 1
.text:00401268		       mov     dword ptr [ebp-1Ch], 1
.text:0040126F		       jmp     loc_4013D4
.text:00401274 ; ---------------------------------------------------------------------------
.text:00401274
.text:00401274 loc_401274:			       ; CODE XREF: .text:004013D8j
.text:00401274		       mov     eax, [ebp-58h]
.text:00401277		       mov     [ebp-2Ch], eax
.text:0040127A		       mov     dword ptr [ebp-58h], 0
.text:00401281		       lea     eax, [ebp-58h]
.text:00401284		       mov     [ebp-24h], eax
.text:00401287		       mov     dword ptr [ebp-18h], 0
.text:0040128E		       jmp     loc_4013C2
.text:00401293 ; ---------------------------------------------------------------------------
.text:00401293
.text:00401293 loc_401293:			       ; CODE XREF: .text:004013C6j
.text:00401293		       mov     eax, [ebp-2Ch]
.text:00401296		       mov     [ebp-34h], eax
.text:00401299		       mov     dword ptr [ebp-20h], 1
.text:004012A0		       mov     eax, [ebp-34h]
.text:004012A3		       mov     [ebp-28h], eax
.text:004012A6		       jmp     short loc_4012B5
.text:004012A8 ; ---------------------------------------------------------------------------
.text:004012A8
.text:004012A8 loc_4012A8:			       ; CODE XREF: .text:004012C1j
.text:004012A8		       add     dword ptr [ebp-20h], 1
.text:004012AC		       mov     eax, [ebp-28h]
.text:004012AF		       mov     eax, [eax+4]
.text:004012B2		       mov     [ebp-28h], eax
.text:004012B5
.text:004012B5 loc_4012B5:			       ; CODE XREF: .text:004012A6j
.text:004012B5		       mov     eax, [ebp-20h]
.text:004012B8		       cmp     eax, [ebp-1Ch]
.text:004012BB		       jge     short loc_4012C3
.text:004012BD		       cmp     dword ptr [ebp-28h], 0
.text:004012C1		       jnz     short loc_4012A8
.text:004012C3
.text:004012C3 loc_4012C3:			       ; CODE XREF: .text:004012BBj
.text:004012C3		       cmp     dword ptr [ebp-28h], 0
.text:004012C7		       jnz     short loc_4012D6
.text:004012C9		       mov     edx, [ebp-24h]
.text:004012CC		       mov     eax, [ebp-34h]
.text:004012CF		       mov     [edx], eax
.text:004012D1		       jmp     loc_4013CC
.text:004012D6 ; ---------------------------------------------------------------------------
.text:004012D6
.text:004012D6 loc_4012D6:			       ; CODE XREF: .text:004012C7j
.text:004012D6		       mov     eax, [ebp-28h]
.text:004012D9		       mov     eax, [eax+4]
.text:004012DC		       mov     [ebp-30h], eax
.text:004012DF		       mov     eax, [ebp-28h]
.text:004012E2		       mov     dword ptr [eax+4], 0
.text:004012E9		       mov     dword ptr [ebp-20h], 1
.text:004012F0		       mov     eax, [ebp-30h]
.text:004012F3		       mov     [ebp-28h], eax
.text:004012F6		       jmp     short loc_401305
.text:004012F8 ; ---------------------------------------------------------------------------
.text:004012F8
.text:004012F8 loc_4012F8:			       ; CODE XREF: .text:00401311j
.text:004012F8		       add     dword ptr [ebp-20h], 1
.text:004012FC		       mov     eax, [ebp-28h]
.text:004012FF		       mov     eax, [eax+4]
.text:00401302		       mov     [ebp-28h], eax
.text:00401305
.text:00401305 loc_401305:			       ; CODE XREF: .text:004012F6j
.text:00401305		       mov     eax, [ebp-20h]
.text:00401308		       cmp     eax, [ebp-1Ch]
.text:0040130B		       jge     short loc_401313
.text:0040130D		       cmp     dword ptr [ebp-28h], 0
.text:00401311		       jnz     short loc_4012F8
.text:00401313
.text:00401313 loc_401313:			       ; CODE XREF: .text:0040130Bj
.text:00401313		       cmp     dword ptr [ebp-28h], 0
.text:00401317		       jnz     short loc_401322
.text:00401319		       mov     dword ptr [ebp-2Ch], 0
.text:00401320		       jmp     short loc_401381
.text:00401322 ; ---------------------------------------------------------------------------
.text:00401322
.text:00401322 loc_401322:			       ; CODE XREF: .text:00401317j
.text:00401322		       mov     eax, [ebp-28h]
.text:00401325		       mov     eax, [eax+4]
.text:00401328		       mov     [ebp-2Ch], eax
.text:0040132B		       mov     eax, [ebp-28h]
.text:0040132E		       mov     dword ptr [eax+4], 0
.text:00401335		       jmp     short loc_401381
.text:00401337 ; ---------------------------------------------------------------------------
.text:00401337
.text:00401337 loc_401337:			       ; CODE XREF: .text:0040138Bj
.text:00401337		       mov     eax, [ebp-34h]
.text:0040133A		       mov     edx, [eax]
.text:0040133C		       mov     eax, [ebp-30h]
.text:0040133F		       mov     eax, [eax]
.text:00401341		       mov     ecx, edx
.text:00401343		       sub     ecx, eax
.text:00401345		       mov     eax, ecx
.text:00401347		       test    eax, eax
.text:00401349		       jns     short loc_401367
.text:0040134B		       mov     edx, [ebp-24h]
.text:0040134E		       mov     eax, [ebp-34h]
.text:00401351		       mov     [edx], eax
.text:00401353		       mov     eax, [ebp-34h]
.text:00401356		       add     eax, 4
.text:00401359		       mov     [ebp-24h], eax
.text:0040135C		       mov     eax, [ebp-34h]
.text:0040135F		       mov     eax, [eax+4]
.text:00401362		       mov     [ebp-34h], eax
.text:00401365		       jmp     short loc_401381
.text:00401367 ; ---------------------------------------------------------------------------
.text:00401367
.text:00401367 loc_401367:			       ; CODE XREF: .text:00401349j
.text:00401367		       mov     edx, [ebp-24h]
.text:0040136A		       mov     eax, [ebp-30h]
.text:0040136D		       mov     [edx], eax
.text:0040136F		       mov     eax, [ebp-30h]
.text:00401372		       add     eax, 4
.text:00401375		       mov     [ebp-24h], eax
.text:00401378		       mov     eax, [ebp-30h]
.text:0040137B		       mov     eax, [eax+4]
.text:0040137E		       mov     [ebp-30h], eax
.text:00401381
.text:00401381 loc_401381:			       ; CODE XREF: .text:00401320j
.text:00401381					       ; .text:00401335j ...
.text:00401381		       cmp     dword ptr [ebp-34h], 0
.text:00401385		       jz      short loc_40138D
.text:00401387		       cmp     dword ptr [ebp-30h], 0
.text:0040138B		       jnz     short loc_401337
.text:0040138D
.text:0040138D loc_40138D:			       ; CODE XREF: .text:00401385j
.text:0040138D		       cmp     dword ptr [ebp-34h], 0
.text:00401391		       jz      short loc_40139D
.text:00401393		       mov     edx, [ebp-24h]
.text:00401396		       mov     eax, [ebp-34h]
.text:00401399		       mov     [edx], eax
.text:0040139B		       jmp     short loc_4013B2
.text:0040139D ; ---------------------------------------------------------------------------
.text:0040139D
.text:0040139D loc_40139D:			       ; CODE XREF: .text:00401391j
.text:0040139D		       mov     edx, [ebp-24h]
.text:004013A0		       mov     eax, [ebp-30h]
.text:004013A3		       mov     [edx], eax
.text:004013A5		       jmp     short loc_4013B2
.text:004013A7 ; ---------------------------------------------------------------------------
.text:004013A7
.text:004013A7 loc_4013A7:			       ; CODE XREF: .text:004013B9j
.text:004013A7		       mov     eax, [ebp-24h]
.text:004013AA		       mov     eax, [eax]
.text:004013AC		       add     eax, 4
.text:004013AF		       mov     [ebp-24h], eax
.text:004013B2
.text:004013B2 loc_4013B2:			       ; CODE XREF: .text:0040139Bj
.text:004013B2					       ; .text:004013A5j
.text:004013B2		       mov     eax, [ebp-24h]
.text:004013B5		       mov     eax, [eax]
.text:004013B7		       test    eax, eax
.text:004013B9		       jnz     short loc_4013A7
.text:004013BB		       mov     dword ptr [ebp-18h], 1
.text:004013C2
.text:004013C2 loc_4013C2:			       ; CODE XREF: .text:0040128Ej
.text:004013C2		       cmp     dword ptr [ebp-2Ch], 0
.text:004013C6		       jnz     loc_401293
.text:004013CC
.text:004013CC loc_4013CC:			       ; CODE XREF: .text:004012D1j
.text:004013CC		       mov     eax, [ebp-1Ch]
.text:004013CF		       add     eax, eax
.text:004013D1		       mov     [ebp-1Ch], eax
.text:004013D4
.text:004013D4 loc_4013D4:			       ; CODE XREF: .text:0040126Fj
.text:004013D4		       cmp     dword ptr [ebp-18h], 0
.text:004013D8		       jnz     loc_401274
.text:004013DE		       mov     eax, [ebp-58h]
.text:004013E1		       mov     [ebp-48h], eax
.text:004013E4		       mov     eax, [ebp-48h]
.text:004013E7		       mov     [ebp-10h], eax
.text:004013EA		       jmp     short loc_401410
.text:004013EC ; ---------------------------------------------------------------------------
.text:004013EC
.text:004013EC loc_4013EC:			       ; CODE XREF: .text:00401414j
.text:004013EC		       mov     eax, [ebp-10h]
.text:004013EF		       mov     eax, [eax+4]
.text:004013F2		       mov     [ebp-14h], eax
.text:004013F5		       mov     eax, [ebp-10h]
.text:004013F8		       mov     eax, [eax]
.text:004013FA		       mov     [esp+4],	eax
.text:004013FE		       mov     dword ptr [esp],	offset aD_0 ; "%d "
.text:00401405		       call    printf
.text:0040140A		       mov     eax, [ebp-14h]
.text:0040140D		       mov     [ebp-10h], eax
.text:00401410
.text:00401410 loc_401410:			       ; CODE XREF: .text:004013EAj
.text:00401410		       cmp     dword ptr [ebp-10h], 0
.text:00401414		       jnz     short loc_4013EC
.text:00401416		       mov     dword ptr [esp],	0Ah
.text:0040141D		       call    putchar
.text:00401422		       mov     eax, [ebp-48h]
.text:00401425		       mov     [ebp-8],	eax
.text:00401428		       jmp     short loc_401444
.text:0040142A ; ---------------------------------------------------------------------------
.text:0040142A
.text:0040142A loc_40142A:			       ; CODE XREF: .text:00401448j
.text:0040142A		       mov     eax, [ebp-8]
.text:0040142D		       mov     eax, [eax+4]
.text:00401430		       mov     [ebp-0Ch], eax
.text:00401433		       mov     eax, [ebp-8]
.text:00401436		       mov     [esp], eax
.text:00401439		       call    free
.text:0040143E		       mov     eax, [ebp-0Ch]
.text:00401441		       mov     [ebp-8],	eax
.text:00401444
.text:00401444 loc_401444:			       ; CODE XREF: .text:00401428j
.text:00401444		       cmp     dword ptr [ebp-8], 0
.text:00401448		       jnz     short loc_40142A
.text:0040144A		       mov     eax, 0
.text:0040144F		       add     esp, 74h
.text:00401452		       pop     ecx
.text:00401453		       pop     ebp
.text:00401454		       lea     esp, [ecx-4]
.text:00401457		       retn
.text:00401458 ; [00000006 BYTES: COLLAPSED FUNCTION __deregister_frame_info. PRESS KEYPAD "+" TO EXPAND]
.text:0040145E		       align 10h
.text:00401460 ; [00000006 BYTES: COLLAPSED FUNCTION __register_frame_info. PRESS KEYPAD "+" TO	EXPAND]
.text:00401466		       align 10h
.text:00401470
.text:00401470 ; =============== S U B R O U T I N E =======================================
.text:00401470
.text:00401470 ; Attributes: bp-based frame
.text:00401470
.text:00401470 sub_401470      proc near	       ; CODE XREF: start+2Ep
.text:00401470
.text:00401470 var_8	       = dword ptr -8
.text:00401470 var_4	       = dword ptr -4
.text:00401470 arg_0	       = dword ptr  8
.text:00401470
.text:00401470		       push    ebp
.text:00401471		       mov     ebp, esp
.text:00401473		       sub     esp, 8
.text:00401476		       mov     eax, [ebp+arg_0]
.text:00401479		       mov     [esp+8+var_4], 0
.text:00401481		       mov     [esp+8+var_8], eax
.text:00401484		       call    sub_401510
.text:00401489		       sub     esp, 8
.text:0040148C		       call    ds:_dll_crt0@0  ; dll_crt0()
.text:00401492		       nop
.text:00401493		       nop
.text:00401494		       nop
.text:00401495		       nop
.text:00401496		       nop
.text:00401497		       nop
.text:00401498		       nop
.text:00401499		       nop
.text:0040149A		       nop
.text:0040149B		       nop
.text:0040149C		       nop
.text:0040149D		       nop
.text:0040149E		       nop
.text:0040149F		       nop
.text:0040149F sub_401470      endp ; sp-analysis failed
.text:0040149F
.text:004014A0
.text:004014A0 ; =============== S U B R O U T I N E =======================================
.text:004014A0
.text:004014A0 ; Attributes: bp-based frame
.text:004014A0
.text:004014A0 sub_4014A0      proc near	       ; CODE XREF: start+4Ap
.text:004014A0					       ; DATA XREF: sub_401510+72o ...
.text:004014A0		       push    ebp
.text:004014A1		       mov     ebp, esp
.text:004014A3		       pop     ebp
.text:004014A4		       retn
.text:004014A4 sub_4014A0      endp
.text:004014A4
.text:004014A4 ; ---------------------------------------------------------------------------
.text:004014A5		       align 10h
.text:004014B0
.text:004014B0 ; =============== S U B R O U T I N E =======================================
.text:004014B0
.text:004014B0 ; Attributes: bp-based frame
.text:004014B0
.text:004014B0 sub_4014B0      proc near	       ; CODE XREF: start+66p
.text:004014B0					       ; DATA XREF: sub_401510+79o ...
.text:004014B0		       push    ebp
.text:004014B1		       mov     ebp, esp
.text:004014B3		       pop     ebp
.text:004014B4		       retn
.text:004014B4 sub_4014B0      endp
.text:004014B4
.text:004014B4 ; ---------------------------------------------------------------------------
.text:004014B5		       align 10h
.text:004014C0
.text:004014C0 ; =============== S U B R O U T I N E =======================================
.text:004014C0
.text:004014C0 ; Attributes: bp-based frame
.text:004014C0
.text:004014C0 sub_4014C0      proc near	       ; CODE XREF: start+82p
.text:004014C0					       ; DATA XREF: sub_401510+80o ...
.text:004014C0		       push    ebp
.text:004014C1		       mov     ebp, esp
.text:004014C3		       pop     ebp
.text:004014C4		       retn
.text:004014C4 sub_4014C0      endp
.text:004014C4
.text:004014C4 ; ---------------------------------------------------------------------------
.text:004014C5		       align 10h
.text:004014D0
.text:004014D0 ; =============== S U B R O U T I N E =======================================
.text:004014D0
.text:004014D0 ; Attributes: bp-based frame
.text:004014D0
.text:004014D0 sub_4014D0      proc near	       ; CODE XREF: start+9Ep
.text:004014D0					       ; DATA XREF: sub_401510+87o ...
.text:004014D0		       push    ebp
.text:004014D1		       mov     ebp, esp
.text:004014D3		       pop     ebp
.text:004014D4		       retn
.text:004014D4 sub_4014D0      endp
.text:004014D4
.text:004014D4 ; ---------------------------------------------------------------------------
.text:004014D5		       align 10h
.text:004014E0 ; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
.text:004014E6		       align 4
.text:004014E8 ; [00000006 BYTES: COLLAPSED FUNCTION sscanf. PRESS KEYPAD "+" TO EXPAND]
.text:004014EE		       align 10h
.text:004014F0 ; [00000006 BYTES: COLLAPSED FUNCTION malloc. PRESS KEYPAD "+" TO EXPAND]
.text:004014F6		       align 4
.text:004014F8 ; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
.text:004014FE		       align 10h
.text:00401500 ; [00000006 BYTES: COLLAPSED FUNCTION free. PRESS KEYPAD	"+" TO EXPAND]
.text:00401506		       align 4
.text:00401508 ; [00000006 BYTES: COLLAPSED FUNCTION putchar. PRESS KEYPAD "+" TO EXPAND]
.text:0040150E		       align 10h
.text:00401510
.text:00401510 ; =============== S U B R O U T I N E =======================================
.text:00401510
.text:00401510 ; Attributes: bp-based frame
.text:00401510
.text:00401510 sub_401510      proc near	       ; CODE XREF: sub_401470+14p
.text:00401510					       ; sub_401970+18p
.text:00401510
.text:00401510 var_18	       = dword ptr -18h
.text:00401510 arg_0	       = dword ptr  8
.text:00401510 arg_4	       = dword ptr  0Ch
.text:00401510
.text:00401510		       push    ebp
.text:00401511		       mov     ebp, esp
.text:00401513		       push    esi
.text:00401514		       push    ebx
.text:00401515		       sub     esp, 10h
.text:00401518		       mov     ebx, [ebp+arg_4]
.text:0040151B		       mov     esi, [ebp+arg_0]
.text:0040151E		       mov     [esp+18h+var_18], 8
.text:00401525		       call    cygwin_internal
.text:0040152A		       test    ebx, ebx
.text:0040152C		       mov     ecx, eax
.text:0040152E		       jz      loc_4016F0
.text:00401534		       mov     eax, ds:_impure_ptr
.text:00401539		       test    ecx, ecx
.text:0040153B		       mov     dword ptr [ebx+4], 0A8h
.text:00401542		       mov     dword ptr [ebx+8], 3EFh
.text:00401549		       mov     dword ptr [ebx+0Ch], 7
.text:00401550		       mov     [ebx+10h], eax
.text:00401553		       mov     eax, [ebp+0]
.text:00401556		       mov     dword ptr [ebx+80h], 0
.text:00401560		       mov     dword ptr [ebx+84h], 0E6h
.text:0040156A		       mov     dword ptr [ebx+2Ch], offset dword_401A10
.text:00401571		       mov     dword ptr [ebx+30h], offset dword_401A1C
.text:00401578		       mov     dword ptr [ebx+14h], offset dword_404020
.text:0040157F		       mov     [ebx+28h], esi
.text:00401582		       mov     dword ptr [ebx+48h], offset sub_4014A0
.text:00401589		       mov     dword ptr [ebx+4Ch], offset sub_4014B0
.text:00401590		       mov     dword ptr [ebx+50h], offset sub_4014C0
.text:00401597		       mov     dword ptr [ebx+54h], offset sub_4014D0
.text:0040159E		       mov     dword ptr [ebx+24h], offset dword_404024
.text:004015A5		       mov     [ebx], eax
.text:004015A7		       mov     dword ptr [ebx+18h], offset malloc
.text:004015AE		       mov     dword ptr [ebx+1Ch], offset free
.text:004015B5		       mov     dword ptr [ebx+20h], offset loc_401960
.text:004015BC		       mov     dword ptr [ebx+44h], offset loc_401968
.text:004015C3		       jz      loc_40168A
.text:004015C9
.text:004015C9 loc_4015C9:			       ; CODE XREF: sub_401510+277j
.text:004015C9		       mov     edx, [ecx+78h]
.text:004015CC		       test    edx, edx
.text:004015CE		       jz      loc_40168A
.text:004015D4		       mov     eax, ds:dword_404028
.text:004015D9		       test    eax, eax
.text:004015DB		       jnz     loc_40168A
.text:004015E1		       mov     eax, dword_402020
.text:004015E6		       test    eax, eax
.text:004015E8		       jz      loc_401800
.text:004015EE
.text:004015EE loc_4015EE:			       ; CODE XREF: sub_401510+2F7j
.text:004015EE		       mov     eax, dword_402024
.text:004015F3		       test    eax, eax
.text:004015F5		       jz      loc_4017F0
.text:004015FB
.text:004015FB loc_4015FB:			       ; CODE XREF: sub_401510+2E8j
.text:004015FB		       mov     eax, dword_402028
.text:00401600		       test    eax, eax
.text:00401602		       jz      loc_4017E0
.text:00401608
.text:00401608 loc_401608:			       ; CODE XREF: sub_401510+2D8j
.text:00401608		       mov     eax, dword_40202C
.text:0040160D		       test    eax, eax
.text:0040160F		       jz      loc_4017D0
.text:00401615
.text:00401615 loc_401615:			       ; CODE XREF: sub_401510+2C8j
.text:00401615		       mov     eax, dword_402030
.text:0040161A		       test    eax, eax
.text:0040161C		       jz      loc_4017C0
.text:00401622
.text:00401622 loc_401622:			       ; CODE XREF: sub_401510+2B8j
.text:00401622		       mov     esi, dword_402034
.text:00401628		       test    esi, esi
.text:0040162A		       jz      loc_4017B0
.text:00401630
.text:00401630 loc_401630:			       ; CODE XREF: sub_401510+2A8j
.text:00401630		       mov     ecx, dword_402038
.text:00401636		       test    ecx, ecx
.text:00401638		       jz      loc_4017A0
.text:0040163E
.text:0040163E loc_40163E:			       ; CODE XREF: sub_401510+298j
.text:0040163E		       mov     eax, dword_40203C
.text:00401643		       test    eax, eax
.text:00401645		       jz      loc_401792
.text:0040164B
.text:0040164B loc_40164B:			       ; CODE XREF: sub_401510+28Aj
.text:0040164B		       mov     eax, dword_402020
.text:00401650		       mov     [edx], eax
.text:00401652		       mov     eax, dword_402024
.text:00401657		       mov     [edx+4],	eax
.text:0040165A		       mov     eax, dword_402028
.text:0040165F		       mov     [edx+8],	eax
.text:00401662		       mov     eax, dword_40202C
.text:00401667		       mov     [edx+0Ch], eax
.text:0040166A		       mov     eax, dword_402030
.text:0040166F		       mov     [edx+10h], eax
.text:00401672		       mov     eax, dword_402034
.text:00401677		       mov     [edx+14h], eax
.text:0040167A		       mov     eax, dword_402038
.text:0040167F		       mov     [edx+18h], eax
.text:00401682		       mov     eax, dword_40203C
.text:00401687		       mov     [edx+1Ch], eax
.text:0040168A
.text:0040168A loc_40168A:			       ; CODE XREF: sub_401510+B3j
.text:0040168A					       ; sub_401510+BEj ...
.text:0040168A		       mov     [esp+18h+var_18], 0
.text:00401691		       call    GetModuleHandleA
.text:00401696		       mov     dword ptr [ebx+34h], offset off_402000
.text:0040169D		       mov     dword ptr [ebx+38h], offset dword_4020AC
.text:004016A4		       mov     dword ptr [ebx+3Ch], offset dword_404000
.text:004016AB		       mov     dword ptr [ebx+40h], offset dword_404130
.text:004016B2		       mov     dword ptr [ebx+94h], offset dword_403000
.text:004016BC		       mov     [ebx+7Ch], eax
.text:004016BF		       sub     esp, 4
.text:004016C2		       mov     dword ptr [ebx+98h], offset dword_403000
.text:004016CC		       mov     dword ptr [ebx+9Ch], 400000h
.text:004016D6		       call    sub_401950
.text:004016DB		       lea     esp, [ebp-8]
.text:004016DE		       mov     eax, 1
.text:004016E3		       pop     ebx
.text:004016E4		       pop     esi
.text:004016E5		       pop     ebp
.text:004016E6		       retn    8
.text:004016E6 ; ---------------------------------------------------------------------------
.text:004016E9		       align 10h
.text:004016F0
.text:004016F0 loc_4016F0:			       ; CODE XREF: sub_401510+1Ej
.text:004016F0		       mov     dword ptr [eax+4], 0A8h
.text:004016F7		       mov     edx, ds:_impure_ptr
.text:004016FD		       test    ecx, ecx
.text:004016FF		       mov     dword ptr [eax+8], 3EFh
.text:00401706		       mov     ebx, ecx
.text:00401708		       mov     dword ptr [eax+0Ch], 7
.text:0040170F		       mov     dword ptr [eax+80h], 0
.text:00401719		       mov     dword ptr [eax+84h], 0E6h
.text:00401723		       mov     dword ptr [eax+2Ch], offset dword_401A10
.text:0040172A		       mov     dword ptr [eax+30h], offset dword_401A1C
.text:00401731		       mov     dword ptr [eax+14h], offset dword_404020
.text:00401738		       mov     eax, [eax+0A4h]
.text:0040173E		       mov     [ecx+28h], esi
.text:00401741		       mov     dword ptr [ecx+48h], offset sub_4014A0
.text:00401748		       mov     dword ptr [ecx+4Ch], offset sub_4014B0
.text:0040174F		       mov     [edx], eax
.text:00401751		       mov     eax, [ebp+0]
.text:00401754		       mov     dword ptr [ecx+50h], offset sub_4014C0
.text:0040175B		       mov     dword ptr [ecx+54h], offset sub_4014D0
.text:00401762		       mov     dword ptr [ecx+24h], offset dword_404024
.text:00401769		       mov     [ecx], eax
.text:0040176B		       mov     dword ptr [ecx+18h], offset malloc
.text:00401772		       mov     dword ptr [ecx+1Ch], offset free
.text:00401779		       mov     dword ptr [ecx+20h], offset loc_401960
.text:00401780		       mov     dword ptr [ecx+44h], offset loc_401968
.text:00401787		       jnz     loc_4015C9
.text:0040178D		       jmp     loc_40168A
.text:00401792 ; ---------------------------------------------------------------------------
.text:00401792
.text:00401792 loc_401792:			       ; CODE XREF: sub_401510+135j
.text:00401792		       mov     eax, [edx+1Ch]
.text:00401795		       mov     dword_40203C, eax
.text:0040179A		       jmp     loc_40164B
.text:0040179A ; ---------------------------------------------------------------------------
.text:0040179F		       align 10h
.text:004017A0
.text:004017A0 loc_4017A0:			       ; CODE XREF: sub_401510+128j
.text:004017A0		       mov     eax, [edx+18h]
.text:004017A3		       mov     dword_402038, eax
.text:004017A8		       jmp     loc_40163E
.text:004017A8 ; ---------------------------------------------------------------------------
.text:004017AD		       align 10h
.text:004017B0
.text:004017B0 loc_4017B0:			       ; CODE XREF: sub_401510+11Aj
.text:004017B0		       mov     eax, [edx+14h]
.text:004017B3		       mov     dword_402034, eax
.text:004017B8		       jmp     loc_401630
.text:004017B8 ; ---------------------------------------------------------------------------
.text:004017BD		       align 10h
.text:004017C0
.text:004017C0 loc_4017C0:			       ; CODE XREF: sub_401510+10Cj
.text:004017C0		       mov     eax, [edx+10h]
.text:004017C3		       mov     dword_402030, eax
.text:004017C8		       jmp     loc_401622
.text:004017C8 ; ---------------------------------------------------------------------------
.text:004017CD		       align 10h
.text:004017D0
.text:004017D0 loc_4017D0:			       ; CODE XREF: sub_401510+FFj
.text:004017D0		       mov     eax, [edx+0Ch]
.text:004017D3		       mov     dword_40202C, eax
.text:004017D8		       jmp     loc_401615
.text:004017D8 ; ---------------------------------------------------------------------------
.text:004017DD		       align 10h
.text:004017E0
.text:004017E0 loc_4017E0:			       ; CODE XREF: sub_401510+F2j
.text:004017E0		       mov     eax, [edx+8]
.text:004017E3		       mov     dword_402028, eax
.text:004017E8		       jmp     loc_401608
.text:004017E8 ; ---------------------------------------------------------------------------
.text:004017ED		       align 10h
.text:004017F0
.text:004017F0 loc_4017F0:			       ; CODE XREF: sub_401510+E5j
.text:004017F0		       mov     eax, [edx+4]
.text:004017F3		       mov     dword_402024, eax
.text:004017F8		       jmp     loc_4015FB
.text:004017F8 ; ---------------------------------------------------------------------------
.text:004017FD		       align 10h
.text:00401800
.text:00401800 loc_401800:			       ; CODE XREF: sub_401510+D8j
.text:00401800		       mov     eax, [edx]
.text:00401802		       mov     dword_402020, eax
.text:00401807		       jmp     loc_4015EE
.text:00401807 sub_401510      endp
.text:00401807
.text:00401807 ; ---------------------------------------------------------------------------
.text:0040180C		       align 10h
.text:00401810
.text:00401810 ; =============== S U B R O U T I N E =======================================
.text:00401810
.text:00401810 ; Attributes: bp-based frame
.text:00401810
.text:00401810 sub_401810      proc near	       ; DATA XREF: .text:00401904o
.text:00401810
.text:00401810 var_18	       = dword ptr -18h
.text:00401810 var_14	       = dword ptr -14h
.text:00401810 var_10	       = dword ptr -10h
.text:00401810
.text:00401810		       push    ebp
.text:00401811		       mov     ebp, esp
.text:00401813		       sub     esp, 18h
.text:00401816		       mov     eax, ds:dword_404050
.text:0040181B		       mov     [esp+18h+var_10], eax
.text:0040181F		       mov     eax, ds:dword_404040
.text:00401824		       mov     [esp+18h+var_14], eax
.text:00401828		       mov     eax, ds:dword_404030
.text:0040182D		       mov     [esp+18h+var_18], eax
.text:00401830		       call    sub_4019C0
.text:00401835		       sub     esp, 0Ch
.text:00401838		       leave
.text:00401839		       retn
.text:00401839 sub_401810      endp
.text:00401839
.text:00401839 ; ---------------------------------------------------------------------------
.text:0040183A		       align 10h
.text:00401840
.text:00401840 loc_401840:			       ; CODE XREF: .text:00401934j
.text:00401840		       push    ebp
.text:00401841		       mov     ebp, esp
.text:00401843		       push    ebx
.text:00401844		       sub     esp, 14h
.text:00401847		       mov     eax, [ebp+0Ch]
.text:0040184A		       mov     ecx, [ebp+8]
.text:0040184D		       mov     edx, [ebp+10h]
.text:00401850		       cmp     eax, 1
.text:00401853		       jz      loc_4018E0
.text:00401859		       jb      short loc_401873
.text:0040185B		       cmp     eax, 2
.text:0040185E		       jz      short loc_4018C6
.text:00401860		       cmp     eax, 3
.text:00401863		       mov     ebx, 1
.text:00401868		       jz      short loc_4018B0
.text:0040186A
.text:0040186A loc_40186A:			       ; CODE XREF: .text:0040188Ej
.text:0040186A					       ; .text:004018A7j
.text:0040186A		       mov     eax, ebx
.text:0040186C		       mov     ebx, [ebp-4]
.text:0040186F		       leave
.text:00401870		       retn    0Ch
.text:00401873 ; ---------------------------------------------------------------------------
.text:00401873
.text:00401873 loc_401873:			       ; CODE XREF: .text:00401859j
.text:00401873		       mov     [esp+8],	edx
.text:00401877		       mov     dword ptr [esp+4], 0
.text:0040187F		       mov     [esp], ecx
.text:00401882		       call    sub_4019C0
.text:00401887		       sub     esp, 0Ch
.text:0040188A		       test    eax, eax
.text:0040188C		       mov     ebx, eax
.text:0040188E		       jz      short loc_40186A
.text:00401890		       mov     eax, ds:dword_404060
.text:00401895		       mov     [esp], eax
.text:00401898		       call    cygwin_detach_dll
.text:0040189D		       mov     ds:dword_404060,	0FFFFFFFFh
.text:004018A7		       jmp     short loc_40186A
.text:004018A7 ; ---------------------------------------------------------------------------
.text:004018A9		       align 10h
.text:004018B0
.text:004018B0 loc_4018B0:			       ; CODE XREF: .text:00401868j
.text:004018B0		       mov     [ebp+10h], edx
.text:004018B3		       mov     ebx, [ebp-4]
.text:004018B6		       mov     dword ptr [ebp+0Ch], 3
.text:004018BD		       mov     [ebp+8],	ecx
.text:004018C0		       leave
.text:004018C1		       jmp     sub_4019C0
.text:004018C6 ; ---------------------------------------------------------------------------
.text:004018C6
.text:004018C6 loc_4018C6:			       ; CODE XREF: .text:0040185Ej
.text:004018C6		       mov     [ebp+10h], edx
.text:004018C9		       mov     ebx, [ebp-4]
.text:004018CC		       mov     dword ptr [ebp+0Ch], 2
.text:004018D3		       mov     [ebp+8],	ecx
.text:004018D6		       leave
.text:004018D7		       jmp     sub_4019C0
.text:004018D7 ; ---------------------------------------------------------------------------
.text:004018DC		       align 10h
.text:004018E0
.text:004018E0 loc_4018E0:			       ; CODE XREF: .text:00401853j
.text:004018E0		       xor     eax, eax
.text:004018E2		       test    edx, edx
.text:004018E4		       setz    al
.text:004018E7		       xor     ebx, ebx
.text:004018E9		       mov     ds:dword_404030,	ecx
.text:004018EF		       mov     ds:dword_404040,	1
.text:004018F9		       mov     ds:dword_404050,	edx
.text:004018FF		       mov     ds:dword_404028,	eax
.text:00401904		       mov     dword ptr [esp+4], offset sub_401810
.text:0040190C		       mov     [esp], ecx
.text:0040190F		       call    sub_401970
.text:00401914		       cmp     eax, 0FFFFFFFFh
.text:00401917		       setnz   bl
.text:0040191A		       mov     ds:dword_404060,	eax
.text:0040191F		       mov     eax, ebx
.text:00401921		       mov     ebx, [ebp-4]
.text:00401924		       leave
.text:00401925		       retn    0Ch
.text:00401925 ; ---------------------------------------------------------------------------
.text:00401928		       align 10h
.text:00401930		       push    ebp
.text:00401931		       mov     ebp, esp
.text:00401933		       leave
.text:00401934		       jmp     loc_401840
.text:00401934 ; ---------------------------------------------------------------------------
.text:00401939		       align 10h
.text:00401940 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+" TO EXPAND]
.text:00401946		       align 10h
.text:00401950
.text:00401950 ; =============== S U B R O U T I N E =======================================
.text:00401950
.text:00401950 ; Attributes: bp-based frame
.text:00401950
.text:00401950 sub_401950      proc near	       ; CODE XREF: sub_401510+1C6p
.text:00401950		       push    ebp
.text:00401951		       mov     ebp, esp
.text:00401953		       pop     ebp
.text:00401954		       retn
.text:00401954 sub_401950      endp
.text:00401954
.text:00401954 ; ---------------------------------------------------------------------------
.text:00401955		       align 10h
.text:00401960
.text:00401960 loc_401960:			       ; DATA XREF: sub_401510+A5o
.text:00401960					       ; sub_401510+269o
.text:00401960		       jmp     ds:realloc
.text:00401960 ; ---------------------------------------------------------------------------
.text:00401966		       align 4
.text:00401968
.text:00401968 loc_401968:			       ; DATA XREF: sub_401510+ACo
.text:00401968					       ; sub_401510+270o
.text:00401968		       jmp     ds:calloc
.text:00401968 ; ---------------------------------------------------------------------------
.text:0040196E		       align 10h
.text:00401970
.text:00401970 ; =============== S U B R O U T I N E =======================================
.text:00401970
.text:00401970 ; Attributes: bp-based frame
.text:00401970
.text:00401970 sub_401970      proc near	       ; CODE XREF: .text:0040190Fp
.text:00401970
.text:00401970 var_18	       = dword ptr -18h
.text:00401970 var_14	       = dword ptr -14h
.text:00401970 var_4	       = dword ptr -4
.text:00401970 arg_0	       = dword ptr  8
.text:00401970 arg_4	       = dword ptr  0Ch
.text:00401970
.text:00401970 ; FUNCTION CHUNK	AT .text:004019D0 SIZE 00000006	BYTES
.text:00401970
.text:00401970		       push    ebp
.text:00401971		       mov     ebp, esp
.text:00401973		       push    ebx
.text:00401974		       sub     esp, 14h
.text:00401977		       mov     ebx, [ebp+arg_0]
.text:0040197A		       mov     [esp+18h+var_14], offset	dword_404070
.text:00401982		       mov     eax, [ebp+arg_4]
.text:00401985		       mov     [esp+18h+var_18], eax
.text:00401988		       call    sub_401510
.text:0040198D		       mov     [ebp+arg_0], ebx
.text:00401990		       mov     ebx, [ebp+var_4]
.text:00401993		       mov     [ebp+arg_4], offset dword_404070
.text:0040199A		       sub     esp, 8
.text:0040199D		       leave
.text:0040199E		       jmp     loc_4019D0
.text:0040199E sub_401970      endp
.text:0040199E
.text:0040199E ; ---------------------------------------------------------------------------
.text:004019A3		       align 10h
.text:004019B0 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_detach_dll.	PRESS KEYPAD "+" TO EXPAND]
.text:004019B6		       align 10h
.text:004019C0
.text:004019C0 ; =============== S U B R O U T I N E =======================================
.text:004019C0
.text:004019C0 ; Attributes: bp-based frame
.text:004019C0
.text:004019C0 sub_4019C0      proc near	       ; CODE XREF: sub_401810+20p
.text:004019C0					       ; .text:00401882p ...
.text:004019C0		       push    ebp
.text:004019C1		       mov     eax, 1
.text:004019C6		       mov     ebp, esp
.text:004019C8		       pop     ebp
.text:004019C9		       retn    0Ch
.text:004019C9 sub_4019C0      endp
.text:004019C9
.text:004019C9 ; ---------------------------------------------------------------------------
.text:004019CC		       align 10h
.text:004019D0 ; START OF FUNCTION CHUNK FOR sub_401970
.text:004019D0
.text:004019D0 loc_4019D0:			       ; CODE XREF: sub_401970+2Ej
.text:004019D0		       jmp     ds:dll_dllcrt0
.text:004019D0 ; END OF	FUNCTION CHUNK FOR sub_401970
.text:004019D0 ; ---------------------------------------------------------------------------
.text:004019D6		       align 4
.text:004019D8 ; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA. PRESS KEYPAD "+"	TO EXPAND]
.text:004019DE		       align 10h
.text:004019E0 ; [00000006 BYTES: COLLAPSED FUNCTION GetProcAddress. PRESS KEYPAD "+" TO EXPAND]
.text:004019E6		       align 10h
.text:004019F0		       push    ebp
.text:004019F1		       mov     ebp, esp
.text:004019F3		       pop     ebp
.text:004019F4		       jmp     loc_4010B0
.text:004019F4 ; ---------------------------------------------------------------------------
.text:004019F9		       align 10h
.text:00401A00		       push    ebp
.text:00401A01		       mov     ebp, esp
.text:00401A03		       pop     ebp
.text:00401A04		       jmp     loc_401150
.text:00401A04 ; ---------------------------------------------------------------------------
.text:00401A09		       align 10h
.text:00401A10 dword_401A10    dd 0FFFFFFFFh, 4019F0h, 0 ; DATA	XREF: sub_401510+5Ao
.text:00401A10					       ; sub_401510+213o
.text:00401A1C dword_401A1C    dd 0FFFFFFFFh, 401A00h, 77h dup(0)
.text:00401A1C					       ; DATA XREF: sub_401510+61o
.text:00401A1C					       ; sub_401510+21Ao
.text:00401C00		       dd 100h dup(?)
.text:00401C00 _text	       ends
.text:00401C00
.data:00402000 ; Section 2. (virtual address 00002000)
.data:00402000 ; Virtual size		       : 000000AC (    172.)
.data:00402000 ; Section size in file	       : 00000200 (    512.)
.data:00402000 ; Offset	to raw data for	section: 00001000
.data:00402000 ; Flags C0600040: Data Readable Writable
.data:00402000 ; Alignment     : 32 bytes
.data:00402000 ; ===========================================================================
.data:00402000
.data:00402000 ; Segment type: Pure data
.data:00402000 ; Segment permissions: Read/Write
.data:00402000 ; Segment alignment '32byte' can not be represented in assembly
.data:00402000 _data	       segment para public 'DATA' use32
.data:00402000		       assume cs:_data
.data:00402000		       ;org 402000h
.data:00402000 off_402000      dd offset __register_frame_info
.data:00402000					       ; DATA XREF: .text:loc_401130r
.data:00402000					       ; sub_401510+186o
.data:00402004 off_402004      dd offset __deregister_frame_info
.data:00402004					       ; DATA XREF: .text:loc_401190r
.data:00402008 dword_402008    dd 0		       ; DATA XREF: .text:loc_401140r
.data:0040200C		       align 20h
.data:00402020 dword_402020    dd 0		       ; DATA XREF: sub_401510+D1r
.data:00402020					       ; sub_401510:loc_40164Br ...
.data:00402024 dword_402024    dd 0		       ; DATA XREF: sub_401510:loc_4015EEr
.data:00402024					       ; sub_401510+142r ...
.data:00402028 dword_402028    dd 0		       ; DATA XREF: sub_401510:loc_4015FBr
.data:00402028					       ; sub_401510+14Ar ...
.data:0040202C dword_40202C    dd 0		       ; DATA XREF: sub_401510:loc_401608r
.data:0040202C					       ; sub_401510+152r ...
.data:00402030 dword_402030    dd 0		       ; DATA XREF: sub_401510:loc_401615r
.data:00402030					       ; sub_401510+15Ar ...
.data:00402034 dword_402034    dd 0		       ; DATA XREF: sub_401510:loc_401622r
.data:00402034					       ; sub_401510+162r ...
.data:00402038 dword_402038    dd 0		       ; DATA XREF: sub_401510:loc_401630r
.data:00402038					       ; sub_401510+16Ar ...
.data:0040203C dword_40203C    dd 0		       ; DATA XREF: sub_401510:loc_40163Er
.data:0040203C					       ; sub_401510+172r ...
.data:00402040 aCyggcc_s1_dll  db 'cyggcc_s-1.dll',0   ; DATA XREF: .text:004010B6o
.data:00402040					       ; .text:00401156o
.data:0040204F a__register_fra db '__register_frame_info',0 ; DATA XREF: .text:004010C9o
.data:00402065 aCyggcj9_dll    db 'cyggcj-9.dll',0     ; DATA XREF: .text:004010FAo
.data:00402072 a_jv_registercl db '_Jv_RegisterClasses',0 ; DATA XREF: .text:0040110Do
.data:00402086 a__deregister_f db '__deregister_frame_info',0 ; DATA XREF: .text:00401169o
.data:0040209E		       align 10h
.data:004020A0 aD	       db '%d',0               ; DATA XREF: .text:004011DEo
.data:004020A3 aD_0	       db '%d ',0              ; DATA XREF: .text:004013FEo
.data:004020A7		       align 4
.data:004020A8 dword_4020A8    dd 0		       ; DATA XREF: .text:loc_4010F1r
.data:004020A8					       ; .text:loc_401124o
.data:004020AC dword_4020AC    dd 55h dup(0)	       ; DATA XREF: sub_401510+18Do
.data:00402200		       align 1000h
.data:00402200 _data	       ends
.data:00402200
.eh_frame:00403000 ; Section 3.	(virtual address 00003000)
.eh_frame:00403000 ; Virtual size		   : 00000004 (	     4.)
.eh_frame:00403000 ; Section size in file	   : 00000200 (	   512.)
.eh_frame:00403000 ; Offset to raw data	for section: 00001200
.eh_frame:00403000 ; Flags C0300040: Data Readable Writable
.eh_frame:00403000 ; Alignment	   : 4 bytes
.eh_frame:00403000 ; ===========================================================================
.eh_frame:00403000
.eh_frame:00403000 ; Segment type: Pure	data
.eh_frame:00403000 ; Segment permissions: Read/Write
.eh_frame:00403000 _eh_frame	   segment dword public	'DATA' use32
.eh_frame:00403000		   assume cs:_eh_frame
.eh_frame:00403000		   ;org	403000h
.eh_frame:00403000 dword_403000	   dd 80h dup(0)	   ; DATA XREF:	.text:004010E8o
.eh_frame:00403000					   ; .text:loc_401180o	...
.eh_frame:00403200		   align 1000h
.eh_frame:00403200 _eh_frame	   ends
.eh_frame:00403200
.bss:00404000 ;	Section	4. (virtual address 00004000)
.bss:00404000 ;	Virtual	size		      :	00000130 (    304.)
.bss:00404000 ;	Section	size in	file	      :	00000000 (	0.)
.bss:00404000 ;	Offset to raw data for section:	00000000
.bss:00404000 ;	Flags C0400080:	Bss Readable Writable
.bss:00404000 ;	Alignment     :	8 bytes
.bss:00404000 ;	===========================================================================
.bss:00404000
.bss:00404000 ;	Segment	type: Uninitialized
.bss:00404000 ;	Segment	permissions: Read/Write
.bss:00404000 ;	Segment	alignment 'qword' can not be represented in assembly
.bss:00404000 _bss	      segment para public 'BSS' use32
.bss:00404000		      assume cs:_bss
.bss:00404000		      ;org 404000h
.bss:00404000		      assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00404000 dword_404000    dd 8 dup(?)	      ;	DATA XREF: .text:loc_4010E0o
.bss:00404000					      ;	sub_401510+194o
.bss:00404020 dword_404020    dd ?		      ;	DATA XREF: sub_401510+68o
.bss:00404020					      ;	sub_401510+221o
.bss:00404024 dword_404024    dd ?		      ;	DATA XREF: sub_401510+8Eo
.bss:00404024					      ;	sub_401510+252o
.bss:00404028 dword_404028    dd ?		      ;	DATA XREF: sub_401510+C4r
.bss:00404028					      ;	.text:004018FFw
.bss:0040402C		      align 10h
.bss:00404030 dword_404030    dd ?		      ;	DATA XREF: sub_401810+18r
.bss:00404030					      ;	.text:004018E9w
.bss:00404034		      align 10h
.bss:00404040 dword_404040    dd ?		      ;	DATA XREF: sub_401810+Fr
.bss:00404040					      ;	.text:004018EFw
.bss:00404044		      align 10h
.bss:00404050 dword_404050    dd ?		      ;	DATA XREF: sub_401810+6r
.bss:00404050					      ;	.text:004018F9w
.bss:00404054		      align 10h
.bss:00404060 dword_404060    dd ?		      ;	DATA XREF: .text:00401890r
.bss:00404060					      ;	.text:0040189Dw ...
.bss:00404064		      align 10h
.bss:00404070 dword_404070    dd 30h dup(?)	      ;	DATA XREF: sub_401970+Ao
.bss:00404070					      ;	sub_401970+23o
.bss:00404130 dword_404130    dd 3B4h dup(?)	      ;	DATA XREF: sub_401510+19Bo
.bss:00404130 _bss	      ends
.bss:00404130
.idata:00405000	; Section 5. (virtual address 00005000)
.idata:00405000	; Virtual size			: 00000270 (	624.)
.idata:00405000	; Section size in file		: 00000400 (   1024.)
.idata:00405000	; Offset to raw	data for section: 00001400
.idata:00405000	; Flags	C0300040: Data Readable	Writable
.idata:00405000	; Alignment	: 4 bytes
.idata:00405000	; ===========================================================================
.idata:00405000
.idata:00405000	; Segment type:	Externs
.idata:00405000	; _idata
.idata:00405000
.idata:00405001
.idata:004050A0	;
.idata:004050A0	; Imports from cygwin1.dll
.idata:004050A0	;
.idata:004050A0			extrn __imp___main:dword ; DATA	XREF: __mainr
.idata:004050A4	; __stdcall dll_crt0()
.idata:004050A4			extrn _dll_crt0@0:dword	; CODE XREF: sub_401470+1Cp
.idata:004050A4						; DATA XREF: sub_401470+1Cr
.idata:004050A8			extrn _impure_ptr:dword	; DATA XREF: sub_401510+24r
.idata:004050A8						; sub_401510+1E7r
.idata:004050AC	; void *__cdecl	calloc(size_t NumOfElements, size_t SizeOfElements)
.idata:004050AC			extrn calloc:dword	; DATA XREF: .text:loc_401968r
.idata:004050B0			extrn __imp_cygwin_detach_dll:dword
.idata:004050B0						; DATA XREF: cygwin_detach_dllr
.idata:004050B4			extrn __imp_cygwin_internal:dword
.idata:004050B4						; DATA XREF: cygwin_internalr
.idata:004050B8			extrn dll_dllcrt0:dword	; DATA XREF: sub_401970:loc_4019D0r
.idata:004050BC	; void __cdecl free(void *Memory)
.idata:004050BC			extrn __imp_free:dword	; DATA XREF: freer
.idata:004050C0	; void *__cdecl	malloc(size_t Size)
.idata:004050C0			extrn __imp_malloc:dword ; DATA	XREF: mallocr
.idata:004050C4	; int printf(const char	*Format, ...)
.idata:004050C4			extrn __imp_printf:dword ; DATA	XREF: printfr
.idata:004050C8	; int __cdecl putchar(int Ch)
.idata:004050C8			extrn __imp_putchar:dword ; DATA XREF: putcharr
.idata:004050CC	; void *__cdecl	realloc(void *Memory, size_t NewSize)
.idata:004050CC			extrn realloc:dword	; DATA XREF: .text:loc_401960r
.idata:004050D0	; int sscanf(const char	*Src, const char *Format, ...)
.idata:004050D0			extrn __imp_sscanf:dword ; DATA	XREF: sscanfr
.idata:004050D4
.idata:004050D8	;
.idata:004050D8	; Imports from cyggcc_s-1.dll
.idata:004050D8	;
.idata:004050D8			extrn __imp___deregister_frame_info:dword
.idata:004050D8						; DATA XREF: __deregister_frame_infor
.idata:004050DC			extrn __imp___register_frame_info:dword
.idata:004050DC						; DATA XREF: __register_frame_infor
.idata:004050E0
.idata:004050E4	;
.idata:004050E4	; Imports from KERNEL32.dll
.idata:004050E4	;
.idata:004050E4	; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
.idata:004050E4			extrn __imp_GetModuleHandleA:dword
.idata:004050E4						; DATA XREF: GetModuleHandleAr
.idata:004050E8	; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
.idata:004050E8			extrn __imp_GetProcAddress:dword
.idata:004050E8						; DATA XREF: GetProcAddressr
.idata:004050EC
.idata:004050EC
.idata:004050EC
.idata:004050EC			end start
