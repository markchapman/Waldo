;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2009 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-313D-7374-F1			    |
; |   Aditya Thakur, University	of Wisconsin/Computer Sciences Department   |
; +-------------------------------------------------------------------------+
;
.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00401000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.text:00401000 ; |			License	info: 48-313D-7374-F1			   |
.text:00401000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input MD5   : A09E942859138F781BEDE42815D9287C
.text:00401000
.text:00401000 ; File Name   : C:\aditya\work\waldo\tests\sglib-1.0.4\samples\arraysort.exe
.text:00401000 ; Format	     : Portable	executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size		       : 00000B38 (   2872.)
.text:00401000 ; Section size in file	       : 00000C00 (   3072.)
.text:00401000 ; Offset	to raw data for	section: 00000400
.text:00401000 ; Flags 60500060: Text Data Executable Readable
.text:00401000 ; Alignment     : 16 bytes
.text:00401000
.text:00401000		       .686p
.text:00401000		       .mmx
.text:00401000		       .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text	       segment para public 'CODE' use32
.text:00401000		       assume cs:_text
.text:00401000		       ;org 401000h
.text:00401000		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: bp-based frame
.text:00401000
.text:00401000		       public start
.text:00401000 start	       proc near
.text:00401000
.text:00401000 var_28	       = dword ptr -28h
.text:00401000 var_24	       = dword ptr -24h
.text:00401000 var_20	       = dword ptr -20h
.text:00401000 var_2	       = word ptr -2
.text:00401000
.text:00401000		       push    ebp
.text:00401001		       mov     ebp, esp
.text:00401003		       sub     esp, 28h
.text:00401006		       and     esp, 0FFFFFFF0h
.text:00401009		       fnstcw  [ebp+var_2]
.text:0040100C		       movzx   eax, [ebp+var_2]
.text:00401010		       and     ax, 0F0C0h
.text:00401014		       mov     [ebp+var_2], ax
.text:00401018		       movzx   eax, [ebp+var_2]
.text:0040101C		       or      ax, 33Fh
.text:00401020		       mov     [ebp+var_2], ax
.text:00401024		       fldcw   [ebp+var_2]
.text:00401027		       mov     [esp+28h+var_28], offset	loc_4011A0
.text:0040102E		       call    sub_401580
.text:00401033		       mov     [esp+28h+var_20], 0
.text:0040103B		       mov     [esp+28h+var_24], 0
.text:00401043		       mov     [esp+28h+var_28], 0
.text:0040104A		       call    sub_4015B0
.text:0040104F		       mov     [esp+28h+var_20], 0
.text:00401057		       mov     [esp+28h+var_24], 0
.text:0040105F		       mov     [esp+28h+var_28], 0
.text:00401066		       call    sub_4015C0
.text:0040106B		       mov     [esp+28h+var_20], 0
.text:00401073		       mov     [esp+28h+var_24], 0
.text:0040107B		       mov     [esp+28h+var_28], 0
.text:00401082		       call    sub_4015D0
.text:00401087		       mov     [esp+28h+var_20], 0
.text:0040108F		       mov     [esp+28h+var_24], 0
.text:00401097		       mov     [esp+28h+var_28], 0
.text:0040109E		       call    sub_4015E0
.text:004010A3		       leave
.text:004010A4		       retn
.text:004010A4 start	       endp
.text:004010A4
.text:004010A4 ; ---------------------------------------------------------------------------
.text:004010A5		       align 10h
.text:004010B0
.text:004010B0 loc_4010B0:			       ; CODE XREF: .text:00401B04j
.text:004010B0		       push    ebp
.text:004010B1		       mov     ebp, esp
.text:004010B3		       sub     esp, 8
.text:004010B6		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:004010BD		       call    GetModuleHandleA
.text:004010C2		       sub     esp, 4
.text:004010C5		       test    eax, eax
.text:004010C7		       jz      short loc_401130
.text:004010C9		       mov     dword ptr [esp+4], offset a__register_fra ; "__register_frame_info"
.text:004010D1		       mov     [esp], eax
.text:004010D4		       call    GetProcAddress
.text:004010D9		       sub     esp, 8
.text:004010DC		       test    eax, eax
.text:004010DE		       jz      short loc_401130
.text:004010E0
.text:004010E0 loc_4010E0:			       ; CODE XREF: .text:00401139j
.text:004010E0		       mov     dword ptr [esp+4], offset dword_404000
.text:004010E8		       mov     dword ptr [esp],	offset dword_403000
.text:004010EF		       call    eax
.text:004010F1
.text:004010F1 loc_4010F1:			       ; CODE XREF: .text:00401137j
.text:004010F1		       mov     eax, dword_4020A8
.text:004010F6		       test    eax, eax
.text:004010F8		       jz      short locret_40112D
.text:004010FA		       mov     dword ptr [esp],	offset aCyggcj9_dll ; "cyggcj-9.dll"
.text:00401101		       call    GetModuleHandleA
.text:00401106		       sub     esp, 4
.text:00401109		       test    eax, eax
.text:0040110B		       jz      short loc_401140
.text:0040110D		       mov     dword ptr [esp+4], offset a_jv_registercl ; "_Jv_RegisterClasses"
.text:00401115		       mov     [esp], eax
.text:00401118		       call    GetProcAddress
.text:0040111D		       sub     esp, 8
.text:00401120		       test    eax, eax
.text:00401122		       jz      short loc_401140
.text:00401124
.text:00401124 loc_401124:			       ; CODE XREF: .text:00401147j
.text:00401124		       mov     dword ptr [esp],	offset dword_4020A8
.text:0040112B		       call    eax
.text:0040112D
.text:0040112D locret_40112D:			       ; CODE XREF: .text:004010F8j
.text:0040112D		       leave
.text:0040112E		       retn
.text:0040112E ; ---------------------------------------------------------------------------
.text:0040112F		       align 10h
.text:00401130
.text:00401130 loc_401130:			       ; CODE XREF: .text:004010C7j
.text:00401130					       ; .text:004010DEj
.text:00401130		       mov     eax, off_402000
.text:00401135		       test    eax, eax
.text:00401137		       jz      short loc_4010F1
.text:00401139		       jmp     short loc_4010E0
.text:00401139 ; ---------------------------------------------------------------------------
.text:0040113B		       align 10h
.text:00401140
.text:00401140 loc_401140:			       ; CODE XREF: .text:0040110Bj
.text:00401140					       ; .text:00401122j
.text:00401140		       mov     eax, dword_402008
.text:00401145		       test    eax, eax
.text:00401147		       jnz     short loc_401124
.text:00401149		       leave
.text:0040114A		       retn
.text:0040114A ; ---------------------------------------------------------------------------
.text:0040114B		       align 10h
.text:00401150
.text:00401150 loc_401150:			       ; CODE XREF: .text:00401B14j
.text:00401150		       push    ebp
.text:00401151		       mov     ebp, esp
.text:00401153		       sub     esp, 8
.text:00401156		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:0040115D		       call    GetModuleHandleA
.text:00401162		       sub     esp, 4
.text:00401165		       test    eax, eax
.text:00401167		       jz      short loc_401190
.text:00401169		       mov     dword ptr [esp+4], offset a__deregister_f ; "__deregister_frame_info"
.text:00401171		       mov     [esp], eax
.text:00401174		       call    GetProcAddress
.text:00401179		       sub     esp, 8
.text:0040117C		       test    eax, eax
.text:0040117E		       jz      short loc_401190
.text:00401180
.text:00401180 loc_401180:			       ; CODE XREF: .text:00401197j
.text:00401180		       mov     dword ptr [esp],	offset dword_403000
.text:00401187		       call    eax
.text:00401189		       leave
.text:0040118A		       retn
.text:0040118A ; ---------------------------------------------------------------------------
.text:0040118B		       align 10h
.text:00401190
.text:00401190 loc_401190:			       ; CODE XREF: .text:00401167j
.text:00401190					       ; .text:0040117Ej
.text:00401190		       mov     eax, off_402004
.text:00401195		       test    eax, eax
.text:00401197		       jnz     short loc_401180
.text:00401199		       leave
.text:0040119A		       retn
.text:0040119A ; ---------------------------------------------------------------------------
.text:0040119B		       align 10h
.text:004011A0
.text:004011A0 loc_4011A0:			       ; DATA XREF: start+27o
.text:004011A0		       lea     ecx, [esp+4]
.text:004011A4		       and     esp, 0FFFFFFF0h
.text:004011A7		       push    dword ptr [ecx-4]
.text:004011AA		       push    ebp
.text:004011AB		       mov     ebp, esp
.text:004011AD		       push    ecx
.text:004011AE		       mov     eax, 11F4h
.text:004011B3		       call    sub_40154C
.text:004011B8		       mov     [ebp-11E8h], ecx
.text:004011BE		       call    __main
.text:004011C3		       mov     edx, [ebp-11E8h]
.text:004011C9		       mov     eax, [edx]
.text:004011CB		       sub     eax, 1
.text:004011CE		       mov     [ebp-34h], eax
.text:004011D1		       mov     dword ptr [ebp-38h], 0
.text:004011D8		       jmp     short loc_401214
.text:004011DA ; ---------------------------------------------------------------------------
.text:004011DA
.text:004011DA loc_4011DA:			       ; CODE XREF: .text:0040121Aj
.text:004011DA		       mov     eax, [ebp-38h]
.text:004011DD		       shl     eax, 2
.text:004011E0		       lea     edx, [ebp-0FD8h]
.text:004011E6		       add     edx, eax
.text:004011E8		       mov     eax, [ebp-38h]
.text:004011EB		       add     eax, 1
.text:004011EE		       shl     eax, 2
.text:004011F1		       mov     ecx, [ebp-11E8h]
.text:004011F7		       add     eax, [ecx+4]
.text:004011FA		       mov     eax, [eax]
.text:004011FC		       mov     [esp+8],	edx
.text:00401200		       mov     dword ptr [esp+4], offset aD ; "%d"
.text:00401208		       mov     [esp], eax
.text:0040120B		       call    sscanf
.text:00401210		       add     dword ptr [ebp-38h], 1
.text:00401214
.text:00401214 loc_401214:			       ; CODE XREF: .text:004011D8j
.text:00401214		       mov     eax, [ebp-38h]
.text:00401217		       cmp     eax, [ebp-34h]
.text:0040121A		       jl      short loc_4011DA
.text:0040121C		       mov     dword ptr [ebp-10D8h], 0
.text:00401226		       mov     eax, [ebp-34h]
.text:00401229		       mov     [ebp-11D8h], eax
.text:0040122F		       mov     dword ptr [ebp-24h], 1
.text:00401236		       jmp     loc_4014E4
.text:0040123B ; ---------------------------------------------------------------------------
.text:0040123B
.text:0040123B loc_40123B:			       ; CODE XREF: .text:004014E8j
.text:0040123B		       sub     dword ptr [ebp-24h], 1
.text:0040123F		       mov     eax, [ebp-24h]
.text:00401242		       mov     eax, [ebp+eax*4-10D8h]
.text:00401249		       mov     [ebp-20h], eax
.text:0040124C		       mov     eax, [ebp-24h]
.text:0040124F		       mov     eax, [ebp+eax*4-11D8h]
.text:00401256		       mov     [ebp-1Ch], eax
.text:00401259		       jmp     loc_40146F
.text:0040125E ; ---------------------------------------------------------------------------
.text:0040125E
.text:0040125E loc_40125E:			       ; CODE XREF: .text:0040147Ej
.text:0040125E		       mov     eax, [ebp-20h]
.text:00401261		       mov     [ebp-28h], eax
.text:00401264		       mov     eax, [ebp-20h]
.text:00401267		       add     eax, 1
.text:0040126A		       mov     [ebp-30h], eax
.text:0040126D		       mov     eax, [ebp-1Ch]
.text:00401270		       sub     eax, 1
.text:00401273		       mov     [ebp-2Ch], eax
.text:00401276		       jmp     loc_4013B4
.text:0040127B ; ---------------------------------------------------------------------------
.text:0040127B
.text:0040127B loc_40127B:			       ; CODE XREF: .text:0040129Dj
.text:0040127B		       add     dword ptr [ebp-30h], 1
.text:0040127F
.text:0040127F loc_40127F:			       ; CODE XREF: .text:004013BAj
.text:0040127F		       mov     eax, [ebp-30h]
.text:00401282		       cmp     eax, [ebp-2Ch]
.text:00401285		       jg      short loc_40129F
.text:00401287		       mov     eax, [ebp-30h]
.text:0040128A		       mov     edx, [ebp+eax*4-0FD8h]
.text:00401291		       mov     eax, [ebp-28h]
.text:00401294		       mov     eax, [ebp+eax*4-0FD8h]
.text:0040129B		       cmp     edx, eax
.text:0040129D		       jle     short loc_40127B
.text:0040129F
.text:0040129F loc_40129F:			       ; CODE XREF: .text:00401285j
.text:0040129F		       mov     eax, [ebp-30h]
.text:004012A2		       cmp     eax, [ebp-2Ch]
.text:004012A5		       jle     short loc_4012E4
.text:004012A7		       mov     eax, [ebp-2Ch]
.text:004012AA		       mov     eax, [ebp+eax*4-0FD8h]
.text:004012B1		       mov     [ebp-14h], eax
.text:004012B4		       mov     edx, [ebp-2Ch]
.text:004012B7		       mov     eax, [ebp-28h]
.text:004012BA		       mov     eax, [ebp+eax*4-0FD8h]
.text:004012C1		       mov     [ebp+edx*4-0FD8h], eax
.text:004012C8		       mov     edx, [ebp-28h]
.text:004012CB		       mov     eax, [ebp-14h]
.text:004012CE		       mov     [ebp+edx*4-0FD8h], eax
.text:004012D5		       mov     eax, [ebp-2Ch]
.text:004012D8		       mov     [ebp-30h], eax
.text:004012DB		       jmp     loc_4013B4
.text:004012E0 ; ---------------------------------------------------------------------------
.text:004012E0
.text:004012E0 loc_4012E0:			       ; CODE XREF: .text:00401302j
.text:004012E0					       ; .text:0040131Aj
.text:004012E0		       sub     dword ptr [ebp-2Ch], 1
.text:004012E4
.text:004012E4 loc_4012E4:			       ; CODE XREF: .text:004012A5j
.text:004012E4		       mov     eax, [ebp-30h]
.text:004012E7		       cmp     eax, [ebp-2Ch]
.text:004012EA		       jg      short loc_40131C
.text:004012EC		       mov     eax, [ebp-2Ch]
.text:004012EF		       mov     edx, [ebp+eax*4-0FD8h]
.text:004012F6		       mov     eax, [ebp-28h]
.text:004012F9		       mov     eax, [ebp+eax*4-0FD8h]
.text:00401300		       cmp     edx, eax
.text:00401302		       jg      short loc_4012E0
.text:00401304		       mov     eax, [ebp-2Ch]
.text:00401307		       mov     edx, [ebp+eax*4-0FD8h]
.text:0040130E		       mov     eax, [ebp-28h]
.text:00401311		       mov     eax, [ebp+eax*4-0FD8h]
.text:00401318		       cmp     edx, eax
.text:0040131A		       jge     short loc_4012E0
.text:0040131C
.text:0040131C loc_40131C:			       ; CODE XREF: .text:004012EAj
.text:0040131C		       mov     eax, [ebp-30h]
.text:0040131F		       cmp     eax, [ebp-2Ch]
.text:00401322		       jle     short loc_40135A
.text:00401324		       mov     eax, [ebp-2Ch]
.text:00401327		       mov     eax, [ebp+eax*4-0FD8h]
.text:0040132E		       mov     [ebp-10h], eax
.text:00401331		       mov     edx, [ebp-2Ch]
.text:00401334		       mov     eax, [ebp-28h]
.text:00401337		       mov     eax, [ebp+eax*4-0FD8h]
.text:0040133E		       mov     [ebp+edx*4-0FD8h], eax
.text:00401345		       mov     edx, [ebp-28h]
.text:00401348		       mov     eax, [ebp-10h]
.text:0040134B		       mov     [ebp+edx*4-0FD8h], eax
.text:00401352		       mov     eax, [ebp-2Ch]
.text:00401355		       mov     [ebp-30h], eax
.text:00401358		       jmp     short loc_4013B4
.text:0040135A ; ---------------------------------------------------------------------------
.text:0040135A
.text:0040135A loc_40135A:			       ; CODE XREF: .text:00401322j
.text:0040135A		       mov     eax, [ebp-30h]
.text:0040135D		       cmp     eax, [ebp-2Ch]
.text:00401360		       jge     short loc_4013B4
.text:00401362		       mov     eax, [ebp-30h]
.text:00401365		       mov     eax, [ebp+eax*4-0FD8h]
.text:0040136C		       mov     [ebp-0Ch], eax
.text:0040136F		       mov     edx, [ebp-30h]
.text:00401372		       mov     eax, [ebp-2Ch]
.text:00401375		       mov     eax, [ebp+eax*4-0FD8h]
.text:0040137C		       mov     [ebp+edx*4-0FD8h], eax
.text:00401383		       mov     edx, [ebp-2Ch]
.text:00401386		       mov     eax, [ebp-0Ch]
.text:00401389		       mov     [ebp+edx*4-0FD8h], eax
.text:00401390		       mov     eax, [ebp-30h]
.text:00401393		       add     eax, 2
.text:00401396		       cmp     eax, [ebp-2Ch]
.text:00401399		       jge     short loc_4013A5
.text:0040139B		       add     dword ptr [ebp-30h], 1
.text:0040139F		       sub     dword ptr [ebp-2Ch], 1
.text:004013A3		       jmp     short loc_4013B4
.text:004013A5 ; ---------------------------------------------------------------------------
.text:004013A5
.text:004013A5 loc_4013A5:			       ; CODE XREF: .text:00401399j
.text:004013A5		       mov     eax, [ebp-30h]
.text:004013A8		       add     eax, 1
.text:004013AB		       cmp     eax, [ebp-2Ch]
.text:004013AE		       jge     short loc_4013B4
.text:004013B0		       add     dword ptr [ebp-30h], 1
.text:004013B4
.text:004013B4 loc_4013B4:			       ; CODE XREF: .text:00401276j
.text:004013B4					       ; .text:004012DBj ...
.text:004013B4		       mov     eax, [ebp-30h]
.text:004013B7		       cmp     eax, [ebp-2Ch]
.text:004013BA		       jl      loc_40127F
.text:004013C0		       mov     eax, [ebp-20h]
.text:004013C3		       mov     edx, [ebp-30h]
.text:004013C6		       mov     ecx, edx
.text:004013C8		       sub     ecx, eax
.text:004013CA		       mov     eax, ecx
.text:004013CC		       cmp     eax, 1
.text:004013CF		       jle     short loc_40144D
.text:004013D1		       mov     eax, [ebp-2Ch]
.text:004013D4		       mov     edx, [ebp-1Ch]
.text:004013D7		       mov     ecx, edx
.text:004013D9		       sub     ecx, eax
.text:004013DB		       mov     eax, ecx
.text:004013DD		       cmp     eax, 1
.text:004013E0		       jle     short loc_40144D
.text:004013E2		       mov     edx, [ebp-20h]
.text:004013E5		       mov     eax, [ebp-30h]
.text:004013E8		       mov     ecx, eax
.text:004013EA		       sub     ecx, edx
.text:004013EC		       mov     edx, [ebp-2Ch]
.text:004013EF		       mov     eax, [ebp-1Ch]
.text:004013F2		       sub     eax, edx
.text:004013F4		       sub     eax, 1
.text:004013F7		       cmp     ecx, eax
.text:004013F9		       jge     short loc_401424
.text:004013FB		       mov     edx, [ebp-24h]
.text:004013FE		       mov     eax, [ebp-2Ch]
.text:00401401		       add     eax, 1
.text:00401404		       mov     [ebp+edx*4-10D8h], eax
.text:0040140B		       mov     edx, [ebp-24h]
.text:0040140E		       mov     eax, [ebp-1Ch]
.text:00401411		       mov     [ebp+edx*4-11D8h], eax
.text:00401418		       add     dword ptr [ebp-24h], 1
.text:0040141C		       mov     eax, [ebp-30h]
.text:0040141F		       mov     [ebp-1Ch], eax
.text:00401422		       jmp     short loc_40146F
.text:00401424 ; ---------------------------------------------------------------------------
.text:00401424
.text:00401424 loc_401424:			       ; CODE XREF: .text:004013F9j
.text:00401424		       mov     edx, [ebp-24h]
.text:00401427		       mov     eax, [ebp-20h]
.text:0040142A		       mov     [ebp+edx*4-10D8h], eax
.text:00401431		       mov     edx, [ebp-24h]
.text:00401434		       mov     eax, [ebp-30h]
.text:00401437		       mov     [ebp+edx*4-11D8h], eax
.text:0040143E		       add     dword ptr [ebp-24h], 1
.text:00401442		       mov     eax, [ebp-2Ch]
.text:00401445		       add     eax, 1
.text:00401448		       mov     [ebp-20h], eax
.text:0040144B		       jmp     short loc_40146F
.text:0040144D ; ---------------------------------------------------------------------------
.text:0040144D
.text:0040144D loc_40144D:			       ; CODE XREF: .text:004013CFj
.text:0040144D					       ; .text:004013E0j
.text:0040144D		       mov     eax, [ebp-20h]
.text:00401450		       mov     edx, [ebp-30h]
.text:00401453		       mov     ecx, edx
.text:00401455		       sub     ecx, eax
.text:00401457		       mov     eax, ecx
.text:00401459		       cmp     eax, 1
.text:0040145C		       jle     short loc_401466
.text:0040145E		       mov     eax, [ebp-30h]
.text:00401461		       mov     [ebp-1Ch], eax
.text:00401464		       jmp     short loc_40146F
.text:00401466 ; ---------------------------------------------------------------------------
.text:00401466
.text:00401466 loc_401466:			       ; CODE XREF: .text:0040145Cj
.text:00401466		       mov     eax, [ebp-2Ch]
.text:00401469		       add     eax, 1
.text:0040146C		       mov     [ebp-20h], eax
.text:0040146F
.text:0040146F loc_40146F:			       ; CODE XREF: .text:00401259j
.text:0040146F					       ; .text:00401422j ...
.text:0040146F		       mov     eax, [ebp-20h]
.text:00401472		       mov     edx, [ebp-1Ch]
.text:00401475		       mov     ecx, edx
.text:00401477		       sub     ecx, eax
.text:00401479		       mov     eax, ecx
.text:0040147B		       cmp     eax, 2
.text:0040147E		       jg      loc_40125E
.text:00401484		       mov     eax, [ebp-20h]
.text:00401487		       mov     edx, [ebp-1Ch]
.text:0040148A		       mov     ecx, edx
.text:0040148C		       sub     ecx, eax
.text:0040148E		       mov     eax, ecx
.text:00401490		       cmp     eax, 2
.text:00401493		       jnz     short loc_4014E4
.text:00401495		       mov     eax, [ebp-20h]
.text:00401498		       mov     edx, [ebp+eax*4-0FD8h]
.text:0040149F		       mov     eax, [ebp-1Ch]
.text:004014A2		       sub     eax, 1
.text:004014A5		       mov     eax, [ebp+eax*4-0FD8h]
.text:004014AC		       cmp     edx, eax
.text:004014AE		       jle     short loc_4014E4
.text:004014B0		       mov     eax, [ebp-20h]
.text:004014B3		       mov     eax, [ebp+eax*4-0FD8h]
.text:004014BA		       mov     [ebp-8],	eax
.text:004014BD		       mov     edx, [ebp-20h]
.text:004014C0		       mov     eax, [ebp-1Ch]
.text:004014C3		       sub     eax, 1
.text:004014C6		       mov     eax, [ebp+eax*4-0FD8h]
.text:004014CD		       mov     [ebp+edx*4-0FD8h], eax
.text:004014D4		       mov     eax, [ebp-1Ch]
.text:004014D7		       lea     edx, [eax-1]
.text:004014DA		       mov     eax, [ebp-8]
.text:004014DD		       mov     [ebp+edx*4-0FD8h], eax
.text:004014E4
.text:004014E4 loc_4014E4:			       ; CODE XREF: .text:00401236j
.text:004014E4					       ; .text:00401493j ...
.text:004014E4		       cmp     dword ptr [ebp-24h], 0
.text:004014E8		       jg      loc_40123B
.text:004014EE		       mov     dword ptr [ebp-38h], 0
.text:004014F5		       jmp     short loc_401515
.text:004014F7 ; ---------------------------------------------------------------------------
.text:004014F7
.text:004014F7 loc_4014F7:			       ; CODE XREF: .text:0040151Bj
.text:004014F7		       mov     eax, [ebp-38h]
.text:004014FA		       mov     eax, [ebp+eax*4-0FD8h]
.text:00401501		       mov     [esp+4],	eax
.text:00401505		       mov     dword ptr [esp],	offset aD_0 ; "%d "
.text:0040150C		       call    printf
.text:00401511		       add     dword ptr [ebp-38h], 1
.text:00401515
.text:00401515 loc_401515:			       ; CODE XREF: .text:004014F5j
.text:00401515		       mov     eax, [ebp-38h]
.text:00401518		       cmp     eax, [ebp-34h]
.text:0040151B		       jl      short loc_4014F7
.text:0040151D		       mov     dword ptr [esp],	0Ah
.text:00401524		       call    putchar
.text:00401529		       mov     eax, 0
.text:0040152E		       add     esp, 11F4h
.text:00401534		       pop     ecx
.text:00401535		       pop     ebp
.text:00401536		       lea     esp, [ecx-4]
.text:00401539		       retn
.text:00401539 ; ---------------------------------------------------------------------------
.text:0040153A		       align 4
.text:0040153C ; [00000006 BYTES: COLLAPSED FUNCTION __deregister_frame_info. PRESS KEYPAD "+" TO EXPAND]
.text:00401542		       align 4
.text:00401544 ; [00000006 BYTES: COLLAPSED FUNCTION __register_frame_info. PRESS KEYPAD "+" TO	EXPAND]
.text:0040154A		       align 4
.text:0040154C
.text:0040154C ; =============== S U B R O U T I N E =======================================
.text:0040154C
.text:0040154C
.text:0040154C sub_40154C      proc near	       ; CODE XREF: .text:004011B3p
.text:0040154C
.text:0040154C arg_0	       = byte ptr  4
.text:0040154C
.text:0040154C		       push    ecx
.text:0040154D		       lea     ecx, [esp+4+arg_0]
.text:00401551		       cmp     eax, 1000h
.text:00401556		       jb      short loc_40156D
.text:00401558
.text:00401558 loc_401558:			       ; CODE XREF: sub_40154C+1Fj
.text:00401558		       sub     ecx, 1000h
.text:0040155E		       or      dword ptr [ecx],	0
.text:00401561		       sub     eax, 1000h
.text:00401566		       cmp     eax, 1000h
.text:0040156B		       ja      short loc_401558
.text:0040156D
.text:0040156D loc_40156D:			       ; CODE XREF: sub_40154C+Aj
.text:0040156D		       sub     ecx, eax
.text:0040156F		       or      dword ptr [ecx],	0
.text:00401572		       mov     eax, esp
.text:00401574		       mov     esp, ecx
.text:00401576		       mov     ecx, [eax]
.text:00401578		       mov     eax, [eax+4]
.text:0040157B		       push    eax
.text:0040157C		       retn
.text:0040157C sub_40154C      endp
.text:0040157C
.text:0040157C ; ---------------------------------------------------------------------------
.text:0040157D		       align 10h
.text:00401580
.text:00401580 ; =============== S U B R O U T I N E =======================================
.text:00401580
.text:00401580 ; Attributes: bp-based frame
.text:00401580
.text:00401580 sub_401580      proc near	       ; CODE XREF: start+2Ep
.text:00401580
.text:00401580 var_8	       = dword ptr -8
.text:00401580 var_4	       = dword ptr -4
.text:00401580 arg_0	       = dword ptr  8
.text:00401580
.text:00401580		       push    ebp
.text:00401581		       mov     ebp, esp
.text:00401583		       sub     esp, 8
.text:00401586		       mov     eax, [ebp+arg_0]
.text:00401589		       mov     [esp+8+var_4], 0
.text:00401591		       mov     [esp+8+var_8], eax
.text:00401594		       call    sub_401610
.text:00401599		       sub     esp, 8
.text:0040159C		       call    ds:_dll_crt0@0  ; dll_crt0()
.text:004015A2		       nop
.text:004015A3		       nop
.text:004015A4		       nop
.text:004015A5		       nop
.text:004015A6		       nop
.text:004015A7		       nop
.text:004015A8		       nop
.text:004015A9		       nop
.text:004015AA		       nop
.text:004015AB		       nop
.text:004015AC		       nop
.text:004015AD		       nop
.text:004015AE		       nop
.text:004015AF		       nop
.text:004015AF sub_401580      endp ; sp-analysis failed
.text:004015AF
.text:004015B0
.text:004015B0 ; =============== S U B R O U T I N E =======================================
.text:004015B0
.text:004015B0 ; Attributes: bp-based frame
.text:004015B0
.text:004015B0 sub_4015B0      proc near	       ; CODE XREF: start+4Ap
.text:004015B0					       ; DATA XREF: sub_401610+72o ...
.text:004015B0		       push    ebp
.text:004015B1		       mov     ebp, esp
.text:004015B3		       pop     ebp
.text:004015B4		       retn
.text:004015B4 sub_4015B0      endp
.text:004015B4
.text:004015B4 ; ---------------------------------------------------------------------------
.text:004015B5		       align 10h
.text:004015C0
.text:004015C0 ; =============== S U B R O U T I N E =======================================
.text:004015C0
.text:004015C0 ; Attributes: bp-based frame
.text:004015C0
.text:004015C0 sub_4015C0      proc near	       ; CODE XREF: start+66p
.text:004015C0					       ; DATA XREF: sub_401610+79o ...
.text:004015C0		       push    ebp
.text:004015C1		       mov     ebp, esp
.text:004015C3		       pop     ebp
.text:004015C4		       retn
.text:004015C4 sub_4015C0      endp
.text:004015C4
.text:004015C4 ; ---------------------------------------------------------------------------
.text:004015C5		       align 10h
.text:004015D0
.text:004015D0 ; =============== S U B R O U T I N E =======================================
.text:004015D0
.text:004015D0 ; Attributes: bp-based frame
.text:004015D0
.text:004015D0 sub_4015D0      proc near	       ; CODE XREF: start+82p
.text:004015D0					       ; DATA XREF: sub_401610+80o ...
.text:004015D0		       push    ebp
.text:004015D1		       mov     ebp, esp
.text:004015D3		       pop     ebp
.text:004015D4		       retn
.text:004015D4 sub_4015D0      endp
.text:004015D4
.text:004015D4 ; ---------------------------------------------------------------------------
.text:004015D5		       align 10h
.text:004015E0
.text:004015E0 ; =============== S U B R O U T I N E =======================================
.text:004015E0
.text:004015E0 ; Attributes: bp-based frame
.text:004015E0
.text:004015E0 sub_4015E0      proc near	       ; CODE XREF: start+9Ep
.text:004015E0					       ; DATA XREF: sub_401610+87o ...
.text:004015E0		       push    ebp
.text:004015E1		       mov     ebp, esp
.text:004015E3		       pop     ebp
.text:004015E4		       retn
.text:004015E4 sub_4015E0      endp
.text:004015E4
.text:004015E4 ; ---------------------------------------------------------------------------
.text:004015E5		       align 10h
.text:004015F0 ; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
.text:004015F6		       align 4
.text:004015F8 ; [00000006 BYTES: COLLAPSED FUNCTION sscanf. PRESS KEYPAD "+" TO EXPAND]
.text:004015FE		       align 10h
.text:00401600 ; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
.text:00401606		       align 4
.text:00401608 ; [00000006 BYTES: COLLAPSED FUNCTION putchar. PRESS KEYPAD "+" TO EXPAND]
.text:0040160E		       align 10h
.text:00401610
.text:00401610 ; =============== S U B R O U T I N E =======================================
.text:00401610
.text:00401610 ; Attributes: bp-based frame
.text:00401610
.text:00401610 sub_401610      proc near	       ; CODE XREF: sub_401580+14p
.text:00401610					       ; sub_401A80+18p
.text:00401610
.text:00401610 var_18	       = dword ptr -18h
.text:00401610 arg_0	       = dword ptr  8
.text:00401610 arg_4	       = dword ptr  0Ch
.text:00401610
.text:00401610		       push    ebp
.text:00401611		       mov     ebp, esp
.text:00401613		       push    esi
.text:00401614		       push    ebx
.text:00401615		       sub     esp, 10h
.text:00401618		       mov     ebx, [ebp+arg_4]
.text:0040161B		       mov     esi, [ebp+arg_0]
.text:0040161E		       mov     [esp+18h+var_18], 8
.text:00401625		       call    cygwin_internal
.text:0040162A		       test    ebx, ebx
.text:0040162C		       mov     ecx, eax
.text:0040162E		       jz      loc_4017F0
.text:00401634		       mov     eax, ds:_impure_ptr
.text:00401639		       test    ecx, ecx
.text:0040163B		       mov     dword ptr [ebx+4], 0A8h
.text:00401642		       mov     dword ptr [ebx+8], 3EFh
.text:00401649		       mov     dword ptr [ebx+0Ch], 7
.text:00401650		       mov     [ebx+10h], eax
.text:00401653		       mov     eax, [ebp+0]
.text:00401656		       mov     dword ptr [ebx+80h], 0
.text:00401660		       mov     dword ptr [ebx+84h], 0E6h
.text:0040166A		       mov     dword ptr [ebx+2Ch], offset dword_401B20
.text:00401671		       mov     dword ptr [ebx+30h], offset dword_401B2C
.text:00401678		       mov     dword ptr [ebx+14h], offset dword_404020
.text:0040167F		       mov     [ebx+28h], esi
.text:00401682		       mov     dword ptr [ebx+48h], offset sub_4015B0
.text:00401689		       mov     dword ptr [ebx+4Ch], offset sub_4015C0
.text:00401690		       mov     dword ptr [ebx+50h], offset sub_4015D0
.text:00401697		       mov     dword ptr [ebx+54h], offset sub_4015E0
.text:0040169E		       mov     dword ptr [ebx+24h], offset dword_404024
.text:004016A5		       mov     [ebx], eax
.text:004016A7		       mov     dword ptr [ebx+18h], offset loc_401A60
.text:004016AE		       mov     dword ptr [ebx+1Ch], offset loc_401A68
.text:004016B5		       mov     dword ptr [ebx+20h], offset loc_401A70
.text:004016BC		       mov     dword ptr [ebx+44h], offset loc_401A78
.text:004016C3		       jz      loc_40178A
.text:004016C9
.text:004016C9 loc_4016C9:			       ; CODE XREF: sub_401610+277j
.text:004016C9		       mov     edx, [ecx+78h]
.text:004016CC		       test    edx, edx
.text:004016CE		       jz      loc_40178A
.text:004016D4		       mov     eax, ds:dword_404028
.text:004016D9		       test    eax, eax
.text:004016DB		       jnz     loc_40178A
.text:004016E1		       mov     eax, dword_402020
.text:004016E6		       test    eax, eax
.text:004016E8		       jz      loc_401900
.text:004016EE
.text:004016EE loc_4016EE:			       ; CODE XREF: sub_401610+2F7j
.text:004016EE		       mov     eax, dword_402024
.text:004016F3		       test    eax, eax
.text:004016F5		       jz      loc_4018F0
.text:004016FB
.text:004016FB loc_4016FB:			       ; CODE XREF: sub_401610+2E8j
.text:004016FB		       mov     eax, dword_402028
.text:00401700		       test    eax, eax
.text:00401702		       jz      loc_4018E0
.text:00401708
.text:00401708 loc_401708:			       ; CODE XREF: sub_401610+2D8j
.text:00401708		       mov     eax, dword_40202C
.text:0040170D		       test    eax, eax
.text:0040170F		       jz      loc_4018D0
.text:00401715
.text:00401715 loc_401715:			       ; CODE XREF: sub_401610+2C8j
.text:00401715		       mov     eax, dword_402030
.text:0040171A		       test    eax, eax
.text:0040171C		       jz      loc_4018C0
.text:00401722
.text:00401722 loc_401722:			       ; CODE XREF: sub_401610+2B8j
.text:00401722		       mov     esi, dword_402034
.text:00401728		       test    esi, esi
.text:0040172A		       jz      loc_4018B0
.text:00401730
.text:00401730 loc_401730:			       ; CODE XREF: sub_401610+2A8j
.text:00401730		       mov     ecx, dword_402038
.text:00401736		       test    ecx, ecx
.text:00401738		       jz      loc_4018A0
.text:0040173E
.text:0040173E loc_40173E:			       ; CODE XREF: sub_401610+298j
.text:0040173E		       mov     eax, dword_40203C
.text:00401743		       test    eax, eax
.text:00401745		       jz      loc_401892
.text:0040174B
.text:0040174B loc_40174B:			       ; CODE XREF: sub_401610+28Aj
.text:0040174B		       mov     eax, dword_402020
.text:00401750		       mov     [edx], eax
.text:00401752		       mov     eax, dword_402024
.text:00401757		       mov     [edx+4],	eax
.text:0040175A		       mov     eax, dword_402028
.text:0040175F		       mov     [edx+8],	eax
.text:00401762		       mov     eax, dword_40202C
.text:00401767		       mov     [edx+0Ch], eax
.text:0040176A		       mov     eax, dword_402030
.text:0040176F		       mov     [edx+10h], eax
.text:00401772		       mov     eax, dword_402034
.text:00401777		       mov     [edx+14h], eax
.text:0040177A		       mov     eax, dword_402038
.text:0040177F		       mov     [edx+18h], eax
.text:00401782		       mov     eax, dword_40203C
.text:00401787		       mov     [edx+1Ch], eax
.text:0040178A
.text:0040178A loc_40178A:			       ; CODE XREF: sub_401610+B3j
.text:0040178A					       ; sub_401610+BEj ...
.text:0040178A		       mov     [esp+18h+var_18], 0
.text:00401791		       call    GetModuleHandleA
.text:00401796		       mov     dword ptr [ebx+34h], offset off_402000
.text:0040179D		       mov     dword ptr [ebx+38h], offset dword_4020AC
.text:004017A4		       mov     dword ptr [ebx+3Ch], offset dword_404000
.text:004017AB		       mov     dword ptr [ebx+40h], offset dword_404130
.text:004017B2		       mov     dword ptr [ebx+94h], offset dword_403000
.text:004017BC		       mov     [ebx+7Ch], eax
.text:004017BF		       sub     esp, 4
.text:004017C2		       mov     dword ptr [ebx+98h], offset dword_403000
.text:004017CC		       mov     dword ptr [ebx+9Ch], 400000h
.text:004017D6		       call    sub_401A50
.text:004017DB		       lea     esp, [ebp-8]
.text:004017DE		       mov     eax, 1
.text:004017E3		       pop     ebx
.text:004017E4		       pop     esi
.text:004017E5		       pop     ebp
.text:004017E6		       retn    8
.text:004017E6 ; ---------------------------------------------------------------------------
.text:004017E9		       align 10h
.text:004017F0
.text:004017F0 loc_4017F0:			       ; CODE XREF: sub_401610+1Ej
.text:004017F0		       mov     dword ptr [eax+4], 0A8h
.text:004017F7		       mov     edx, ds:_impure_ptr
.text:004017FD		       test    ecx, ecx
.text:004017FF		       mov     dword ptr [eax+8], 3EFh
.text:00401806		       mov     ebx, ecx
.text:00401808		       mov     dword ptr [eax+0Ch], 7
.text:0040180F		       mov     dword ptr [eax+80h], 0
.text:00401819		       mov     dword ptr [eax+84h], 0E6h
.text:00401823		       mov     dword ptr [eax+2Ch], offset dword_401B20
.text:0040182A		       mov     dword ptr [eax+30h], offset dword_401B2C
.text:00401831		       mov     dword ptr [eax+14h], offset dword_404020
.text:00401838		       mov     eax, [eax+0A4h]
.text:0040183E		       mov     [ecx+28h], esi
.text:00401841		       mov     dword ptr [ecx+48h], offset sub_4015B0
.text:00401848		       mov     dword ptr [ecx+4Ch], offset sub_4015C0
.text:0040184F		       mov     [edx], eax
.text:00401851		       mov     eax, [ebp+0]
.text:00401854		       mov     dword ptr [ecx+50h], offset sub_4015D0
.text:0040185B		       mov     dword ptr [ecx+54h], offset sub_4015E0
.text:00401862		       mov     dword ptr [ecx+24h], offset dword_404024
.text:00401869		       mov     [ecx], eax
.text:0040186B		       mov     dword ptr [ecx+18h], offset loc_401A60
.text:00401872		       mov     dword ptr [ecx+1Ch], offset loc_401A68
.text:00401879		       mov     dword ptr [ecx+20h], offset loc_401A70
.text:00401880		       mov     dword ptr [ecx+44h], offset loc_401A78
.text:00401887		       jnz     loc_4016C9
.text:0040188D		       jmp     loc_40178A
.text:00401892 ; ---------------------------------------------------------------------------
.text:00401892
.text:00401892 loc_401892:			       ; CODE XREF: sub_401610+135j
.text:00401892		       mov     eax, [edx+1Ch]
.text:00401895		       mov     dword_40203C, eax
.text:0040189A		       jmp     loc_40174B
.text:0040189A ; ---------------------------------------------------------------------------
.text:0040189F		       align 10h
.text:004018A0
.text:004018A0 loc_4018A0:			       ; CODE XREF: sub_401610+128j
.text:004018A0		       mov     eax, [edx+18h]
.text:004018A3		       mov     dword_402038, eax
.text:004018A8		       jmp     loc_40173E
.text:004018A8 ; ---------------------------------------------------------------------------
.text:004018AD		       align 10h
.text:004018B0
.text:004018B0 loc_4018B0:			       ; CODE XREF: sub_401610+11Aj
.text:004018B0		       mov     eax, [edx+14h]
.text:004018B3		       mov     dword_402034, eax
.text:004018B8		       jmp     loc_401730
.text:004018B8 ; ---------------------------------------------------------------------------
.text:004018BD		       align 10h
.text:004018C0
.text:004018C0 loc_4018C0:			       ; CODE XREF: sub_401610+10Cj
.text:004018C0		       mov     eax, [edx+10h]
.text:004018C3		       mov     dword_402030, eax
.text:004018C8		       jmp     loc_401722
.text:004018C8 ; ---------------------------------------------------------------------------
.text:004018CD		       align 10h
.text:004018D0
.text:004018D0 loc_4018D0:			       ; CODE XREF: sub_401610+FFj
.text:004018D0		       mov     eax, [edx+0Ch]
.text:004018D3		       mov     dword_40202C, eax
.text:004018D8		       jmp     loc_401715
.text:004018D8 ; ---------------------------------------------------------------------------
.text:004018DD		       align 10h
.text:004018E0
.text:004018E0 loc_4018E0:			       ; CODE XREF: sub_401610+F2j
.text:004018E0		       mov     eax, [edx+8]
.text:004018E3		       mov     dword_402028, eax
.text:004018E8		       jmp     loc_401708
.text:004018E8 ; ---------------------------------------------------------------------------
.text:004018ED		       align 10h
.text:004018F0
.text:004018F0 loc_4018F0:			       ; CODE XREF: sub_401610+E5j
.text:004018F0		       mov     eax, [edx+4]
.text:004018F3		       mov     dword_402024, eax
.text:004018F8		       jmp     loc_4016FB
.text:004018F8 ; ---------------------------------------------------------------------------
.text:004018FD		       align 10h
.text:00401900
.text:00401900 loc_401900:			       ; CODE XREF: sub_401610+D8j
.text:00401900		       mov     eax, [edx]
.text:00401902		       mov     dword_402020, eax
.text:00401907		       jmp     loc_4016EE
.text:00401907 sub_401610      endp
.text:00401907
.text:00401907 ; ---------------------------------------------------------------------------
.text:0040190C		       align 10h
.text:00401910
.text:00401910 ; =============== S U B R O U T I N E =======================================
.text:00401910
.text:00401910 ; Attributes: bp-based frame
.text:00401910
.text:00401910 sub_401910      proc near	       ; DATA XREF: .text:00401A04o
.text:00401910
.text:00401910 var_18	       = dword ptr -18h
.text:00401910 var_14	       = dword ptr -14h
.text:00401910 var_10	       = dword ptr -10h
.text:00401910
.text:00401910		       push    ebp
.text:00401911		       mov     ebp, esp
.text:00401913		       sub     esp, 18h
.text:00401916		       mov     eax, ds:dword_404050
.text:0040191B		       mov     [esp+18h+var_10], eax
.text:0040191F		       mov     eax, ds:dword_404040
.text:00401924		       mov     [esp+18h+var_14], eax
.text:00401928		       mov     eax, ds:dword_404030
.text:0040192D		       mov     [esp+18h+var_18], eax
.text:00401930		       call    sub_401AD0
.text:00401935		       sub     esp, 0Ch
.text:00401938		       leave
.text:00401939		       retn
.text:00401939 sub_401910      endp
.text:00401939
.text:00401939 ; ---------------------------------------------------------------------------
.text:0040193A		       align 10h
.text:00401940
.text:00401940 loc_401940:			       ; CODE XREF: .text:00401A34j
.text:00401940		       push    ebp
.text:00401941		       mov     ebp, esp
.text:00401943		       push    ebx
.text:00401944		       sub     esp, 14h
.text:00401947		       mov     eax, [ebp+0Ch]
.text:0040194A		       mov     ecx, [ebp+8]
.text:0040194D		       mov     edx, [ebp+10h]
.text:00401950		       cmp     eax, 1
.text:00401953		       jz      loc_4019E0
.text:00401959		       jb      short loc_401973
.text:0040195B		       cmp     eax, 2
.text:0040195E		       jz      short loc_4019C6
.text:00401960		       cmp     eax, 3
.text:00401963		       mov     ebx, 1
.text:00401968		       jz      short loc_4019B0
.text:0040196A
.text:0040196A loc_40196A:			       ; CODE XREF: .text:0040198Ej
.text:0040196A					       ; .text:004019A7j
.text:0040196A		       mov     eax, ebx
.text:0040196C		       mov     ebx, [ebp-4]
.text:0040196F		       leave
.text:00401970		       retn    0Ch
.text:00401973 ; ---------------------------------------------------------------------------
.text:00401973
.text:00401973 loc_401973:			       ; CODE XREF: .text:00401959j
.text:00401973		       mov     [esp+8],	edx
.text:00401977		       mov     dword ptr [esp+4], 0
.text:0040197F		       mov     [esp], ecx
.text:00401982		       call    sub_401AD0
.text:00401987		       sub     esp, 0Ch
.text:0040198A		       test    eax, eax
.text:0040198C		       mov     ebx, eax
.text:0040198E		       jz      short loc_40196A
.text:00401990		       mov     eax, ds:dword_404060
.text:00401995		       mov     [esp], eax
.text:00401998		       call    cygwin_detach_dll
.text:0040199D		       mov     ds:dword_404060,	0FFFFFFFFh
.text:004019A7		       jmp     short loc_40196A
.text:004019A7 ; ---------------------------------------------------------------------------
.text:004019A9		       align 10h
.text:004019B0
.text:004019B0 loc_4019B0:			       ; CODE XREF: .text:00401968j
.text:004019B0		       mov     [ebp+10h], edx
.text:004019B3		       mov     ebx, [ebp-4]
.text:004019B6		       mov     dword ptr [ebp+0Ch], 3
.text:004019BD		       mov     [ebp+8],	ecx
.text:004019C0		       leave
.text:004019C1		       jmp     sub_401AD0
.text:004019C6 ; ---------------------------------------------------------------------------
.text:004019C6
.text:004019C6 loc_4019C6:			       ; CODE XREF: .text:0040195Ej
.text:004019C6		       mov     [ebp+10h], edx
.text:004019C9		       mov     ebx, [ebp-4]
.text:004019CC		       mov     dword ptr [ebp+0Ch], 2
.text:004019D3		       mov     [ebp+8],	ecx
.text:004019D6		       leave
.text:004019D7		       jmp     sub_401AD0
.text:004019D7 ; ---------------------------------------------------------------------------
.text:004019DC		       align 10h
.text:004019E0
.text:004019E0 loc_4019E0:			       ; CODE XREF: .text:00401953j
.text:004019E0		       xor     eax, eax
.text:004019E2		       test    edx, edx
.text:004019E4		       setz    al
.text:004019E7		       xor     ebx, ebx
.text:004019E9		       mov     ds:dword_404030,	ecx
.text:004019EF		       mov     ds:dword_404040,	1
.text:004019F9		       mov     ds:dword_404050,	edx
.text:004019FF		       mov     ds:dword_404028,	eax
.text:00401A04		       mov     dword ptr [esp+4], offset sub_401910
.text:00401A0C		       mov     [esp], ecx
.text:00401A0F		       call    sub_401A80
.text:00401A14		       cmp     eax, 0FFFFFFFFh
.text:00401A17		       setnz   bl
.text:00401A1A		       mov     ds:dword_404060,	eax
.text:00401A1F		       mov     eax, ebx
.text:00401A21		       mov     ebx, [ebp-4]
.text:00401A24		       leave
.text:00401A25		       retn    0Ch
.text:00401A25 ; ---------------------------------------------------------------------------
.text:00401A28		       align 10h
.text:00401A30		       push    ebp
.text:00401A31		       mov     ebp, esp
.text:00401A33		       leave
.text:00401A34		       jmp     loc_401940
.text:00401A34 ; ---------------------------------------------------------------------------
.text:00401A39		       align 10h
.text:00401A40 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+" TO EXPAND]
.text:00401A46		       align 10h
.text:00401A50
.text:00401A50 ; =============== S U B R O U T I N E =======================================
.text:00401A50
.text:00401A50 ; Attributes: bp-based frame
.text:00401A50
.text:00401A50 sub_401A50      proc near	       ; CODE XREF: sub_401610+1C6p
.text:00401A50		       push    ebp
.text:00401A51		       mov     ebp, esp
.text:00401A53		       pop     ebp
.text:00401A54		       retn
.text:00401A54 sub_401A50      endp
.text:00401A54
.text:00401A54 ; ---------------------------------------------------------------------------
.text:00401A55		       align 10h
.text:00401A60
.text:00401A60 loc_401A60:			       ; DATA XREF: sub_401610+97o
.text:00401A60					       ; sub_401610+25Bo
.text:00401A60		       jmp     ds:malloc
.text:00401A60 ; ---------------------------------------------------------------------------
.text:00401A66		       align 4
.text:00401A68
.text:00401A68 loc_401A68:			       ; DATA XREF: sub_401610+9Eo
.text:00401A68					       ; sub_401610+262o
.text:00401A68		       jmp     ds:free
.text:00401A68 ; ---------------------------------------------------------------------------
.text:00401A6E		       align 10h
.text:00401A70
.text:00401A70 loc_401A70:			       ; DATA XREF: sub_401610+A5o
.text:00401A70					       ; sub_401610+269o
.text:00401A70		       jmp     ds:realloc
.text:00401A70 ; ---------------------------------------------------------------------------
.text:00401A76		       align 4
.text:00401A78
.text:00401A78 loc_401A78:			       ; DATA XREF: sub_401610+ACo
.text:00401A78					       ; sub_401610+270o
.text:00401A78		       jmp     ds:calloc
.text:00401A78 ; ---------------------------------------------------------------------------
.text:00401A7E		       align 10h
.text:00401A80
.text:00401A80 ; =============== S U B R O U T I N E =======================================
.text:00401A80
.text:00401A80 ; Attributes: bp-based frame
.text:00401A80
.text:00401A80 sub_401A80      proc near	       ; CODE XREF: .text:00401A0Fp
.text:00401A80
.text:00401A80 var_18	       = dword ptr -18h
.text:00401A80 var_14	       = dword ptr -14h
.text:00401A80 var_4	       = dword ptr -4
.text:00401A80 arg_0	       = dword ptr  8
.text:00401A80 arg_4	       = dword ptr  0Ch
.text:00401A80
.text:00401A80 ; FUNCTION CHUNK	AT .text:00401AE0 SIZE 00000006	BYTES
.text:00401A80
.text:00401A80		       push    ebp
.text:00401A81		       mov     ebp, esp
.text:00401A83		       push    ebx
.text:00401A84		       sub     esp, 14h
.text:00401A87		       mov     ebx, [ebp+arg_0]
.text:00401A8A		       mov     [esp+18h+var_14], offset	dword_404070
.text:00401A92		       mov     eax, [ebp+arg_4]
.text:00401A95		       mov     [esp+18h+var_18], eax
.text:00401A98		       call    sub_401610
.text:00401A9D		       mov     [ebp+arg_0], ebx
.text:00401AA0		       mov     ebx, [ebp+var_4]
.text:00401AA3		       mov     [ebp+arg_4], offset dword_404070
.text:00401AAA		       sub     esp, 8
.text:00401AAD		       leave
.text:00401AAE		       jmp     loc_401AE0
.text:00401AAE sub_401A80      endp
.text:00401AAE
.text:00401AAE ; ---------------------------------------------------------------------------
.text:00401AB3		       align 10h
.text:00401AC0 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_detach_dll.	PRESS KEYPAD "+" TO EXPAND]
.text:00401AC6		       align 10h
.text:00401AD0
.text:00401AD0 ; =============== S U B R O U T I N E =======================================
.text:00401AD0
.text:00401AD0 ; Attributes: bp-based frame
.text:00401AD0
.text:00401AD0 sub_401AD0      proc near	       ; CODE XREF: sub_401910+20p
.text:00401AD0					       ; .text:00401982p ...
.text:00401AD0		       push    ebp
.text:00401AD1		       mov     eax, 1
.text:00401AD6		       mov     ebp, esp
.text:00401AD8		       pop     ebp
.text:00401AD9		       retn    0Ch
.text:00401AD9 sub_401AD0      endp
.text:00401AD9
.text:00401AD9 ; ---------------------------------------------------------------------------
.text:00401ADC		       align 10h
.text:00401AE0 ; START OF FUNCTION CHUNK FOR sub_401A80
.text:00401AE0
.text:00401AE0 loc_401AE0:			       ; CODE XREF: sub_401A80+2Ej
.text:00401AE0		       jmp     ds:dll_dllcrt0
.text:00401AE0 ; END OF	FUNCTION CHUNK FOR sub_401A80
.text:00401AE0 ; ---------------------------------------------------------------------------
.text:00401AE6		       align 4
.text:00401AE8 ; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA. PRESS KEYPAD "+"	TO EXPAND]
.text:00401AEE		       align 10h
.text:00401AF0 ; [00000006 BYTES: COLLAPSED FUNCTION GetProcAddress. PRESS KEYPAD "+" TO EXPAND]
.text:00401AF6		       align 10h
.text:00401B00		       push    ebp
.text:00401B01		       mov     ebp, esp
.text:00401B03		       pop     ebp
.text:00401B04		       jmp     loc_4010B0
.text:00401B04 ; ---------------------------------------------------------------------------
.text:00401B09		       align 10h
.text:00401B10		       push    ebp
.text:00401B11		       mov     ebp, esp
.text:00401B13		       pop     ebp
.text:00401B14		       jmp     loc_401150
.text:00401B14 ; ---------------------------------------------------------------------------
.text:00401B19		       align 10h
.text:00401B20 dword_401B20    dd 0FFFFFFFFh, 401B00h, 0 ; DATA	XREF: sub_401610+5Ao
.text:00401B20					       ; sub_401610+213o
.text:00401B2C dword_401B2C    dd 0FFFFFFFFh, 401B10h, 33h dup(0)
.text:00401B2C					       ; DATA XREF: sub_401610+61o
.text:00401B2C					       ; sub_401610+21Ao
.text:00401C00		       dd 100h dup(?)
.text:00401C00 _text	       ends
.text:00401C00
.data:00402000 ; Section 2. (virtual address 00002000)
.data:00402000 ; Virtual size		       : 000000AC (    172.)
.data:00402000 ; Section size in file	       : 00000200 (    512.)
.data:00402000 ; Offset	to raw data for	section: 00001000
.data:00402000 ; Flags C0600040: Data Readable Writable
.data:00402000 ; Alignment     : 32 bytes
.data:00402000 ; ===========================================================================
.data:00402000
.data:00402000 ; Segment type: Pure data
.data:00402000 ; Segment permissions: Read/Write
.data:00402000 ; Segment alignment '32byte' can not be represented in assembly
.data:00402000 _data	       segment para public 'DATA' use32
.data:00402000		       assume cs:_data
.data:00402000		       ;org 402000h
.data:00402000 off_402000      dd offset __register_frame_info
.data:00402000					       ; DATA XREF: .text:loc_401130r
.data:00402000					       ; sub_401610+186o
.data:00402004 off_402004      dd offset __deregister_frame_info
.data:00402004					       ; DATA XREF: .text:loc_401190r
.data:00402008 dword_402008    dd 0		       ; DATA XREF: .text:loc_401140r
.data:0040200C		       align 20h
.data:00402020 dword_402020    dd 0		       ; DATA XREF: sub_401610+D1r
.data:00402020					       ; sub_401610:loc_40174Br ...
.data:00402024 dword_402024    dd 0		       ; DATA XREF: sub_401610:loc_4016EEr
.data:00402024					       ; sub_401610+142r ...
.data:00402028 dword_402028    dd 0		       ; DATA XREF: sub_401610:loc_4016FBr
.data:00402028					       ; sub_401610+14Ar ...
.data:0040202C dword_40202C    dd 0		       ; DATA XREF: sub_401610:loc_401708r
.data:0040202C					       ; sub_401610+152r ...
.data:00402030 dword_402030    dd 0		       ; DATA XREF: sub_401610:loc_401715r
.data:00402030					       ; sub_401610+15Ar ...
.data:00402034 dword_402034    dd 0		       ; DATA XREF: sub_401610:loc_401722r
.data:00402034					       ; sub_401610+162r ...
.data:00402038 dword_402038    dd 0		       ; DATA XREF: sub_401610:loc_401730r
.data:00402038					       ; sub_401610+16Ar ...
.data:0040203C dword_40203C    dd 0		       ; DATA XREF: sub_401610:loc_40173Er
.data:0040203C					       ; sub_401610+172r ...
.data:00402040 aCyggcc_s1_dll  db 'cyggcc_s-1.dll',0   ; DATA XREF: .text:004010B6o
.data:00402040					       ; .text:00401156o
.data:0040204F a__register_fra db '__register_frame_info',0 ; DATA XREF: .text:004010C9o
.data:00402065 aCyggcj9_dll    db 'cyggcj-9.dll',0     ; DATA XREF: .text:004010FAo
.data:00402072 a_jv_registercl db '_Jv_RegisterClasses',0 ; DATA XREF: .text:0040110Do
.data:00402086 a__deregister_f db '__deregister_frame_info',0 ; DATA XREF: .text:00401169o
.data:0040209E		       align 10h
.data:004020A0 aD	       db '%d',0               ; DATA XREF: .text:00401200o
.data:004020A3 aD_0	       db '%d ',0              ; DATA XREF: .text:00401505o
.data:004020A7		       align 4
.data:004020A8 dword_4020A8    dd 0		       ; DATA XREF: .text:loc_4010F1r
.data:004020A8					       ; .text:loc_401124o
.data:004020AC dword_4020AC    dd 55h dup(0)	       ; DATA XREF: sub_401610+18Do
.data:00402200		       align 1000h
.data:00402200 _data	       ends
.data:00402200
.eh_frame:00403000 ; Section 3.	(virtual address 00003000)
.eh_frame:00403000 ; Virtual size		   : 00000004 (	     4.)
.eh_frame:00403000 ; Section size in file	   : 00000200 (	   512.)
.eh_frame:00403000 ; Offset to raw data	for section: 00001200
.eh_frame:00403000 ; Flags C0300040: Data Readable Writable
.eh_frame:00403000 ; Alignment	   : 4 bytes
.eh_frame:00403000 ; ===========================================================================
.eh_frame:00403000
.eh_frame:00403000 ; Segment type: Pure	data
.eh_frame:00403000 ; Segment permissions: Read/Write
.eh_frame:00403000 _eh_frame	   segment dword public	'DATA' use32
.eh_frame:00403000		   assume cs:_eh_frame
.eh_frame:00403000		   ;org	403000h
.eh_frame:00403000 dword_403000	   dd 80h dup(0)	   ; DATA XREF:	.text:004010E8o
.eh_frame:00403000					   ; .text:loc_401180o	...
.eh_frame:00403200		   align 1000h
.eh_frame:00403200 _eh_frame	   ends
.eh_frame:00403200
.bss:00404000 ;	Section	4. (virtual address 00004000)
.bss:00404000 ;	Virtual	size		      :	00000130 (    304.)
.bss:00404000 ;	Section	size in	file	      :	00000000 (	0.)
.bss:00404000 ;	Offset to raw data for section:	00000000
.bss:00404000 ;	Flags C0400080:	Bss Readable Writable
.bss:00404000 ;	Alignment     :	8 bytes
.bss:00404000 ;	===========================================================================
.bss:00404000
.bss:00404000 ;	Segment	type: Uninitialized
.bss:00404000 ;	Segment	permissions: Read/Write
.bss:00404000 ;	Segment	alignment 'qword' can not be represented in assembly
.bss:00404000 _bss	      segment para public 'BSS' use32
.bss:00404000		      assume cs:_bss
.bss:00404000		      ;org 404000h
.bss:00404000		      assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00404000 dword_404000    dd 8 dup(?)	      ;	DATA XREF: .text:loc_4010E0o
.bss:00404000					      ;	sub_401610+194o
.bss:00404020 dword_404020    dd ?		      ;	DATA XREF: sub_401610+68o
.bss:00404020					      ;	sub_401610+221o
.bss:00404024 dword_404024    dd ?		      ;	DATA XREF: sub_401610+8Eo
.bss:00404024					      ;	sub_401610+252o
.bss:00404028 dword_404028    dd ?		      ;	DATA XREF: sub_401610+C4r
.bss:00404028					      ;	.text:004019FFw
.bss:0040402C		      align 10h
.bss:00404030 dword_404030    dd ?		      ;	DATA XREF: sub_401910+18r
.bss:00404030					      ;	.text:004019E9w
.bss:00404034		      align 10h
.bss:00404040 dword_404040    dd ?		      ;	DATA XREF: sub_401910+Fr
.bss:00404040					      ;	.text:004019EFw
.bss:00404044		      align 10h
.bss:00404050 dword_404050    dd ?		      ;	DATA XREF: sub_401910+6r
.bss:00404050					      ;	.text:004019F9w
.bss:00404054		      align 10h
.bss:00404060 dword_404060    dd ?		      ;	DATA XREF: .text:00401990r
.bss:00404060					      ;	.text:0040199Dw ...
.bss:00404064		      align 10h
.bss:00404070 dword_404070    dd 30h dup(?)	      ;	DATA XREF: sub_401A80+Ao
.bss:00404070					      ;	sub_401A80+23o
.bss:00404130 dword_404130    dd 3B4h dup(?)	      ;	DATA XREF: sub_401610+19Bo
.bss:00404130 _bss	      ends
.bss:00404130
.idata:00405000	; Section 5. (virtual address 00005000)
.idata:00405000	; Virtual size			: 00000270 (	624.)
.idata:00405000	; Section size in file		: 00000400 (   1024.)
.idata:00405000	; Offset to raw	data for section: 00001400
.idata:00405000	; Flags	C0300040: Data Readable	Writable
.idata:00405000	; Alignment	: 4 bytes
.idata:00405000	; ===========================================================================
.idata:00405000
.idata:00405000	; Segment type:	Externs
.idata:00405000	; _idata
.idata:00405000
.idata:00405001
.idata:004050A0	;
.idata:004050A0	; Imports from cygwin1.dll
.idata:004050A0	;
.idata:004050A0			extrn __imp___main:dword ; DATA	XREF: __mainr
.idata:004050A4	; __stdcall dll_crt0()
.idata:004050A4			extrn _dll_crt0@0:dword	; CODE XREF: sub_401580+1Cp
.idata:004050A4						; DATA XREF: sub_401580+1Cr
.idata:004050A8			extrn _impure_ptr:dword	; DATA XREF: sub_401610+24r
.idata:004050A8						; sub_401610+1E7r
.idata:004050AC	; void *__cdecl	calloc(size_t NumOfElements, size_t SizeOfElements)
.idata:004050AC			extrn calloc:dword	; DATA XREF: .text:loc_401A78r
.idata:004050B0			extrn __imp_cygwin_detach_dll:dword
.idata:004050B0						; DATA XREF: cygwin_detach_dllr
.idata:004050B4			extrn __imp_cygwin_internal:dword
.idata:004050B4						; DATA XREF: cygwin_internalr
.idata:004050B8			extrn dll_dllcrt0:dword	; DATA XREF: sub_401A80:loc_401AE0r
.idata:004050BC	; void __cdecl free(void *Memory)
.idata:004050BC			extrn free:dword	; DATA XREF: .text:loc_401A68r
.idata:004050C0	; void *__cdecl	malloc(size_t Size)
.idata:004050C0			extrn malloc:dword	; DATA XREF: .text:loc_401A60r
.idata:004050C4	; int printf(const char	*Format, ...)
.idata:004050C4			extrn __imp_printf:dword ; DATA	XREF: printfr
.idata:004050C8	; int __cdecl putchar(int Ch)
.idata:004050C8			extrn __imp_putchar:dword ; DATA XREF: putcharr
.idata:004050CC	; void *__cdecl	realloc(void *Memory, size_t NewSize)
.idata:004050CC			extrn realloc:dword	; DATA XREF: .text:loc_401A70r
.idata:004050D0	; int sscanf(const char	*Src, const char *Format, ...)
.idata:004050D0			extrn __imp_sscanf:dword ; DATA	XREF: sscanfr
.idata:004050D4
.idata:004050D8	;
.idata:004050D8	; Imports from cyggcc_s-1.dll
.idata:004050D8	;
.idata:004050D8			extrn __imp___deregister_frame_info:dword
.idata:004050D8						; DATA XREF: __deregister_frame_infor
.idata:004050DC			extrn __imp___register_frame_info:dword
.idata:004050DC						; DATA XREF: __register_frame_infor
.idata:004050E0
.idata:004050E4	;
.idata:004050E4	; Imports from KERNEL32.dll
.idata:004050E4	;
.idata:004050E4	; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
.idata:004050E4			extrn __imp_GetModuleHandleA:dword
.idata:004050E4						; DATA XREF: GetModuleHandleAr
.idata:004050E8	; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
.idata:004050E8			extrn __imp_GetProcAddress:dword
.idata:004050E8						; DATA XREF: GetProcAddressr
.idata:004050EC
.idata:004050EC
.idata:004050EC
.idata:004050EC			end start
