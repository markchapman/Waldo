;
; +-------------------------------------------------------------------------+
; |   This file	has been generated by The Interactive Disassembler (IDA)    |
; |	   Copyright (c) 2009 by Hex-Rays, <support@hex-rays.com>	    |
; |			 License info: 48-313D-7374-F1			    |
; |   Aditya Thakur, University	of Wisconsin/Computer Sciences Department   |
; +-------------------------------------------------------------------------+
;
.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00401000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.text:00401000 ; |			License	info: 48-313D-7374-F1			   |
.text:00401000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input MD5   : 4348A7C8087D5DDA2FD067A09D71A9C5
.text:00401000
.text:00401000 ; File Name   : C:\aditya\work\waldo\tests\sglib-1.0.4\samples\hash.exe
.text:00401000 ; Format	     : Portable	executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size		       : 00001118 (   4376.)
.text:00401000 ; Section size in file	       : 00001200 (   4608.)
.text:00401000 ; Offset	to raw data for	section: 00000400
.text:00401000 ; Flags 60500060: Text Data Executable Readable
.text:00401000 ; Alignment     : 16 bytes
.text:00401000
.text:00401000		       .686p
.text:00401000		       .mmx
.text:00401000		       .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text	       segment para public 'CODE' use32
.text:00401000		       assume cs:_text
.text:00401000		       ;org 401000h
.text:00401000		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: bp-based frame
.text:00401000
.text:00401000		       public start
.text:00401000 start	       proc near
.text:00401000
.text:00401000 var_28	       = dword ptr -28h
.text:00401000 var_24	       = dword ptr -24h
.text:00401000 var_20	       = dword ptr -20h
.text:00401000 var_2	       = word ptr -2
.text:00401000
.text:00401000		       push    ebp
.text:00401001		       mov     ebp, esp
.text:00401003		       sub     esp, 28h
.text:00401006		       and     esp, 0FFFFFFF0h
.text:00401009		       fnstcw  [ebp+var_2]
.text:0040100C		       movzx   eax, [ebp+var_2]
.text:00401010		       and     ax, 0F0C0h
.text:00401014		       mov     [ebp+var_2], ax
.text:00401018		       movzx   eax, [ebp+var_2]
.text:0040101C		       or      ax, 33Fh
.text:00401020		       mov     [ebp+var_2], ax
.text:00401024		       fldcw   [ebp+var_2]
.text:00401027		       mov     [esp+28h+var_28], offset	sub_4019FC
.text:0040102E		       call    sub_401B50
.text:00401033		       mov     [esp+28h+var_20], 0
.text:0040103B		       mov     [esp+28h+var_24], 0
.text:00401043		       mov     [esp+28h+var_28], 0
.text:0040104A		       call    sub_401B80
.text:0040104F		       mov     [esp+28h+var_20], 0
.text:00401057		       mov     [esp+28h+var_24], 0
.text:0040105F		       mov     [esp+28h+var_28], 0
.text:00401066		       call    sub_401B90
.text:0040106B		       mov     [esp+28h+var_20], 0
.text:00401073		       mov     [esp+28h+var_24], 0
.text:0040107B		       mov     [esp+28h+var_28], 0
.text:00401082		       call    sub_401BA0
.text:00401087		       mov     [esp+28h+var_20], 0
.text:0040108F		       mov     [esp+28h+var_24], 0
.text:00401097		       mov     [esp+28h+var_28], 0
.text:0040109E		       call    sub_401BB0
.text:004010A3		       leave
.text:004010A4		       retn
.text:004010A4 start	       endp
.text:004010A4
.text:004010A4 ; ---------------------------------------------------------------------------
.text:004010A5		       align 10h
.text:004010B0
.text:004010B0 loc_4010B0:			       ; CODE XREF: .text:004020E4j
.text:004010B0		       push    ebp
.text:004010B1		       mov     ebp, esp
.text:004010B3		       sub     esp, 8
.text:004010B6		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:004010BD		       call    GetModuleHandleA
.text:004010C2		       sub     esp, 4
.text:004010C5		       test    eax, eax
.text:004010C7		       jz      short loc_401130
.text:004010C9		       mov     dword ptr [esp+4], offset a__register_fra ; "__register_frame_info"
.text:004010D1		       mov     [esp], eax
.text:004010D4		       call    GetProcAddress
.text:004010D9		       sub     esp, 8
.text:004010DC		       test    eax, eax
.text:004010DE		       jz      short loc_401130
.text:004010E0
.text:004010E0 loc_4010E0:			       ; CODE XREF: .text:00401139j
.text:004010E0		       mov     dword ptr [esp+4], offset dword_405000
.text:004010E8		       mov     dword ptr [esp],	offset dword_404000
.text:004010EF		       call    eax
.text:004010F1
.text:004010F1 loc_4010F1:			       ; CODE XREF: .text:00401137j
.text:004010F1		       mov     eax, dword_403120
.text:004010F6		       test    eax, eax
.text:004010F8		       jz      short locret_40112D
.text:004010FA		       mov     dword ptr [esp],	offset aCyggcj9_dll ; "cyggcj-9.dll"
.text:00401101		       call    GetModuleHandleA
.text:00401106		       sub     esp, 4
.text:00401109		       test    eax, eax
.text:0040110B		       jz      short loc_401140
.text:0040110D		       mov     dword ptr [esp+4], offset a_jv_registercl ; "_Jv_RegisterClasses"
.text:00401115		       mov     [esp], eax
.text:00401118		       call    GetProcAddress
.text:0040111D		       sub     esp, 8
.text:00401120		       test    eax, eax
.text:00401122		       jz      short loc_401140
.text:00401124
.text:00401124 loc_401124:			       ; CODE XREF: .text:00401147j
.text:00401124		       mov     dword ptr [esp],	offset dword_403120
.text:0040112B		       call    eax
.text:0040112D
.text:0040112D locret_40112D:			       ; CODE XREF: .text:004010F8j
.text:0040112D		       leave
.text:0040112E		       retn
.text:0040112E ; ---------------------------------------------------------------------------
.text:0040112F		       align 10h
.text:00401130
.text:00401130 loc_401130:			       ; CODE XREF: .text:004010C7j
.text:00401130					       ; .text:004010DEj
.text:00401130		       mov     eax, off_403000
.text:00401135		       test    eax, eax
.text:00401137		       jz      short loc_4010F1
.text:00401139		       jmp     short loc_4010E0
.text:00401139 ; ---------------------------------------------------------------------------
.text:0040113B		       align 10h
.text:00401140
.text:00401140 loc_401140:			       ; CODE XREF: .text:0040110Bj
.text:00401140					       ; .text:00401122j
.text:00401140		       mov     eax, dword_403008
.text:00401145		       test    eax, eax
.text:00401147		       jnz     short loc_401124
.text:00401149		       leave
.text:0040114A		       retn
.text:0040114A ; ---------------------------------------------------------------------------
.text:0040114B		       align 10h
.text:00401150
.text:00401150 loc_401150:			       ; CODE XREF: .text:004020F4j
.text:00401150		       push    ebp
.text:00401151		       mov     ebp, esp
.text:00401153		       sub     esp, 8
.text:00401156		       mov     dword ptr [esp],	offset aCyggcc_s1_dll ;	"cyggcc_s-1.dll"
.text:0040115D		       call    GetModuleHandleA
.text:00401162		       sub     esp, 4
.text:00401165		       test    eax, eax
.text:00401167		       jz      short loc_401190
.text:00401169		       mov     dword ptr [esp+4], offset a__deregister_f ; "__deregister_frame_info"
.text:00401171		       mov     [esp], eax
.text:00401174		       call    GetProcAddress
.text:00401179		       sub     esp, 8
.text:0040117C		       test    eax, eax
.text:0040117E		       jz      short loc_401190
.text:00401180
.text:00401180 loc_401180:			       ; CODE XREF: .text:00401197j
.text:00401180		       mov     dword ptr [esp],	offset dword_404000
.text:00401187		       call    eax
.text:00401189		       leave
.text:0040118A		       retn
.text:0040118A ; ---------------------------------------------------------------------------
.text:0040118B		       align 10h
.text:00401190
.text:00401190 loc_401190:			       ; CODE XREF: .text:00401167j
.text:00401190					       ; .text:0040117Ej
.text:00401190		       mov     eax, off_403004
.text:00401195		       test    eax, eax
.text:00401197		       jnz     short loc_401180
.text:00401199		       leave
.text:0040119A		       retn
.text:0040119A ; ---------------------------------------------------------------------------
.text:0040119B		       align 10h
.text:004011A0
.text:004011A0 ; =============== S U B R O U T I N E =======================================
.text:004011A0
.text:004011A0 ; Attributes: bp-based frame
.text:004011A0
.text:004011A0 sub_4011A0      proc near	       ; CODE XREF: sub_4016AA+Cp
.text:004011A0					       ; .text:0040170Ep ...
.text:004011A0
.text:004011A0 arg_0	       = dword ptr  8
.text:004011A0
.text:004011A0		       push    ebp
.text:004011A1		       mov     ebp, esp
.text:004011A3		       mov     eax, [ebp+arg_0]
.text:004011A6		       mov     eax, [eax]
.text:004011A8		       pop     ebp
.text:004011A9		       retn
.text:004011A9 sub_4011A0      endp
.text:004011A9
.text:004011AA
.text:004011AA ; =============== S U B R O U T I N E =======================================
.text:004011AA
.text:004011AA ; Attributes: bp-based frame
.text:004011AA
.text:004011AA sub_4011AA      proc near	       ; CODE XREF: .text:00401869p
.text:004011AA
.text:004011AA var_8	       = dword ptr -8
.text:004011AA var_4	       = dword ptr -4
.text:004011AA arg_0	       = dword ptr  8
.text:004011AA arg_4	       = dword ptr  0Ch
.text:004011AA
.text:004011AA		       push    ebp
.text:004011AB		       mov     ebp, esp
.text:004011AD		       sub     esp, 10h
.text:004011B0		       mov     eax, [ebp+arg_0]
.text:004011B3		       mov     [ebp+var_4], eax
.text:004011B6		       jmp     short loc_4011C1
.text:004011B8 ; ---------------------------------------------------------------------------
.text:004011B8
.text:004011B8 loc_4011B8:			       ; CODE XREF: sub_4011AA+23j
.text:004011B8		       mov     eax, [ebp+var_4]
.text:004011BB		       mov     eax, [eax+4]
.text:004011BE		       mov     [ebp+var_4], eax
.text:004011C1
.text:004011C1 loc_4011C1:			       ; CODE XREF: sub_4011AA+Cj
.text:004011C1		       cmp     [ebp+var_4], 0
.text:004011C5		       jz      short loc_4011CF
.text:004011C7		       mov     eax, [ebp+var_4]
.text:004011CA		       cmp     eax, [ebp+arg_4]
.text:004011CD		       jnz     short loc_4011B8
.text:004011CF
.text:004011CF loc_4011CF:			       ; CODE XREF: sub_4011AA+1Bj
.text:004011CF		       cmp     [ebp+var_4], 0
.text:004011D3		       setnz   al
.text:004011D6		       movzx   eax, al
.text:004011D9		       mov     [ebp+var_8], eax
.text:004011DC		       mov     eax, [ebp+var_8]
.text:004011DF		       leave
.text:004011E0		       retn
.text:004011E0 sub_4011AA      endp
.text:004011E0
.text:004011E1
.text:004011E1 ; =============== S U B R O U T I N E =======================================
.text:004011E1
.text:004011E1 ; Attributes: bp-based frame
.text:004011E1
.text:004011E1 sub_4011E1      proc near	       ; CODE XREF: sub_401870+51p
.text:004011E1
.text:004011E1 var_8	       = dword ptr -8
.text:004011E1 var_4	       = dword ptr -4
.text:004011E1 arg_0	       = dword ptr  8
.text:004011E1 arg_4	       = dword ptr  0Ch
.text:004011E1
.text:004011E1		       push    ebp
.text:004011E2		       mov     ebp, esp
.text:004011E4		       sub     esp, 10h
.text:004011E7		       mov     eax, [ebp+arg_0]
.text:004011EA		       mov     [ebp+var_4], eax
.text:004011ED		       jmp     short loc_4011F8
.text:004011EF ; ---------------------------------------------------------------------------
.text:004011EF
.text:004011EF loc_4011EF:			       ; CODE XREF: sub_4011E1+29j
.text:004011EF		       mov     eax, [ebp+var_4]
.text:004011F2		       mov     eax, [eax+4]
.text:004011F5		       mov     [ebp+var_4], eax
.text:004011F8
.text:004011F8 loc_4011F8:			       ; CODE XREF: sub_4011E1+Cj
.text:004011F8		       cmp     [ebp+var_4], 0
.text:004011FC		       jz      short loc_40120C
.text:004011FE		       mov     eax, [ebp+var_4]
.text:00401201		       mov     edx, [eax]
.text:00401203		       mov     eax, [ebp+arg_4]
.text:00401206		       mov     eax, [eax]
.text:00401208		       cmp     edx, eax
.text:0040120A		       jnz     short loc_4011EF
.text:0040120C
.text:0040120C loc_40120C:			       ; CODE XREF: sub_4011E1+1Bj
.text:0040120C		       mov     eax, [ebp+var_4]
.text:0040120F		       mov     [ebp+var_8], eax
.text:00401212		       mov     eax, [ebp+var_8]
.text:00401215		       leave
.text:00401216		       retn
.text:00401216 sub_4011E1      endp
.text:00401216
.text:00401217
.text:00401217 ; =============== S U B R O U T I N E =======================================
.text:00401217
.text:00401217 ; Attributes: bp-based frame
.text:00401217
.text:00401217 sub_401217      proc near	       ; CODE XREF: .text:0040175Ap
.text:00401217
.text:00401217 var_4	       = dword ptr -4
.text:00401217 arg_0	       = dword ptr  8
.text:00401217 arg_4	       = dword ptr  0Ch
.text:00401217 arg_8	       = dword ptr  10h
.text:00401217
.text:00401217		       push    ebp
.text:00401218		       mov     ebp, esp
.text:0040121A		       sub     esp, 10h
.text:0040121D		       mov     eax, [ebp+arg_0]
.text:00401220		       mov     eax, [eax]
.text:00401222		       mov     [ebp+var_4], eax
.text:00401225		       jmp     short loc_401230
.text:00401227 ; ---------------------------------------------------------------------------
.text:00401227
.text:00401227 loc_401227:			       ; CODE XREF: sub_401217+2Bj
.text:00401227		       mov     eax, [ebp+var_4]
.text:0040122A		       mov     eax, [eax+4]
.text:0040122D		       mov     [ebp+var_4], eax
.text:00401230
.text:00401230 loc_401230:			       ; CODE XREF: sub_401217+Ej
.text:00401230		       cmp     [ebp+var_4], 0
.text:00401234		       jz      short loc_401244
.text:00401236		       mov     eax, [ebp+var_4]
.text:00401239		       mov     edx, [eax]
.text:0040123B		       mov     eax, [ebp+arg_4]
.text:0040123E		       mov     eax, [eax]
.text:00401240		       cmp     edx, eax
.text:00401242		       jnz     short loc_401227
.text:00401244
.text:00401244 loc_401244:			       ; CODE XREF: sub_401217+1Dj
.text:00401244		       mov     edx, [ebp+arg_8]
.text:00401247		       mov     eax, [ebp+var_4]
.text:0040124A		       mov     [edx], eax
.text:0040124C		       cmp     [ebp+var_4], 0
.text:00401250		       jnz     short loc_401265
.text:00401252		       mov     eax, [ebp+arg_0]
.text:00401255		       mov     edx, [eax]
.text:00401257		       mov     eax, [ebp+arg_4]
.text:0040125A		       mov     [eax+4],	edx
.text:0040125D		       mov     edx, [ebp+arg_0]
.text:00401260		       mov     eax, [ebp+arg_4]
.text:00401263		       mov     [edx], eax
.text:00401265
.text:00401265 loc_401265:			       ; CODE XREF: sub_401217+39j
.text:00401265		       mov     eax, [ebp+arg_8]
.text:00401268		       mov     eax, [eax]
.text:0040126A		       test    eax, eax
.text:0040126C		       setz    al
.text:0040126F		       movzx   eax, al
.text:00401272		       leave
.text:00401273		       retn
.text:00401273 sub_401217      endp
.text:00401273
.text:00401274
.text:00401274 ; =============== S U B R O U T I N E =======================================
.text:00401274
.text:00401274 ; Attributes: bp-based frame
.text:00401274
.text:00401274 sub_401274      proc near	       ; CODE XREF: sub_4016AA+51p
.text:00401274
.text:00401274 arg_0	       = dword ptr  8
.text:00401274 arg_4	       = dword ptr  0Ch
.text:00401274
.text:00401274		       push    ebp
.text:00401275		       mov     ebp, esp
.text:00401277		       mov     eax, [ebp+arg_0]
.text:0040127A		       mov     edx, [eax]
.text:0040127C		       mov     eax, [ebp+arg_4]
.text:0040127F		       mov     [eax+4],	edx
.text:00401282		       mov     edx, [ebp+arg_0]
.text:00401285		       mov     eax, [ebp+arg_4]
.text:00401288		       mov     [edx], eax
.text:0040128A		       pop     ebp
.text:0040128B		       retn
.text:0040128B sub_401274      endp
.text:0040128B
.text:0040128C ; ---------------------------------------------------------------------------
.text:0040128C		       push    ebp
.text:0040128D		       mov     ebp, esp
.text:0040128F		       sub     esp, 10h
.text:00401292		       mov     eax, [ebp+8]
.text:00401295		       mov     eax, [eax]
.text:00401297		       test    eax, eax
.text:00401299		       jnz     short loc_4012A5
.text:0040129B		       mov     edx, [ebp+8]
.text:0040129E		       mov     eax, [ebp+0Ch]
.text:004012A1		       mov     [edx], eax
.text:004012A3		       jmp     short locret_4012CB
.text:004012A5 ; ---------------------------------------------------------------------------
.text:004012A5
.text:004012A5 loc_4012A5:			       ; CODE XREF: .text:00401299j
.text:004012A5		       mov     eax, [ebp+8]
.text:004012A8		       mov     eax, [eax]
.text:004012AA		       mov     [ebp-4],	eax
.text:004012AD		       jmp     short loc_4012B8
.text:004012AF ; ---------------------------------------------------------------------------
.text:004012AF
.text:004012AF loc_4012AF:			       ; CODE XREF: .text:004012C0j
.text:004012AF		       mov     eax, [ebp-4]
.text:004012B2		       mov     eax, [eax+4]
.text:004012B5		       mov     [ebp-4],	eax
.text:004012B8
.text:004012B8 loc_4012B8:			       ; CODE XREF: .text:004012ADj
.text:004012B8		       mov     eax, [ebp-4]
.text:004012BB		       mov     eax, [eax+4]
.text:004012BE		       test    eax, eax
.text:004012C0		       jnz     short loc_4012AF
.text:004012C2		       mov     edx, [ebp-4]
.text:004012C5		       mov     eax, [ebp+0Ch]
.text:004012C8		       mov     [edx+4],	eax
.text:004012CB
.text:004012CB locret_4012CB:			       ; CODE XREF: .text:004012A3j
.text:004012CB		       leave
.text:004012CC		       retn
.text:004012CD
.text:004012CD ; =============== S U B R O U T I N E =======================================
.text:004012CD
.text:004012CD ; Attributes: bp-based frame
.text:004012CD
.text:004012CD sub_4012CD      proc near	       ; CODE XREF: .text:004017B2p
.text:004012CD
.text:004012CD var_28	       = dword ptr -28h
.text:004012CD var_24	       = dword ptr -24h
.text:004012CD var_20	       = dword ptr -20h
.text:004012CD var_1C	       = dword ptr -1Ch
.text:004012CD var_4	       = dword ptr -4
.text:004012CD arg_0	       = dword ptr  8
.text:004012CD arg_4	       = dword ptr  0Ch
.text:004012CD
.text:004012CD		       push    ebp
.text:004012CE		       mov     ebp, esp
.text:004012D0		       sub     esp, 28h
.text:004012D3		       mov     eax, [ebp+arg_0]
.text:004012D6		       mov     [ebp+var_4], eax
.text:004012D9		       jmp     short loc_4012E6
.text:004012DB ; ---------------------------------------------------------------------------
.text:004012DB
.text:004012DB loc_4012DB:			       ; CODE XREF: sub_4012CD+2Aj
.text:004012DB		       mov     eax, [ebp+var_4]
.text:004012DE		       mov     eax, [eax]
.text:004012E0		       add     eax, 4
.text:004012E3		       mov     [ebp+var_4], eax
.text:004012E6
.text:004012E6 loc_4012E6:			       ; CODE XREF: sub_4012CD+Cj
.text:004012E6		       mov     eax, [ebp+var_4]
.text:004012E9		       mov     eax, [eax]
.text:004012EB		       test    eax, eax
.text:004012ED		       jz      short loc_4012F9
.text:004012EF		       mov     eax, [ebp+var_4]
.text:004012F2		       mov     eax, [eax]
.text:004012F4		       cmp     eax, [ebp+arg_4]
.text:004012F7		       jnz     short loc_4012DB
.text:004012F9
.text:004012F9 loc_4012F9:			       ; CODE XREF: sub_4012CD+20j
.text:004012F9		       mov     eax, [ebp+var_4]
.text:004012FC		       mov     eax, [eax]
.text:004012FE		       test    eax, eax
.text:00401300		       jnz     short loc_401326
.text:00401302		       mov     [esp+28h+var_1C], offset	a_p_NullElement	; "*_p_!=NULL && \"element is not member of"...
.text:0040130A		       mov     [esp+28h+var_20], offset	aSglib_ilist_de	; "sglib_ilist_delete"
.text:00401312		       mov     [esp+28h+var_24], 1Dh
.text:0040131A		       mov     [esp+28h+var_28], offset	aHash_c	; "hash.c"
.text:00401321		       call    __assert_func
.text:00401326
.text:00401326 loc_401326:			       ; CODE XREF: sub_4012CD+33j
.text:00401326		       mov     eax, [ebp+var_4]
.text:00401329		       mov     eax, [eax]
.text:0040132B		       mov     edx, [eax+4]
.text:0040132E		       mov     eax, [ebp+var_4]
.text:00401331		       mov     [eax], edx
.text:00401333		       leave
.text:00401334		       retn
.text:00401334 sub_4012CD      endp
.text:00401334
.text:00401335
.text:00401335 ; =============== S U B R O U T I N E =======================================
.text:00401335
.text:00401335 ; Attributes: bp-based frame
.text:00401335
.text:00401335 sub_401335      proc near	       ; CODE XREF: .text:00401811p
.text:00401335
.text:00401335 var_4	       = dword ptr -4
.text:00401335 arg_0	       = dword ptr  8
.text:00401335 arg_4	       = dword ptr  0Ch
.text:00401335 arg_8	       = dword ptr  10h
.text:00401335
.text:00401335		       push    ebp
.text:00401336		       mov     ebp, esp
.text:00401338		       sub     esp, 10h
.text:0040133B		       mov     eax, [ebp+arg_0]
.text:0040133E		       mov     [ebp+var_4], eax
.text:00401341		       jmp     short loc_40134E
.text:00401343 ; ---------------------------------------------------------------------------
.text:00401343
.text:00401343 loc_401343:			       ; CODE XREF: sub_401335+30j
.text:00401343		       mov     eax, [ebp+var_4]
.text:00401346		       mov     eax, [eax]
.text:00401348		       add     eax, 4
.text:0040134B		       mov     [ebp+var_4], eax
.text:0040134E
.text:0040134E loc_40134E:			       ; CODE XREF: sub_401335+Cj
.text:0040134E		       mov     eax, [ebp+var_4]
.text:00401351		       mov     eax, [eax]
.text:00401353		       test    eax, eax
.text:00401355		       jz      short loc_401367
.text:00401357		       mov     eax, [ebp+var_4]
.text:0040135A		       mov     eax, [eax]
.text:0040135C		       mov     edx, [eax]
.text:0040135E		       mov     eax, [ebp+arg_4]
.text:00401361		       mov     eax, [eax]
.text:00401363		       cmp     edx, eax
.text:00401365		       jnz     short loc_401343
.text:00401367
.text:00401367 loc_401367:			       ; CODE XREF: sub_401335+20j
.text:00401367		       mov     eax, [ebp+var_4]
.text:0040136A		       mov     edx, [eax]
.text:0040136C		       mov     eax, [ebp+arg_8]
.text:0040136F		       mov     [eax], edx
.text:00401371		       mov     eax, [ebp+var_4]
.text:00401374		       mov     eax, [eax]
.text:00401376		       test    eax, eax
.text:00401378		       jz      short loc_401387
.text:0040137A		       mov     eax, [ebp+var_4]
.text:0040137D		       mov     eax, [eax]
.text:0040137F		       mov     edx, [eax+4]
.text:00401382		       mov     eax, [ebp+var_4]
.text:00401385		       mov     [eax], edx
.text:00401387
.text:00401387 loc_401387:			       ; CODE XREF: sub_401335+43j
.text:00401387		       mov     eax, [ebp+arg_8]
.text:0040138A		       mov     eax, [eax]
.text:0040138C		       test    eax, eax
.text:0040138E		       setnz   al
.text:00401391		       movzx   eax, al
.text:00401394		       leave
.text:00401395		       retn
.text:00401395 sub_401335      endp
.text:00401395
.text:00401396 ; ---------------------------------------------------------------------------
.text:00401396		       push    ebp
.text:00401397		       mov     ebp, esp
.text:00401399		       sub     esp, 30h
.text:0040139C		       mov     eax, [ebp+8]
.text:0040139F		       mov     eax, [eax]
.text:004013A1		       mov     [ebp-24h], eax
.text:004013A4		       mov     dword ptr [ebp-4], 1
.text:004013AB		       mov     dword ptr [ebp-8], 1
.text:004013B2		       jmp     loc_401517
.text:004013B7 ; ---------------------------------------------------------------------------
.text:004013B7
.text:004013B7 loc_4013B7:			       ; CODE XREF: .text:0040151Bj
.text:004013B7		       mov     eax, [ebp-24h]
.text:004013BA		       mov     [ebp-18h], eax
.text:004013BD		       mov     dword ptr [ebp-24h], 0
.text:004013C4		       lea     eax, [ebp-24h]
.text:004013C7		       mov     [ebp-10h], eax
.text:004013CA		       mov     dword ptr [ebp-4], 0
.text:004013D1		       jmp     loc_401505
.text:004013D6 ; ---------------------------------------------------------------------------
.text:004013D6
.text:004013D6 loc_4013D6:			       ; CODE XREF: .text:00401509j
.text:004013D6		       mov     eax, [ebp-18h]
.text:004013D9		       mov     [ebp-20h], eax
.text:004013DC		       mov     dword ptr [ebp-0Ch], 1
.text:004013E3		       mov     eax, [ebp-20h]
.text:004013E6		       mov     [ebp-14h], eax
.text:004013E9		       jmp     short loc_4013F8
.text:004013EB ; ---------------------------------------------------------------------------
.text:004013EB
.text:004013EB loc_4013EB:			       ; CODE XREF: .text:00401404j
.text:004013EB		       add     dword ptr [ebp-0Ch], 1
.text:004013EF		       mov     eax, [ebp-14h]
.text:004013F2		       mov     eax, [eax+4]
.text:004013F5		       mov     [ebp-14h], eax
.text:004013F8
.text:004013F8 loc_4013F8:			       ; CODE XREF: .text:004013E9j
.text:004013F8		       mov     eax, [ebp-0Ch]
.text:004013FB		       cmp     eax, [ebp-8]
.text:004013FE		       jge     short loc_401406
.text:00401400		       cmp     dword ptr [ebp-14h], 0
.text:00401404		       jnz     short loc_4013EB
.text:00401406
.text:00401406 loc_401406:			       ; CODE XREF: .text:004013FEj
.text:00401406		       cmp     dword ptr [ebp-14h], 0
.text:0040140A		       jnz     short loc_401419
.text:0040140C		       mov     edx, [ebp-10h]
.text:0040140F		       mov     eax, [ebp-20h]
.text:00401412		       mov     [edx], eax
.text:00401414		       jmp     loc_40150F
.text:00401419 ; ---------------------------------------------------------------------------
.text:00401419
.text:00401419 loc_401419:			       ; CODE XREF: .text:0040140Aj
.text:00401419		       mov     eax, [ebp-14h]
.text:0040141C		       mov     eax, [eax+4]
.text:0040141F		       mov     [ebp-1Ch], eax
.text:00401422		       mov     eax, [ebp-14h]
.text:00401425		       mov     dword ptr [eax+4], 0
.text:0040142C		       mov     dword ptr [ebp-0Ch], 1
.text:00401433		       mov     eax, [ebp-1Ch]
.text:00401436		       mov     [ebp-14h], eax
.text:00401439		       jmp     short loc_401448
.text:0040143B ; ---------------------------------------------------------------------------
.text:0040143B
.text:0040143B loc_40143B:			       ; CODE XREF: .text:00401454j
.text:0040143B		       add     dword ptr [ebp-0Ch], 1
.text:0040143F		       mov     eax, [ebp-14h]
.text:00401442		       mov     eax, [eax+4]
.text:00401445		       mov     [ebp-14h], eax
.text:00401448
.text:00401448 loc_401448:			       ; CODE XREF: .text:00401439j
.text:00401448		       mov     eax, [ebp-0Ch]
.text:0040144B		       cmp     eax, [ebp-8]
.text:0040144E		       jge     short loc_401456
.text:00401450		       cmp     dword ptr [ebp-14h], 0
.text:00401454		       jnz     short loc_40143B
.text:00401456
.text:00401456 loc_401456:			       ; CODE XREF: .text:0040144Ej
.text:00401456		       cmp     dword ptr [ebp-14h], 0
.text:0040145A		       jnz     short loc_401465
.text:0040145C		       mov     dword ptr [ebp-18h], 0
.text:00401463		       jmp     short loc_4014C4
.text:00401465 ; ---------------------------------------------------------------------------
.text:00401465
.text:00401465 loc_401465:			       ; CODE XREF: .text:0040145Aj
.text:00401465		       mov     eax, [ebp-14h]
.text:00401468		       mov     eax, [eax+4]
.text:0040146B		       mov     [ebp-18h], eax
.text:0040146E		       mov     eax, [ebp-14h]
.text:00401471		       mov     dword ptr [eax+4], 0
.text:00401478		       jmp     short loc_4014C4
.text:0040147A ; ---------------------------------------------------------------------------
.text:0040147A
.text:0040147A loc_40147A:			       ; CODE XREF: .text:004014CEj
.text:0040147A		       mov     eax, [ebp-20h]
.text:0040147D		       mov     edx, [eax]
.text:0040147F		       mov     eax, [ebp-1Ch]
.text:00401482		       mov     eax, [eax]
.text:00401484		       mov     ecx, edx
.text:00401486		       sub     ecx, eax
.text:00401488		       mov     eax, ecx
.text:0040148A		       test    eax, eax
.text:0040148C		       jns     short loc_4014AA
.text:0040148E		       mov     edx, [ebp-10h]
.text:00401491		       mov     eax, [ebp-20h]
.text:00401494		       mov     [edx], eax
.text:00401496		       mov     eax, [ebp-20h]
.text:00401499		       add     eax, 4
.text:0040149C		       mov     [ebp-10h], eax
.text:0040149F		       mov     eax, [ebp-20h]
.text:004014A2		       mov     eax, [eax+4]
.text:004014A5		       mov     [ebp-20h], eax
.text:004014A8		       jmp     short loc_4014C4
.text:004014AA ; ---------------------------------------------------------------------------
.text:004014AA
.text:004014AA loc_4014AA:			       ; CODE XREF: .text:0040148Cj
.text:004014AA		       mov     edx, [ebp-10h]
.text:004014AD		       mov     eax, [ebp-1Ch]
.text:004014B0		       mov     [edx], eax
.text:004014B2		       mov     eax, [ebp-1Ch]
.text:004014B5		       add     eax, 4
.text:004014B8		       mov     [ebp-10h], eax
.text:004014BB		       mov     eax, [ebp-1Ch]
.text:004014BE		       mov     eax, [eax+4]
.text:004014C1		       mov     [ebp-1Ch], eax
.text:004014C4
.text:004014C4 loc_4014C4:			       ; CODE XREF: .text:00401463j
.text:004014C4					       ; .text:00401478j ...
.text:004014C4		       cmp     dword ptr [ebp-20h], 0
.text:004014C8		       jz      short loc_4014D0
.text:004014CA		       cmp     dword ptr [ebp-1Ch], 0
.text:004014CE		       jnz     short loc_40147A
.text:004014D0
.text:004014D0 loc_4014D0:			       ; CODE XREF: .text:004014C8j
.text:004014D0		       cmp     dword ptr [ebp-20h], 0
.text:004014D4		       jz      short loc_4014E0
.text:004014D6		       mov     edx, [ebp-10h]
.text:004014D9		       mov     eax, [ebp-20h]
.text:004014DC		       mov     [edx], eax
.text:004014DE		       jmp     short loc_4014F5
.text:004014E0 ; ---------------------------------------------------------------------------
.text:004014E0
.text:004014E0 loc_4014E0:			       ; CODE XREF: .text:004014D4j
.text:004014E0		       mov     edx, [ebp-10h]
.text:004014E3		       mov     eax, [ebp-1Ch]
.text:004014E6		       mov     [edx], eax
.text:004014E8		       jmp     short loc_4014F5
.text:004014EA ; ---------------------------------------------------------------------------
.text:004014EA
.text:004014EA loc_4014EA:			       ; CODE XREF: .text:004014FCj
.text:004014EA		       mov     eax, [ebp-10h]
.text:004014ED		       mov     eax, [eax]
.text:004014EF		       add     eax, 4
.text:004014F2		       mov     [ebp-10h], eax
.text:004014F5
.text:004014F5 loc_4014F5:			       ; CODE XREF: .text:004014DEj
.text:004014F5					       ; .text:004014E8j
.text:004014F5		       mov     eax, [ebp-10h]
.text:004014F8		       mov     eax, [eax]
.text:004014FA		       test    eax, eax
.text:004014FC		       jnz     short loc_4014EA
.text:004014FE		       mov     dword ptr [ebp-4], 1
.text:00401505
.text:00401505 loc_401505:			       ; CODE XREF: .text:004013D1j
.text:00401505		       cmp     dword ptr [ebp-18h], 0
.text:00401509		       jnz     loc_4013D6
.text:0040150F
.text:0040150F loc_40150F:			       ; CODE XREF: .text:00401414j
.text:0040150F		       mov     eax, [ebp-8]
.text:00401512		       add     eax, eax
.text:00401514		       mov     [ebp-8],	eax
.text:00401517
.text:00401517 loc_401517:			       ; CODE XREF: .text:004013B2j
.text:00401517		       cmp     dword ptr [ebp-4], 0
.text:0040151B		       jnz     loc_4013B7
.text:00401521		       mov     edx, [ebp-24h]
.text:00401524		       mov     eax, [ebp+8]
.text:00401527		       mov     [eax], edx
.text:00401529		       leave
.text:0040152A		       retn
.text:0040152B ; ---------------------------------------------------------------------------
.text:0040152B		       push    ebp
.text:0040152C		       mov     ebp, esp
.text:0040152E		       sub     esp, 10h
.text:00401531		       mov     dword ptr [ebp-10h], 0
.text:00401538		       mov     eax, [ebp+8]
.text:0040153B		       mov     [ebp-4],	eax
.text:0040153E		       jmp     short loc_401553
.text:00401540 ; ---------------------------------------------------------------------------
.text:00401540
.text:00401540 loc_401540:			       ; CODE XREF: .text:00401557j
.text:00401540		       mov     eax, [ebp-4]
.text:00401543		       mov     eax, [eax+4]
.text:00401546		       mov     [ebp-8],	eax
.text:00401549		       add     dword ptr [ebp-10h], 1
.text:0040154D		       mov     eax, [ebp-8]
.text:00401550		       mov     [ebp-4],	eax
.text:00401553
.text:00401553 loc_401553:			       ; CODE XREF: .text:0040153Ej
.text:00401553		       cmp     dword ptr [ebp-4], 0
.text:00401557		       jnz     short loc_401540
.text:00401559		       mov     eax, [ebp-10h]
.text:0040155C		       leave
.text:0040155D		       retn
.text:0040155E ; ---------------------------------------------------------------------------
.text:0040155E		       push    ebp
.text:0040155F		       mov     ebp, esp
.text:00401561		       sub     esp, 10h
.text:00401564		       mov     eax, [ebp+8]
.text:00401567		       mov     eax, [eax]
.text:00401569		       mov     [ebp-0Ch], eax
.text:0040156C		       mov     dword ptr [ebp-4], 0
.text:00401573		       jmp     short loc_401593
.text:00401575 ; ---------------------------------------------------------------------------
.text:00401575
.text:00401575 loc_401575:			       ; CODE XREF: .text:00401597j
.text:00401575		       mov     eax, [ebp-0Ch]
.text:00401578		       mov     eax, [eax+4]
.text:0040157B		       mov     [ebp-8],	eax
.text:0040157E		       mov     edx, [ebp-0Ch]
.text:00401581		       mov     eax, [ebp-4]
.text:00401584		       mov     [edx+4],	eax
.text:00401587		       mov     eax, [ebp-0Ch]
.text:0040158A		       mov     [ebp-4],	eax
.text:0040158D		       mov     eax, [ebp-8]
.text:00401590		       mov     [ebp-0Ch], eax
.text:00401593
.text:00401593 loc_401593:			       ; CODE XREF: .text:00401573j
.text:00401593		       cmp     dword ptr [ebp-0Ch], 0
.text:00401597		       jnz     short loc_401575
.text:00401599		       mov     edx, [ebp+8]
.text:0040159C		       mov     eax, [ebp-4]
.text:0040159F		       mov     [edx], eax
.text:004015A1		       leave
.text:004015A2		       retn
.text:004015A3
.text:004015A3 ; =============== S U B R O U T I N E =======================================
.text:004015A3
.text:004015A3 ; Attributes: bp-based frame
.text:004015A3
.text:004015A3 sub_4015A3      proc near	       ; CODE XREF: .text:004015F4p
.text:004015A3					       ; sub_4018C8+58p ...
.text:004015A3
.text:004015A3 var_8	       = dword ptr -8
.text:004015A3 arg_0	       = dword ptr  8
.text:004015A3 arg_4	       = dword ptr  0Ch
.text:004015A3 arg_8	       = dword ptr  10h
.text:004015A3 arg_C	       = dword ptr  14h
.text:004015A3
.text:004015A3		       push    ebp
.text:004015A4		       mov     ebp, esp
.text:004015A6		       sub     esp, 8
.text:004015A9		       mov     edx, [ebp+arg_0]
.text:004015AC		       mov     eax, [ebp+arg_8]
.text:004015AF		       mov     [edx+8],	eax
.text:004015B2		       mov     edx, [ebp+arg_0]
.text:004015B5		       mov     eax, [ebp+arg_C]
.text:004015B8		       mov     [edx+0Ch], eax
.text:004015BB		       mov     edx, [ebp+arg_0]
.text:004015BE		       mov     eax, [ebp+arg_4]
.text:004015C1		       mov     [edx+4],	eax
.text:004015C4		       mov     eax, [ebp+arg_0]
.text:004015C7		       mov     [esp+8+var_8], eax
.text:004015CA		       call    sub_401605
.text:004015CF		       leave
.text:004015D0		       retn
.text:004015D0 sub_4015A3      endp
.text:004015D0
.text:004015D1 ; ---------------------------------------------------------------------------
.text:004015D1		       push    ebp
.text:004015D2		       mov     ebp, esp
.text:004015D4		       sub     esp, 18h
.text:004015D7		       mov     dword ptr [esp+0Ch], 0
.text:004015DF		       mov     dword ptr [esp+8], 0
.text:004015E7		       mov     eax, [ebp+0Ch]
.text:004015EA		       mov     [esp+4],	eax
.text:004015EE		       mov     eax, [ebp+8]
.text:004015F1		       mov     [esp], eax
.text:004015F4		       call    sub_4015A3
.text:004015F9		       leave
.text:004015FA		       retn
.text:004015FB
.text:004015FB ; =============== S U B R O U T I N E =======================================
.text:004015FB
.text:004015FB ; Attributes: bp-based frame
.text:004015FB
.text:004015FB sub_4015FB      proc near	       ; CODE XREF: .text:0040197Bp
.text:004015FB
.text:004015FB arg_0	       = dword ptr  8
.text:004015FB
.text:004015FB		       push    ebp
.text:004015FC		       mov     ebp, esp
.text:004015FE		       mov     eax, [ebp+arg_0]
.text:00401601		       mov     eax, [eax]
.text:00401603		       pop     ebp
.text:00401604		       retn
.text:00401604 sub_4015FB      endp
.text:00401604
.text:00401605
.text:00401605 ; =============== S U B R O U T I N E =======================================
.text:00401605
.text:00401605 ; Attributes: bp-based frame
.text:00401605
.text:00401605 sub_401605      proc near	       ; CODE XREF: sub_4015A3+27p
.text:00401605					       ; sub_401982+Dp
.text:00401605
.text:00401605 var_18	       = dword ptr -18h
.text:00401605 var_14	       = dword ptr -14h
.text:00401605 var_C	       = dword ptr -0Ch
.text:00401605 var_8	       = dword ptr -8
.text:00401605 var_4	       = dword ptr -4
.text:00401605 arg_0	       = dword ptr  8
.text:00401605
.text:00401605		       push    ebp
.text:00401606		       mov     ebp, esp
.text:00401608		       sub     esp, 18h
.text:0040160B		       mov     eax, [ebp+arg_0]
.text:0040160E		       mov     eax, [eax+4]
.text:00401611		       mov     [ebp+var_C], eax
.text:00401614		       mov     eax, [ebp+arg_0]
.text:00401617		       mov     dword ptr [eax+4], 0
.text:0040161E		       mov     eax, [ebp+arg_0]
.text:00401621		       mov     eax, [eax+8]
.text:00401624		       test    eax, eax
.text:00401626		       jz      short loc_401661
.text:00401628		       mov     eax, [ebp+arg_0]
.text:0040162B		       mov     eax, [eax+0Ch]
.text:0040162E		       mov     [ebp+var_8], eax
.text:00401631		       mov     eax, [ebp+arg_0]
.text:00401634		       mov     eax, [eax+8]
.text:00401637		       mov     [ebp+var_4], eax
.text:0040163A		       jmp     short loc_401645
.text:0040163C ; ---------------------------------------------------------------------------
.text:0040163C
.text:0040163C loc_40163C:			       ; CODE XREF: sub_401605+5Aj
.text:0040163C		       mov     eax, [ebp+var_C]
.text:0040163F		       mov     eax, [eax+4]
.text:00401642		       mov     [ebp+var_C], eax
.text:00401645
.text:00401645 loc_401645:			       ; CODE XREF: sub_401605+35j
.text:00401645		       cmp     [ebp+var_C], 0
.text:00401649		       jz      short loc_401661
.text:0040164B		       mov     eax, [ebp+var_8]
.text:0040164E		       mov     [esp+18h+var_14], eax
.text:00401652		       mov     eax, [ebp+var_C]
.text:00401655		       mov     [esp+18h+var_18], eax
.text:00401658		       mov     eax, [ebp+var_4]
.text:0040165B		       call    eax
.text:0040165D		       test    eax, eax
.text:0040165F		       jnz     short loc_40163C
.text:00401661
.text:00401661 loc_401661:			       ; CODE XREF: sub_401605+21j
.text:00401661					       ; sub_401605+44j
.text:00401661		       mov     edx, [ebp+arg_0]
.text:00401664		       mov     eax, [ebp+var_C]
.text:00401667		       mov     [edx], eax
.text:00401669		       cmp     [ebp+var_C], 0
.text:0040166D		       jz      short loc_40167B
.text:0040166F		       mov     eax, [ebp+var_C]
.text:00401672		       mov     edx, [eax+4]
.text:00401675		       mov     eax, [ebp+arg_0]
.text:00401678		       mov     [eax+4],	edx
.text:0040167B
.text:0040167B loc_40167B:			       ; CODE XREF: sub_401605+68j
.text:0040167B		       mov     eax, [ebp+var_C]
.text:0040167E		       leave
.text:0040167F		       retn
.text:0040167F sub_401605      endp
.text:0040167F
.text:00401680
.text:00401680 ; =============== S U B R O U T I N E =======================================
.text:00401680
.text:00401680 ; Attributes: bp-based frame
.text:00401680
.text:00401680 sub_401680      proc near	       ; CODE XREF: sub_4019FC+20p
.text:00401680
.text:00401680 var_4	       = dword ptr -4
.text:00401680 arg_0	       = dword ptr  8
.text:00401680
.text:00401680		       push    ebp
.text:00401681		       mov     ebp, esp
.text:00401683		       sub     esp, 10h
.text:00401686		       mov     [ebp+var_4], 0
.text:0040168D		       jmp     short loc_4016A2
.text:0040168F ; ---------------------------------------------------------------------------
.text:0040168F
.text:0040168F loc_40168F:			       ; CODE XREF: sub_401680+26j
.text:0040168F		       mov     eax, [ebp+var_4]
.text:00401692		       shl     eax, 2
.text:00401695		       add     eax, [ebp+arg_0]
.text:00401698		       mov     dword ptr [eax],	0
.text:0040169E		       add     [ebp+var_4], 1
.text:004016A2
.text:004016A2 loc_4016A2:			       ; CODE XREF: sub_401680+Dj
.text:004016A2		       cmp     [ebp+var_4], 9
.text:004016A6		       jbe     short loc_40168F
.text:004016A8		       leave
.text:004016A9		       retn
.text:004016A9 sub_401680      endp
.text:004016A9
.text:004016AA
.text:004016AA ; =============== S U B R O U T I N E =======================================
.text:004016AA
.text:004016AA ; Attributes: bp-based frame
.text:004016AA
.text:004016AA sub_4016AA      proc near	       ; CODE XREF: sub_4019FC+95p
.text:004016AA
.text:004016AA var_1C	       = dword ptr -1Ch
.text:004016AA var_18	       = dword ptr -18h
.text:004016AA var_14	       = dword ptr -14h
.text:004016AA var_4	       = dword ptr -4
.text:004016AA arg_0	       = dword ptr  8
.text:004016AA arg_4	       = dword ptr  0Ch
.text:004016AA
.text:004016AA		       push    ebp
.text:004016AB		       mov     ebp, esp
.text:004016AD		       sub     esp, 1Ch
.text:004016B0		       mov     eax, [ebp+arg_4]
.text:004016B3		       mov     [esp+1Ch+var_1C], eax
.text:004016B6		       call    sub_4011A0
.text:004016BB		       mov     ecx, eax
.text:004016BD		       mov     [ebp+var_14], 0CCCCCCCDh
.text:004016C4		       mov     eax, [ebp+var_14]
.text:004016C7		       mul     ecx
.text:004016C9		       mov     eax, edx
.text:004016CB		       shr     eax, 3
.text:004016CE		       mov     [ebp+var_4], eax
.text:004016D1		       mov     edx, [ebp+var_4]
.text:004016D4		       mov     eax, edx
.text:004016D6		       shl     eax, 2
.text:004016D9		       add     eax, edx
.text:004016DB		       add     eax, eax
.text:004016DD		       mov     edx, ecx
.text:004016DF		       sub     edx, eax
.text:004016E1		       mov     eax, edx
.text:004016E3		       mov     [ebp+var_4], eax
.text:004016E6		       mov     eax, [ebp+var_4]
.text:004016E9		       shl     eax, 2
.text:004016EC		       mov     edx, eax
.text:004016EE		       add     edx, [ebp+arg_0]
.text:004016F1		       mov     eax, [ebp+arg_4]
.text:004016F4		       mov     [esp+1Ch+var_18], eax
.text:004016F8		       mov     [esp+1Ch+var_1C], edx
.text:004016FB		       call    sub_401274
.text:00401700		       leave
.text:00401701		       retn
.text:00401701 sub_4016AA      endp
.text:00401701
.text:00401702 ; ---------------------------------------------------------------------------
.text:00401702		       push    ebp
.text:00401703		       mov     ebp, esp
.text:00401705		       sub     esp, 20h
.text:00401708		       mov     eax, [ebp+0Ch]
.text:0040170B		       mov     [esp], eax
.text:0040170E		       call    sub_4011A0
.text:00401713		       mov     ecx, eax
.text:00401715		       mov     dword ptr [ebp-14h], 0CCCCCCCDh
.text:0040171C		       mov     eax, [ebp-14h]
.text:0040171F		       mul     ecx
.text:00401721		       mov     eax, edx
.text:00401723		       shr     eax, 3
.text:00401726		       mov     [ebp-4],	eax
.text:00401729		       mov     edx, [ebp-4]
.text:0040172C		       mov     eax, edx
.text:0040172E		       shl     eax, 2
.text:00401731		       add     eax, edx
.text:00401733		       add     eax, eax
.text:00401735		       mov     edx, ecx
.text:00401737		       sub     edx, eax
.text:00401739		       mov     eax, edx
.text:0040173B		       mov     [ebp-4],	eax
.text:0040173E		       mov     eax, [ebp-4]
.text:00401741		       shl     eax, 2
.text:00401744		       mov     edx, eax
.text:00401746		       add     edx, [ebp+8]
.text:00401749		       mov     eax, [ebp+10h]
.text:0040174C		       mov     [esp+8],	eax
.text:00401750		       mov     eax, [ebp+0Ch]
.text:00401753		       mov     [esp+4],	eax
.text:00401757		       mov     [esp], edx
.text:0040175A		       call    sub_401217
.text:0040175F		       leave
.text:00401760		       retn
.text:00401761 ; ---------------------------------------------------------------------------
.text:00401761		       push    ebp
.text:00401762		       mov     ebp, esp
.text:00401764		       sub     esp, 28h
.text:00401767		       mov     eax, [ebp+0Ch]
.text:0040176A		       mov     [esp], eax
.text:0040176D		       call    sub_4011A0
.text:00401772		       mov     ecx, eax
.text:00401774		       mov     dword ptr [ebp-14h], 0CCCCCCCDh
.text:0040177B		       mov     eax, [ebp-14h]
.text:0040177E		       mul     ecx
.text:00401780		       mov     eax, edx
.text:00401782		       shr     eax, 3
.text:00401785		       mov     [ebp-4],	eax
.text:00401788		       mov     edx, [ebp-4]
.text:0040178B		       mov     eax, edx
.text:0040178D		       shl     eax, 2
.text:00401790		       add     eax, edx
.text:00401792		       add     eax, eax
.text:00401794		       mov     edx, ecx
.text:00401796		       sub     edx, eax
.text:00401798		       mov     eax, edx
.text:0040179A		       mov     [ebp-4],	eax
.text:0040179D		       mov     eax, [ebp-4]
.text:004017A0		       shl     eax, 2
.text:004017A3		       mov     edx, eax
.text:004017A5		       add     edx, [ebp+8]
.text:004017A8		       mov     eax, [ebp+0Ch]
.text:004017AB		       mov     [esp+4],	eax
.text:004017AF		       mov     [esp], edx
.text:004017B2		       call    sub_4012CD
.text:004017B7		       leave
.text:004017B8		       retn
.text:004017B9 ; ---------------------------------------------------------------------------
.text:004017B9		       push    ebp
.text:004017BA		       mov     ebp, esp
.text:004017BC		       sub     esp, 20h
.text:004017BF		       mov     eax, [ebp+0Ch]
.text:004017C2		       mov     [esp], eax
.text:004017C5		       call    sub_4011A0
.text:004017CA		       mov     ecx, eax
.text:004017CC		       mov     dword ptr [ebp-14h], 0CCCCCCCDh
.text:004017D3		       mov     eax, [ebp-14h]
.text:004017D6		       mul     ecx
.text:004017D8		       mov     eax, edx
.text:004017DA		       shr     eax, 3
.text:004017DD		       mov     [ebp-4],	eax
.text:004017E0		       mov     edx, [ebp-4]
.text:004017E3		       mov     eax, edx
.text:004017E5		       shl     eax, 2
.text:004017E8		       add     eax, edx
.text:004017EA		       add     eax, eax
.text:004017EC		       mov     edx, ecx
.text:004017EE		       sub     edx, eax
.text:004017F0		       mov     eax, edx
.text:004017F2		       mov     [ebp-4],	eax
.text:004017F5		       mov     eax, [ebp-4]
.text:004017F8		       shl     eax, 2
.text:004017FB		       mov     edx, eax
.text:004017FD		       add     edx, [ebp+8]
.text:00401800		       mov     eax, [ebp+10h]
.text:00401803		       mov     [esp+8],	eax
.text:00401807		       mov     eax, [ebp+0Ch]
.text:0040180A		       mov     [esp+4],	eax
.text:0040180E		       mov     [esp], edx
.text:00401811		       call    sub_401335
.text:00401816		       leave
.text:00401817		       retn
.text:00401818 ; ---------------------------------------------------------------------------
.text:00401818		       push    ebp
.text:00401819		       mov     ebp, esp
.text:0040181B		       sub     esp, 1Ch
.text:0040181E		       mov     eax, [ebp+0Ch]
.text:00401821		       mov     [esp], eax
.text:00401824		       call    sub_4011A0
.text:00401829		       mov     ecx, eax
.text:0040182B		       mov     dword ptr [ebp-14h], 0CCCCCCCDh
.text:00401832		       mov     eax, [ebp-14h]
.text:00401835		       mul     ecx
.text:00401837		       mov     eax, edx
.text:00401839		       shr     eax, 3
.text:0040183C		       mov     [ebp-4],	eax
.text:0040183F		       mov     edx, [ebp-4]
.text:00401842		       mov     eax, edx
.text:00401844		       shl     eax, 2
.text:00401847		       add     eax, edx
.text:00401849		       add     eax, eax
.text:0040184B		       mov     edx, ecx
.text:0040184D		       sub     edx, eax
.text:0040184F		       mov     eax, edx
.text:00401851		       mov     [ebp-4],	eax
.text:00401854		       mov     eax, [ebp-4]
.text:00401857		       shl     eax, 2
.text:0040185A		       add     eax, [ebp+8]
.text:0040185D		       mov     edx, [eax]
.text:0040185F		       mov     eax, [ebp+0Ch]
.text:00401862		       mov     [esp+4],	eax
.text:00401866		       mov     [esp], edx
.text:00401869		       call    sub_4011AA
.text:0040186E		       leave
.text:0040186F		       retn
.text:00401870
.text:00401870 ; =============== S U B R O U T I N E =======================================
.text:00401870
.text:00401870 ; Attributes: bp-based frame
.text:00401870
.text:00401870 sub_401870      proc near	       ; CODE XREF: sub_4019FC+67p
.text:00401870
.text:00401870 var_1C	       = dword ptr -1Ch
.text:00401870 var_18	       = dword ptr -18h
.text:00401870 var_14	       = dword ptr -14h
.text:00401870 var_4	       = dword ptr -4
.text:00401870 arg_0	       = dword ptr  8
.text:00401870 arg_4	       = dword ptr  0Ch
.text:00401870
.text:00401870		       push    ebp
.text:00401871		       mov     ebp, esp
.text:00401873		       sub     esp, 1Ch
.text:00401876		       mov     eax, [ebp+arg_4]
.text:00401879		       mov     [esp+1Ch+var_1C], eax
.text:0040187C		       call    sub_4011A0
.text:00401881		       mov     ecx, eax
.text:00401883		       mov     [ebp+var_14], 0CCCCCCCDh
.text:0040188A		       mov     eax, [ebp+var_14]
.text:0040188D		       mul     ecx
.text:0040188F		       mov     eax, edx
.text:00401891		       shr     eax, 3
.text:00401894		       mov     [ebp+var_4], eax
.text:00401897		       mov     edx, [ebp+var_4]
.text:0040189A		       mov     eax, edx
.text:0040189C		       shl     eax, 2
.text:0040189F		       add     eax, edx
.text:004018A1		       add     eax, eax
.text:004018A3		       mov     edx, ecx
.text:004018A5		       sub     edx, eax
.text:004018A7		       mov     eax, edx
.text:004018A9		       mov     [ebp+var_4], eax
.text:004018AC		       mov     eax, [ebp+var_4]
.text:004018AF		       shl     eax, 2
.text:004018B2		       add     eax, [ebp+arg_0]
.text:004018B5		       mov     edx, [eax]
.text:004018B7		       mov     eax, [ebp+arg_4]
.text:004018BA		       mov     [esp+1Ch+var_18], eax
.text:004018BE		       mov     [esp+1Ch+var_1C], edx
.text:004018C1		       call    sub_4011E1
.text:004018C6		       leave
.text:004018C7		       retn
.text:004018C7 sub_401870      endp
.text:004018C7
.text:004018C8
.text:004018C8 ; =============== S U B R O U T I N E =======================================
.text:004018C8
.text:004018C8 ; Attributes: bp-based frame
.text:004018C8
.text:004018C8 sub_4018C8      proc near	       ; CODE XREF: sub_401945+23p
.text:004018C8
.text:004018C8 var_28	       = dword ptr -28h
.text:004018C8 var_24	       = dword ptr -24h
.text:004018C8 var_20	       = dword ptr -20h
.text:004018C8 var_1C	       = dword ptr -1Ch
.text:004018C8 var_8	       = dword ptr -8
.text:004018C8 arg_0	       = dword ptr  8
.text:004018C8 arg_4	       = dword ptr  0Ch
.text:004018C8 arg_8	       = dword ptr  10h
.text:004018C8 arg_C	       = dword ptr  14h
.text:004018C8
.text:004018C8		       push    ebp
.text:004018C9		       mov     ebp, esp
.text:004018CB		       push    ebx
.text:004018CC		       sub     esp, 24h
.text:004018CF		       mov     edx, [ebp+arg_0]
.text:004018D2		       mov     eax, [ebp+arg_4]
.text:004018D5		       mov     [edx+10h], eax
.text:004018D8		       mov     eax, [ebp+arg_0]
.text:004018DB		       mov     dword ptr [eax+14h], 0
.text:004018E2		       mov     edx, [ebp+arg_0]
.text:004018E5		       mov     eax, [ebp+arg_8]
.text:004018E8		       mov     [edx+18h], eax
.text:004018EB		       mov     edx, [ebp+arg_0]
.text:004018EE		       mov     eax, [ebp+arg_C]
.text:004018F1		       mov     [edx+1Ch], eax
.text:004018F4		       mov     eax, [ebp+arg_0]
.text:004018F7		       mov     ecx, [eax+1Ch]
.text:004018FA		       mov     eax, [ebp+arg_0]
.text:004018FD		       mov     ebx, [eax+18h]
.text:00401900		       mov     eax, [ebp+arg_0]
.text:00401903		       mov     eax, [eax+14h]
.text:00401906		       shl     eax, 2
.text:00401909		       add     eax, [ebp+arg_4]
.text:0040190C		       mov     eax, [eax]
.text:0040190E		       mov     edx, [ebp+arg_0]
.text:00401911		       mov     [esp+28h+var_1C], ecx
.text:00401915		       mov     [esp+28h+var_20], ebx
.text:00401919		       mov     [esp+28h+var_24], eax
.text:0040191D		       mov     [esp+28h+var_28], edx
.text:00401920		       call    sub_4015A3
.text:00401925		       mov     [ebp+var_8], eax
.text:00401928		       cmp     [ebp+var_8], 0
.text:0040192C		       jnz     short loc_40193C
.text:0040192E		       mov     eax, [ebp+arg_0]
.text:00401931		       mov     [esp+28h+var_28], eax
.text:00401934		       call    sub_401982
.text:00401939		       mov     [ebp+var_8], eax
.text:0040193C
.text:0040193C loc_40193C:			       ; CODE XREF: sub_4018C8+64j
.text:0040193C		       mov     eax, [ebp+var_8]
.text:0040193F		       add     esp, 24h
.text:00401942		       pop     ebx
.text:00401943		       pop     ebp
.text:00401944		       retn
.text:00401944 sub_4018C8      endp
.text:00401944
.text:00401945
.text:00401945 ; =============== S U B R O U T I N E =======================================
.text:00401945
.text:00401945 ; Attributes: bp-based frame
.text:00401945
.text:00401945 sub_401945      proc near	       ; CODE XREF: sub_4019FC+B6p
.text:00401945					       ; sub_4019FC+103p
.text:00401945
.text:00401945 var_18	       = dword ptr -18h
.text:00401945 var_14	       = dword ptr -14h
.text:00401945 var_10	       = dword ptr -10h
.text:00401945 var_C	       = dword ptr -0Ch
.text:00401945 arg_0	       = dword ptr  8
.text:00401945 arg_4	       = dword ptr  0Ch
.text:00401945
.text:00401945		       push    ebp
.text:00401946		       mov     ebp, esp
.text:00401948		       sub     esp, 18h
.text:0040194B		       mov     [esp+18h+var_C],	0
.text:00401953		       mov     [esp+18h+var_10], 0
.text:0040195B		       mov     eax, [ebp+arg_4]
.text:0040195E		       mov     [esp+18h+var_14], eax
.text:00401962		       mov     eax, [ebp+arg_0]
.text:00401965		       mov     [esp+18h+var_18], eax
.text:00401968		       call    sub_4018C8
.text:0040196D		       leave
.text:0040196E		       retn
.text:0040196E sub_401945      endp
.text:0040196E
.text:0040196F ; ---------------------------------------------------------------------------
.text:0040196F		       push    ebp
.text:00401970		       mov     ebp, esp
.text:00401972		       sub     esp, 4
.text:00401975		       mov     eax, [ebp+8]
.text:00401978		       mov     [esp], eax
.text:0040197B		       call    sub_4015FB
.text:00401980		       leave
.text:00401981		       retn
.text:00401982
.text:00401982 ; =============== S U B R O U T I N E =======================================
.text:00401982
.text:00401982 ; Attributes: bp-based frame
.text:00401982
.text:00401982 sub_401982      proc near	       ; CODE XREF: sub_4018C8+6Cp
.text:00401982					       ; sub_4019FC+DBp ...
.text:00401982
.text:00401982 var_28	       = dword ptr -28h
.text:00401982 var_24	       = dword ptr -24h
.text:00401982 var_20	       = dword ptr -20h
.text:00401982 var_1C	       = dword ptr -1Ch
.text:00401982 var_8	       = dword ptr -8
.text:00401982 arg_0	       = dword ptr  8
.text:00401982
.text:00401982		       push    ebp
.text:00401983		       mov     ebp, esp
.text:00401985		       push    ebx
.text:00401986		       sub     esp, 24h
.text:00401989		       mov     eax, [ebp+arg_0]
.text:0040198C		       mov     [esp+28h+var_28], eax
.text:0040198F		       call    sub_401605
.text:00401994		       mov     [ebp+var_8], eax
.text:00401997		       jmp     short loc_4019D3
.text:00401999 ; ---------------------------------------------------------------------------
.text:00401999
.text:00401999 loc_401999:			       ; CODE XREF: sub_401982+6Fj
.text:00401999		       mov     eax, [ebp+arg_0]
.text:0040199C		       mov     ecx, [eax+1Ch]
.text:0040199F		       mov     eax, [ebp+arg_0]
.text:004019A2		       mov     ebx, [eax+18h]
.text:004019A5		       mov     eax, [ebp+arg_0]
.text:004019A8		       mov     edx, [eax+10h]
.text:004019AB		       mov     eax, [ebp+arg_0]
.text:004019AE		       mov     eax, [eax+14h]
.text:004019B1		       shl     eax, 2
.text:004019B4		       lea     eax, [edx+eax]
.text:004019B7		       mov     eax, [eax]
.text:004019B9		       mov     edx, [ebp+arg_0]
.text:004019BC		       mov     [esp+28h+var_1C], ecx
.text:004019C0		       mov     [esp+28h+var_20], ebx
.text:004019C4		       mov     [esp+28h+var_24], eax
.text:004019C8		       mov     [esp+28h+var_28], edx
.text:004019CB		       call    sub_4015A3
.text:004019D0		       mov     [ebp+var_8], eax
.text:004019D3
.text:004019D3 loc_4019D3:			       ; CODE XREF: sub_401982+15j
.text:004019D3		       cmp     [ebp+var_8], 0
.text:004019D7		       jnz     short loc_4019F3
.text:004019D9		       mov     eax, [ebp+arg_0]
.text:004019DC		       mov     eax, [eax+14h]
.text:004019DF		       lea     edx, [eax+1]
.text:004019E2		       mov     eax, [ebp+arg_0]
.text:004019E5		       mov     [eax+14h], edx
.text:004019E8		       mov     eax, [ebp+arg_0]
.text:004019EB		       mov     eax, [eax+14h]
.text:004019EE		       cmp     eax, 9
.text:004019F1		       jle     short loc_401999
.text:004019F3
.text:004019F3 loc_4019F3:			       ; CODE XREF: sub_401982+55j
.text:004019F3		       mov     eax, [ebp+var_8]
.text:004019F6		       add     esp, 24h
.text:004019F9		       pop     ebx
.text:004019FA		       pop     ebp
.text:004019FB		       retn
.text:004019FB sub_401982      endp
.text:004019FB
.text:004019FC
.text:004019FC ; =============== S U B R O U T I N E =======================================
.text:004019FC
.text:004019FC
.text:004019FC sub_4019FC      proc near	       ; DATA XREF: start+27o
.text:004019FC
.text:004019FC var_5C	       = dword ptr -5Ch
.text:004019FC var_58	       = dword ptr -58h
.text:004019FC var_54	       = dword ptr -54h
.text:004019FC arg_0	       = byte ptr  4
.text:004019FC
.text:004019FC		       lea     ecx, [esp+arg_0]
.text:00401A00		       and     esp, 0FFFFFFF0h
.text:00401A03		       push    dword ptr [ecx-4]
.text:00401A06		       push    ebp
.text:00401A07		       mov     ebp, esp
.text:00401A09		       push    ecx
.text:00401A0A		       sub     esp, 54h
.text:00401A0D		       mov     [ebp-48h], ecx
.text:00401A10		       call    __main
.text:00401A15		       mov     [esp+5Ch+var_5C], offset	dword_405120
.text:00401A1C		       call    sub_401680
.text:00401A21		       mov     dword ptr [ebp-18h], 1
.text:00401A28		       jmp     short loc_401A9A
.text:00401A2A ; ---------------------------------------------------------------------------
.text:00401A2A
.text:00401A2A loc_401A2A:			       ; CODE XREF: sub_4019FC+A6j
.text:00401A2A		       mov     eax, [ebp-18h]
.text:00401A2D		       shl     eax, 2
.text:00401A30		       mov     edx, [ebp-48h]
.text:00401A33		       add     eax, [edx+4]
.text:00401A36		       mov     edx, [eax]
.text:00401A38		       lea     eax, [ebp-1Ch]
.text:00401A3B		       mov     [esp+5Ch+var_54], eax
.text:00401A3F		       mov     [esp+5Ch+var_58], offset	aD ; "%d"
.text:00401A47		       mov     [esp+5Ch+var_5C], edx
.text:00401A4A		       call    sscanf
.text:00401A4F		       mov     eax, [ebp-1Ch]
.text:00401A52		       mov     [ebp-24h], eax
.text:00401A55		       lea     eax, [ebp-24h]
.text:00401A58		       mov     [esp+5Ch+var_58], eax
.text:00401A5C		       mov     [esp+5Ch+var_5C], offset	dword_405120
.text:00401A63		       call    sub_401870
.text:00401A68		       test    eax, eax
.text:00401A6A		       jnz     short loc_401A96
.text:00401A6C		       mov     [esp+5Ch+var_5C], 8
.text:00401A73		       call    malloc
.text:00401A78		       mov     [ebp-0Ch], eax
.text:00401A7B		       mov     edx, [ebp-1Ch]
.text:00401A7E		       mov     eax, [ebp-0Ch]
.text:00401A81		       mov     [eax], edx
.text:00401A83		       mov     eax, [ebp-0Ch]
.text:00401A86		       mov     [esp+5Ch+var_58], eax
.text:00401A8A		       mov     [esp+5Ch+var_5C], offset	dword_405120
.text:00401A91		       call    sub_4016AA
.text:00401A96
.text:00401A96 loc_401A96:			       ; CODE XREF: sub_4019FC+6Ej
.text:00401A96		       add     dword ptr [ebp-18h], 1
.text:00401A9A
.text:00401A9A loc_401A9A:			       ; CODE XREF: sub_4019FC+2Cj
.text:00401A9A		       mov     eax, [ebp-18h]
.text:00401A9D		       mov     edx, [ebp-48h]
.text:00401AA0		       cmp     eax, [edx]
.text:00401AA2		       jl      short loc_401A2A
.text:00401AA4		       mov     [esp+5Ch+var_58], offset	dword_405120
.text:00401AAC		       lea     eax, [ebp-44h]
.text:00401AAF		       mov     [esp+5Ch+var_5C], eax
.text:00401AB2		       call    sub_401945
.text:00401AB7		       mov     [ebp-8],	eax
.text:00401ABA		       jmp     short loc_401ADF
.text:00401ABC ; ---------------------------------------------------------------------------
.text:00401ABC
.text:00401ABC loc_401ABC:			       ; CODE XREF: sub_4019FC+E7j
.text:00401ABC		       mov     eax, [ebp-8]
.text:00401ABF		       mov     eax, [eax]
.text:00401AC1		       mov     [esp+5Ch+var_58], eax
.text:00401AC5		       mov     [esp+5Ch+var_5C], offset	aD_0 ; "%d "
.text:00401ACC		       call    printf
.text:00401AD1		       lea     eax, [ebp-44h]
.text:00401AD4		       mov     [esp+5Ch+var_5C], eax
.text:00401AD7		       call    sub_401982
.text:00401ADC		       mov     [ebp-8],	eax
.text:00401ADF
.text:00401ADF loc_401ADF:			       ; CODE XREF: sub_4019FC+BEj
.text:00401ADF		       cmp     dword ptr [ebp-8], 0
.text:00401AE3		       jnz     short loc_401ABC
.text:00401AE5		       mov     [esp+5Ch+var_5C], 0Ah
.text:00401AEC		       call    putchar
.text:00401AF1		       mov     [esp+5Ch+var_58], offset	dword_405120
.text:00401AF9		       lea     eax, [ebp-44h]
.text:00401AFC		       mov     [esp+5Ch+var_5C], eax
.text:00401AFF		       call    sub_401945
.text:00401B04		       mov     [ebp-8],	eax
.text:00401B07		       jmp     short loc_401B22
.text:00401B09 ; ---------------------------------------------------------------------------
.text:00401B09
.text:00401B09 loc_401B09:			       ; CODE XREF: sub_4019FC+12Aj
.text:00401B09		       mov     eax, [ebp-8]
.text:00401B0C		       mov     [esp+5Ch+var_5C], eax
.text:00401B0F		       call    free
.text:00401B14		       lea     eax, [ebp-44h]
.text:00401B17		       mov     [esp+5Ch+var_5C], eax
.text:00401B1A		       call    sub_401982
.text:00401B1F		       mov     [ebp-8],	eax
.text:00401B22
.text:00401B22 loc_401B22:			       ; CODE XREF: sub_4019FC+10Bj
.text:00401B22		       cmp     dword ptr [ebp-8], 0
.text:00401B26		       jnz     short loc_401B09
.text:00401B28		       mov     eax, 0
.text:00401B2D		       add     esp, 54h
.text:00401B30		       pop     ecx
.text:00401B31		       pop     ebp
.text:00401B32		       lea     esp, [ecx-4]
.text:00401B35		       retn
.text:00401B35 sub_4019FC      endp
.text:00401B35
.text:00401B35 ; ---------------------------------------------------------------------------
.text:00401B36		       align 4
.text:00401B38 ; [00000006 BYTES: COLLAPSED FUNCTION __deregister_frame_info. PRESS KEYPAD "+" TO EXPAND]
.text:00401B3E		       align 10h
.text:00401B40 ; [00000006 BYTES: COLLAPSED FUNCTION __register_frame_info. PRESS KEYPAD "+" TO	EXPAND]
.text:00401B46		       align 10h
.text:00401B50
.text:00401B50 ; =============== S U B R O U T I N E =======================================
.text:00401B50
.text:00401B50 ; Attributes: bp-based frame
.text:00401B50
.text:00401B50 sub_401B50      proc near	       ; CODE XREF: start+2Ep
.text:00401B50
.text:00401B50 var_8	       = dword ptr -8
.text:00401B50 var_4	       = dword ptr -4
.text:00401B50 arg_0	       = dword ptr  8
.text:00401B50
.text:00401B50		       push    ebp
.text:00401B51		       mov     ebp, esp
.text:00401B53		       sub     esp, 8
.text:00401B56		       mov     eax, [ebp+arg_0]
.text:00401B59		       mov     [esp+8+var_4], 0
.text:00401B61		       mov     [esp+8+var_8], eax
.text:00401B64		       call    sub_401C00
.text:00401B69		       sub     esp, 8
.text:00401B6C		       call    ds:_dll_crt0@0  ; dll_crt0()
.text:00401B72		       nop
.text:00401B73		       nop
.text:00401B74		       nop
.text:00401B75		       nop
.text:00401B76		       nop
.text:00401B77		       nop
.text:00401B78		       nop
.text:00401B79		       nop
.text:00401B7A		       nop
.text:00401B7B		       nop
.text:00401B7C		       nop
.text:00401B7D		       nop
.text:00401B7E		       nop
.text:00401B7F		       nop
.text:00401B7F sub_401B50      endp ; sp-analysis failed
.text:00401B7F
.text:00401B80
.text:00401B80 ; =============== S U B R O U T I N E =======================================
.text:00401B80
.text:00401B80 ; Attributes: bp-based frame
.text:00401B80
.text:00401B80 sub_401B80      proc near	       ; CODE XREF: start+4Ap
.text:00401B80					       ; DATA XREF: sub_401C00+72o ...
.text:00401B80		       push    ebp
.text:00401B81		       mov     ebp, esp
.text:00401B83		       pop     ebp
.text:00401B84		       retn
.text:00401B84 sub_401B80      endp
.text:00401B84
.text:00401B84 ; ---------------------------------------------------------------------------
.text:00401B85		       align 10h
.text:00401B90
.text:00401B90 ; =============== S U B R O U T I N E =======================================
.text:00401B90
.text:00401B90 ; Attributes: bp-based frame
.text:00401B90
.text:00401B90 sub_401B90      proc near	       ; CODE XREF: start+66p
.text:00401B90					       ; DATA XREF: sub_401C00+79o ...
.text:00401B90		       push    ebp
.text:00401B91		       mov     ebp, esp
.text:00401B93		       pop     ebp
.text:00401B94		       retn
.text:00401B94 sub_401B90      endp
.text:00401B94
.text:00401B94 ; ---------------------------------------------------------------------------
.text:00401B95		       align 10h
.text:00401BA0
.text:00401BA0 ; =============== S U B R O U T I N E =======================================
.text:00401BA0
.text:00401BA0 ; Attributes: bp-based frame
.text:00401BA0
.text:00401BA0 sub_401BA0      proc near	       ; CODE XREF: start+82p
.text:00401BA0					       ; DATA XREF: sub_401C00+80o ...
.text:00401BA0		       push    ebp
.text:00401BA1		       mov     ebp, esp
.text:00401BA3		       pop     ebp
.text:00401BA4		       retn
.text:00401BA4 sub_401BA0      endp
.text:00401BA4
.text:00401BA4 ; ---------------------------------------------------------------------------
.text:00401BA5		       align 10h
.text:00401BB0
.text:00401BB0 ; =============== S U B R O U T I N E =======================================
.text:00401BB0
.text:00401BB0 ; Attributes: bp-based frame
.text:00401BB0
.text:00401BB0 sub_401BB0      proc near	       ; CODE XREF: start+9Ep
.text:00401BB0					       ; DATA XREF: sub_401C00+87o ...
.text:00401BB0		       push    ebp
.text:00401BB1		       mov     ebp, esp
.text:00401BB3		       pop     ebp
.text:00401BB4		       retn
.text:00401BB4 sub_401BB0      endp
.text:00401BB4
.text:00401BB4 ; ---------------------------------------------------------------------------
.text:00401BB5		       align 10h
.text:00401BC0 ; [00000006 BYTES: COLLAPSED FUNCTION __main. PRESS KEYPAD "+" TO EXPAND]
.text:00401BC6		       align 4
.text:00401BC8 ; [00000006 BYTES: COLLAPSED FUNCTION __assert_func. PRESS KEYPAD "+" TO	EXPAND]
.text:00401BCE		       align 10h
.text:00401BD0 ; [00000006 BYTES: COLLAPSED FUNCTION sscanf. PRESS KEYPAD "+" TO EXPAND]
.text:00401BD6		       align 4
.text:00401BD8 ; [00000006 BYTES: COLLAPSED FUNCTION malloc. PRESS KEYPAD "+" TO EXPAND]
.text:00401BDE		       align 10h
.text:00401BE0 ; [00000006 BYTES: COLLAPSED FUNCTION printf. PRESS KEYPAD "+" TO EXPAND]
.text:00401BE6		       align 4
.text:00401BE8 ; [00000006 BYTES: COLLAPSED FUNCTION free. PRESS KEYPAD	"+" TO EXPAND]
.text:00401BEE		       align 10h
.text:00401BF0 ; [00000006 BYTES: COLLAPSED FUNCTION putchar. PRESS KEYPAD "+" TO EXPAND]
.text:00401BF6		       align 10h
.text:00401C00
.text:00401C00 ; =============== S U B R O U T I N E =======================================
.text:00401C00
.text:00401C00 ; Attributes: bp-based frame
.text:00401C00
.text:00401C00 sub_401C00      proc near	       ; CODE XREF: sub_401B50+14p
.text:00401C00					       ; sub_402060+18p
.text:00401C00
.text:00401C00 var_18	       = dword ptr -18h
.text:00401C00 arg_0	       = dword ptr  8
.text:00401C00 arg_4	       = dword ptr  0Ch
.text:00401C00
.text:00401C00		       push    ebp
.text:00401C01		       mov     ebp, esp
.text:00401C03		       push    esi
.text:00401C04		       push    ebx
.text:00401C05		       sub     esp, 10h
.text:00401C08		       mov     ebx, [ebp+arg_4]
.text:00401C0B		       mov     esi, [ebp+arg_0]
.text:00401C0E		       mov     [esp+18h+var_18], 8
.text:00401C15		       call    cygwin_internal
.text:00401C1A		       test    ebx, ebx
.text:00401C1C		       mov     ecx, eax
.text:00401C1E		       jz      loc_401DE0
.text:00401C24		       mov     eax, ds:_impure_ptr
.text:00401C29		       test    ecx, ecx
.text:00401C2B		       mov     dword ptr [ebx+4], 0A8h
.text:00401C32		       mov     dword ptr [ebx+8], 3EFh
.text:00401C39		       mov     dword ptr [ebx+0Ch], 7
.text:00401C40		       mov     [ebx+10h], eax
.text:00401C43		       mov     eax, [ebp+0]
.text:00401C46		       mov     dword ptr [ebx+80h], 0
.text:00401C50		       mov     dword ptr [ebx+84h], 0E6h
.text:00401C5A		       mov     dword ptr [ebx+2Ch], offset dword_402100
.text:00401C61		       mov     dword ptr [ebx+30h], offset dword_40210C
.text:00401C68		       mov     dword ptr [ebx+14h], offset dword_405020
.text:00401C6F		       mov     [ebx+28h], esi
.text:00401C72		       mov     dword ptr [ebx+48h], offset sub_401B80
.text:00401C79		       mov     dword ptr [ebx+4Ch], offset sub_401B90
.text:00401C80		       mov     dword ptr [ebx+50h], offset sub_401BA0
.text:00401C87		       mov     dword ptr [ebx+54h], offset sub_401BB0
.text:00401C8E		       mov     dword ptr [ebx+24h], offset dword_405024
.text:00401C95		       mov     [ebx], eax
.text:00401C97		       mov     dword ptr [ebx+18h], offset malloc
.text:00401C9E		       mov     dword ptr [ebx+1Ch], offset free
.text:00401CA5		       mov     dword ptr [ebx+20h], offset loc_402050
.text:00401CAC		       mov     dword ptr [ebx+44h], offset loc_402058
.text:00401CB3		       jz      loc_401D7A
.text:00401CB9
.text:00401CB9 loc_401CB9:			       ; CODE XREF: sub_401C00+277j
.text:00401CB9		       mov     edx, [ecx+78h]
.text:00401CBC		       test    edx, edx
.text:00401CBE		       jz      loc_401D7A
.text:00401CC4		       mov     eax, ds:dword_405028
.text:00401CC9		       test    eax, eax
.text:00401CCB		       jnz     loc_401D7A
.text:00401CD1		       mov     eax, dword_403020
.text:00401CD6		       test    eax, eax
.text:00401CD8		       jz      loc_401EF0
.text:00401CDE
.text:00401CDE loc_401CDE:			       ; CODE XREF: sub_401C00+2F7j
.text:00401CDE		       mov     eax, dword_403024
.text:00401CE3		       test    eax, eax
.text:00401CE5		       jz      loc_401EE0
.text:00401CEB
.text:00401CEB loc_401CEB:			       ; CODE XREF: sub_401C00+2E8j
.text:00401CEB		       mov     eax, dword_403028
.text:00401CF0		       test    eax, eax
.text:00401CF2		       jz      loc_401ED0
.text:00401CF8
.text:00401CF8 loc_401CF8:			       ; CODE XREF: sub_401C00+2D8j
.text:00401CF8		       mov     eax, dword_40302C
.text:00401CFD		       test    eax, eax
.text:00401CFF		       jz      loc_401EC0
.text:00401D05
.text:00401D05 loc_401D05:			       ; CODE XREF: sub_401C00+2C8j
.text:00401D05		       mov     eax, dword_403030
.text:00401D0A		       test    eax, eax
.text:00401D0C		       jz      loc_401EB0
.text:00401D12
.text:00401D12 loc_401D12:			       ; CODE XREF: sub_401C00+2B8j
.text:00401D12		       mov     esi, dword_403034
.text:00401D18		       test    esi, esi
.text:00401D1A		       jz      loc_401EA0
.text:00401D20
.text:00401D20 loc_401D20:			       ; CODE XREF: sub_401C00+2A8j
.text:00401D20		       mov     ecx, dword_403038
.text:00401D26		       test    ecx, ecx
.text:00401D28		       jz      loc_401E90
.text:00401D2E
.text:00401D2E loc_401D2E:			       ; CODE XREF: sub_401C00+298j
.text:00401D2E		       mov     eax, dword_40303C
.text:00401D33		       test    eax, eax
.text:00401D35		       jz      loc_401E82
.text:00401D3B
.text:00401D3B loc_401D3B:			       ; CODE XREF: sub_401C00+28Aj
.text:00401D3B		       mov     eax, dword_403020
.text:00401D40		       mov     [edx], eax
.text:00401D42		       mov     eax, dword_403024
.text:00401D47		       mov     [edx+4],	eax
.text:00401D4A		       mov     eax, dword_403028
.text:00401D4F		       mov     [edx+8],	eax
.text:00401D52		       mov     eax, dword_40302C
.text:00401D57		       mov     [edx+0Ch], eax
.text:00401D5A		       mov     eax, dword_403030
.text:00401D5F		       mov     [edx+10h], eax
.text:00401D62		       mov     eax, dword_403034
.text:00401D67		       mov     [edx+14h], eax
.text:00401D6A		       mov     eax, dword_403038
.text:00401D6F		       mov     [edx+18h], eax
.text:00401D72		       mov     eax, dword_40303C
.text:00401D77		       mov     [edx+1Ch], eax
.text:00401D7A
.text:00401D7A loc_401D7A:			       ; CODE XREF: sub_401C00+B3j
.text:00401D7A					       ; sub_401C00+BEj ...
.text:00401D7A		       mov     [esp+18h+var_18], 0
.text:00401D81		       call    GetModuleHandleA
.text:00401D86		       mov     dword ptr [ebx+34h], offset off_403000
.text:00401D8D		       mov     dword ptr [ebx+38h], offset dword_403124
.text:00401D94		       mov     dword ptr [ebx+3Ch], offset dword_405000
.text:00401D9B		       mov     dword ptr [ebx+40h], offset dword_405158
.text:00401DA2		       mov     dword ptr [ebx+94h], offset dword_404000
.text:00401DAC		       mov     [ebx+7Ch], eax
.text:00401DAF		       sub     esp, 4
.text:00401DB2		       mov     dword ptr [ebx+98h], offset dword_404000
.text:00401DBC		       mov     dword ptr [ebx+9Ch], 400000h
.text:00401DC6		       call    sub_402040
.text:00401DCB		       lea     esp, [ebp-8]
.text:00401DCE		       mov     eax, 1
.text:00401DD3		       pop     ebx
.text:00401DD4		       pop     esi
.text:00401DD5		       pop     ebp
.text:00401DD6		       retn    8
.text:00401DD6 ; ---------------------------------------------------------------------------
.text:00401DD9		       align 10h
.text:00401DE0
.text:00401DE0 loc_401DE0:			       ; CODE XREF: sub_401C00+1Ej
.text:00401DE0		       mov     dword ptr [eax+4], 0A8h
.text:00401DE7		       mov     edx, ds:_impure_ptr
.text:00401DED		       test    ecx, ecx
.text:00401DEF		       mov     dword ptr [eax+8], 3EFh
.text:00401DF6		       mov     ebx, ecx
.text:00401DF8		       mov     dword ptr [eax+0Ch], 7
.text:00401DFF		       mov     dword ptr [eax+80h], 0
.text:00401E09		       mov     dword ptr [eax+84h], 0E6h
.text:00401E13		       mov     dword ptr [eax+2Ch], offset dword_402100
.text:00401E1A		       mov     dword ptr [eax+30h], offset dword_40210C
.text:00401E21		       mov     dword ptr [eax+14h], offset dword_405020
.text:00401E28		       mov     eax, [eax+0A4h]
.text:00401E2E		       mov     [ecx+28h], esi
.text:00401E31		       mov     dword ptr [ecx+48h], offset sub_401B80
.text:00401E38		       mov     dword ptr [ecx+4Ch], offset sub_401B90
.text:00401E3F		       mov     [edx], eax
.text:00401E41		       mov     eax, [ebp+0]
.text:00401E44		       mov     dword ptr [ecx+50h], offset sub_401BA0
.text:00401E4B		       mov     dword ptr [ecx+54h], offset sub_401BB0
.text:00401E52		       mov     dword ptr [ecx+24h], offset dword_405024
.text:00401E59		       mov     [ecx], eax
.text:00401E5B		       mov     dword ptr [ecx+18h], offset malloc
.text:00401E62		       mov     dword ptr [ecx+1Ch], offset free
.text:00401E69		       mov     dword ptr [ecx+20h], offset loc_402050
.text:00401E70		       mov     dword ptr [ecx+44h], offset loc_402058
.text:00401E77		       jnz     loc_401CB9
.text:00401E7D		       jmp     loc_401D7A
.text:00401E82 ; ---------------------------------------------------------------------------
.text:00401E82
.text:00401E82 loc_401E82:			       ; CODE XREF: sub_401C00+135j
.text:00401E82		       mov     eax, [edx+1Ch]
.text:00401E85		       mov     dword_40303C, eax
.text:00401E8A		       jmp     loc_401D3B
.text:00401E8A ; ---------------------------------------------------------------------------
.text:00401E8F		       align 10h
.text:00401E90
.text:00401E90 loc_401E90:			       ; CODE XREF: sub_401C00+128j
.text:00401E90		       mov     eax, [edx+18h]
.text:00401E93		       mov     dword_403038, eax
.text:00401E98		       jmp     loc_401D2E
.text:00401E98 ; ---------------------------------------------------------------------------
.text:00401E9D		       align 10h
.text:00401EA0
.text:00401EA0 loc_401EA0:			       ; CODE XREF: sub_401C00+11Aj
.text:00401EA0		       mov     eax, [edx+14h]
.text:00401EA3		       mov     dword_403034, eax
.text:00401EA8		       jmp     loc_401D20
.text:00401EA8 ; ---------------------------------------------------------------------------
.text:00401EAD		       align 10h
.text:00401EB0
.text:00401EB0 loc_401EB0:			       ; CODE XREF: sub_401C00+10Cj
.text:00401EB0		       mov     eax, [edx+10h]
.text:00401EB3		       mov     dword_403030, eax
.text:00401EB8		       jmp     loc_401D12
.text:00401EB8 ; ---------------------------------------------------------------------------
.text:00401EBD		       align 10h
.text:00401EC0
.text:00401EC0 loc_401EC0:			       ; CODE XREF: sub_401C00+FFj
.text:00401EC0		       mov     eax, [edx+0Ch]
.text:00401EC3		       mov     dword_40302C, eax
.text:00401EC8		       jmp     loc_401D05
.text:00401EC8 ; ---------------------------------------------------------------------------
.text:00401ECD		       align 10h
.text:00401ED0
.text:00401ED0 loc_401ED0:			       ; CODE XREF: sub_401C00+F2j
.text:00401ED0		       mov     eax, [edx+8]
.text:00401ED3		       mov     dword_403028, eax
.text:00401ED8		       jmp     loc_401CF8
.text:00401ED8 ; ---------------------------------------------------------------------------
.text:00401EDD		       align 10h
.text:00401EE0
.text:00401EE0 loc_401EE0:			       ; CODE XREF: sub_401C00+E5j
.text:00401EE0		       mov     eax, [edx+4]
.text:00401EE3		       mov     dword_403024, eax
.text:00401EE8		       jmp     loc_401CEB
.text:00401EE8 ; ---------------------------------------------------------------------------
.text:00401EED		       align 10h
.text:00401EF0
.text:00401EF0 loc_401EF0:			       ; CODE XREF: sub_401C00+D8j
.text:00401EF0		       mov     eax, [edx]
.text:00401EF2		       mov     dword_403020, eax
.text:00401EF7		       jmp     loc_401CDE
.text:00401EF7 sub_401C00      endp
.text:00401EF7
.text:00401EF7 ; ---------------------------------------------------------------------------
.text:00401EFC		       align 10h
.text:00401F00
.text:00401F00 ; =============== S U B R O U T I N E =======================================
.text:00401F00
.text:00401F00 ; Attributes: bp-based frame
.text:00401F00
.text:00401F00 sub_401F00      proc near	       ; DATA XREF: .text:00401FF4o
.text:00401F00
.text:00401F00 var_18	       = dword ptr -18h
.text:00401F00 var_14	       = dword ptr -14h
.text:00401F00 var_10	       = dword ptr -10h
.text:00401F00
.text:00401F00		       push    ebp
.text:00401F01		       mov     ebp, esp
.text:00401F03		       sub     esp, 18h
.text:00401F06		       mov     eax, ds:dword_405050
.text:00401F0B		       mov     [esp+18h+var_10], eax
.text:00401F0F		       mov     eax, ds:dword_405040
.text:00401F14		       mov     [esp+18h+var_14], eax
.text:00401F18		       mov     eax, ds:dword_405030
.text:00401F1D		       mov     [esp+18h+var_18], eax
.text:00401F20		       call    sub_4020B0
.text:00401F25		       sub     esp, 0Ch
.text:00401F28		       leave
.text:00401F29		       retn
.text:00401F29 sub_401F00      endp
.text:00401F29
.text:00401F29 ; ---------------------------------------------------------------------------
.text:00401F2A		       align 10h
.text:00401F30
.text:00401F30 loc_401F30:			       ; CODE XREF: .text:00402024j
.text:00401F30		       push    ebp
.text:00401F31		       mov     ebp, esp
.text:00401F33		       push    ebx
.text:00401F34		       sub     esp, 14h
.text:00401F37		       mov     eax, [ebp+0Ch]
.text:00401F3A		       mov     ecx, [ebp+8]
.text:00401F3D		       mov     edx, [ebp+10h]
.text:00401F40		       cmp     eax, 1
.text:00401F43		       jz      loc_401FD0
.text:00401F49		       jb      short loc_401F63
.text:00401F4B		       cmp     eax, 2
.text:00401F4E		       jz      short loc_401FB6
.text:00401F50		       cmp     eax, 3
.text:00401F53		       mov     ebx, 1
.text:00401F58		       jz      short loc_401FA0
.text:00401F5A
.text:00401F5A loc_401F5A:			       ; CODE XREF: .text:00401F7Ej
.text:00401F5A					       ; .text:00401F97j
.text:00401F5A		       mov     eax, ebx
.text:00401F5C		       mov     ebx, [ebp-4]
.text:00401F5F		       leave
.text:00401F60		       retn    0Ch
.text:00401F63 ; ---------------------------------------------------------------------------
.text:00401F63
.text:00401F63 loc_401F63:			       ; CODE XREF: .text:00401F49j
.text:00401F63		       mov     [esp+8],	edx
.text:00401F67		       mov     dword ptr [esp+4], 0
.text:00401F6F		       mov     [esp], ecx
.text:00401F72		       call    sub_4020B0
.text:00401F77		       sub     esp, 0Ch
.text:00401F7A		       test    eax, eax
.text:00401F7C		       mov     ebx, eax
.text:00401F7E		       jz      short loc_401F5A
.text:00401F80		       mov     eax, ds:dword_405060
.text:00401F85		       mov     [esp], eax
.text:00401F88		       call    cygwin_detach_dll
.text:00401F8D		       mov     ds:dword_405060,	0FFFFFFFFh
.text:00401F97		       jmp     short loc_401F5A
.text:00401F97 ; ---------------------------------------------------------------------------
.text:00401F99		       align 10h
.text:00401FA0
.text:00401FA0 loc_401FA0:			       ; CODE XREF: .text:00401F58j
.text:00401FA0		       mov     [ebp+10h], edx
.text:00401FA3		       mov     ebx, [ebp-4]
.text:00401FA6		       mov     dword ptr [ebp+0Ch], 3
.text:00401FAD		       mov     [ebp+8],	ecx
.text:00401FB0		       leave
.text:00401FB1		       jmp     sub_4020B0
.text:00401FB6 ; ---------------------------------------------------------------------------
.text:00401FB6
.text:00401FB6 loc_401FB6:			       ; CODE XREF: .text:00401F4Ej
.text:00401FB6		       mov     [ebp+10h], edx
.text:00401FB9		       mov     ebx, [ebp-4]
.text:00401FBC		       mov     dword ptr [ebp+0Ch], 2
.text:00401FC3		       mov     [ebp+8],	ecx
.text:00401FC6		       leave
.text:00401FC7		       jmp     sub_4020B0
.text:00401FC7 ; ---------------------------------------------------------------------------
.text:00401FCC		       align 10h
.text:00401FD0
.text:00401FD0 loc_401FD0:			       ; CODE XREF: .text:00401F43j
.text:00401FD0		       xor     eax, eax
.text:00401FD2		       test    edx, edx
.text:00401FD4		       setz    al
.text:00401FD7		       xor     ebx, ebx
.text:00401FD9		       mov     ds:dword_405030,	ecx
.text:00401FDF		       mov     ds:dword_405040,	1
.text:00401FE9		       mov     ds:dword_405050,	edx
.text:00401FEF		       mov     ds:dword_405028,	eax
.text:00401FF4		       mov     dword ptr [esp+4], offset sub_401F00
.text:00401FFC		       mov     [esp], ecx
.text:00401FFF		       call    sub_402060
.text:00402004		       cmp     eax, 0FFFFFFFFh
.text:00402007		       setnz   bl
.text:0040200A		       mov     ds:dword_405060,	eax
.text:0040200F		       mov     eax, ebx
.text:00402011		       mov     ebx, [ebp-4]
.text:00402014		       leave
.text:00402015		       retn    0Ch
.text:00402015 ; ---------------------------------------------------------------------------
.text:00402018		       align 10h
.text:00402020		       push    ebp
.text:00402021		       mov     ebp, esp
.text:00402023		       leave
.text:00402024		       jmp     loc_401F30
.text:00402024 ; ---------------------------------------------------------------------------
.text:00402029		       align 10h
.text:00402030 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_internal. PRESS KEYPAD "+" TO EXPAND]
.text:00402036		       align 10h
.text:00402040
.text:00402040 ; =============== S U B R O U T I N E =======================================
.text:00402040
.text:00402040 ; Attributes: bp-based frame
.text:00402040
.text:00402040 sub_402040      proc near	       ; CODE XREF: sub_401C00+1C6p
.text:00402040		       push    ebp
.text:00402041		       mov     ebp, esp
.text:00402043		       pop     ebp
.text:00402044		       retn
.text:00402044 sub_402040      endp
.text:00402044
.text:00402044 ; ---------------------------------------------------------------------------
.text:00402045		       align 10h
.text:00402050
.text:00402050 loc_402050:			       ; DATA XREF: sub_401C00+A5o
.text:00402050					       ; sub_401C00+269o
.text:00402050		       jmp     ds:realloc
.text:00402050 ; ---------------------------------------------------------------------------
.text:00402056		       align 4
.text:00402058
.text:00402058 loc_402058:			       ; DATA XREF: sub_401C00+ACo
.text:00402058					       ; sub_401C00+270o
.text:00402058		       jmp     ds:calloc
.text:00402058 ; ---------------------------------------------------------------------------
.text:0040205E		       align 10h
.text:00402060
.text:00402060 ; =============== S U B R O U T I N E =======================================
.text:00402060
.text:00402060 ; Attributes: bp-based frame
.text:00402060
.text:00402060 sub_402060      proc near	       ; CODE XREF: .text:00401FFFp
.text:00402060
.text:00402060 var_18	       = dword ptr -18h
.text:00402060 var_14	       = dword ptr -14h
.text:00402060 var_4	       = dword ptr -4
.text:00402060 arg_0	       = dword ptr  8
.text:00402060 arg_4	       = dword ptr  0Ch
.text:00402060
.text:00402060 ; FUNCTION CHUNK	AT .text:004020C0 SIZE 00000006	BYTES
.text:00402060
.text:00402060		       push    ebp
.text:00402061		       mov     ebp, esp
.text:00402063		       push    ebx
.text:00402064		       sub     esp, 14h
.text:00402067		       mov     ebx, [ebp+arg_0]
.text:0040206A		       mov     [esp+18h+var_14], offset	dword_405070
.text:00402072		       mov     eax, [ebp+arg_4]
.text:00402075		       mov     [esp+18h+var_18], eax
.text:00402078		       call    sub_401C00
.text:0040207D		       mov     [ebp+arg_0], ebx
.text:00402080		       mov     ebx, [ebp+var_4]
.text:00402083		       mov     [ebp+arg_4], offset dword_405070
.text:0040208A		       sub     esp, 8
.text:0040208D		       leave
.text:0040208E		       jmp     loc_4020C0
.text:0040208E sub_402060      endp
.text:0040208E
.text:0040208E ; ---------------------------------------------------------------------------
.text:00402093		       align 10h
.text:004020A0 ; [00000006 BYTES: COLLAPSED FUNCTION cygwin_detach_dll.	PRESS KEYPAD "+" TO EXPAND]
.text:004020A6		       align 10h
.text:004020B0
.text:004020B0 ; =============== S U B R O U T I N E =======================================
.text:004020B0
.text:004020B0 ; Attributes: bp-based frame
.text:004020B0
.text:004020B0 sub_4020B0      proc near	       ; CODE XREF: sub_401F00+20p
.text:004020B0					       ; .text:00401F72p ...
.text:004020B0		       push    ebp
.text:004020B1		       mov     eax, 1
.text:004020B6		       mov     ebp, esp
.text:004020B8		       pop     ebp
.text:004020B9		       retn    0Ch
.text:004020B9 sub_4020B0      endp
.text:004020B9
.text:004020B9 ; ---------------------------------------------------------------------------
.text:004020BC		       align 10h
.text:004020C0 ; START OF FUNCTION CHUNK FOR sub_402060
.text:004020C0
.text:004020C0 loc_4020C0:			       ; CODE XREF: sub_402060+2Ej
.text:004020C0		       jmp     ds:dll_dllcrt0
.text:004020C0 ; END OF	FUNCTION CHUNK FOR sub_402060
.text:004020C0 ; ---------------------------------------------------------------------------
.text:004020C6		       align 4
.text:004020C8 ; [00000006 BYTES: COLLAPSED FUNCTION GetModuleHandleA. PRESS KEYPAD "+"	TO EXPAND]
.text:004020CE		       align 10h
.text:004020D0 ; [00000006 BYTES: COLLAPSED FUNCTION GetProcAddress. PRESS KEYPAD "+" TO EXPAND]
.text:004020D6		       align 10h
.text:004020E0		       push    ebp
.text:004020E1		       mov     ebp, esp
.text:004020E3		       pop     ebp
.text:004020E4		       jmp     loc_4010B0
.text:004020E4 ; ---------------------------------------------------------------------------
.text:004020E9		       align 10h
.text:004020F0		       push    ebp
.text:004020F1		       mov     ebp, esp
.text:004020F3		       pop     ebp
.text:004020F4		       jmp     loc_401150
.text:004020F4 ; ---------------------------------------------------------------------------
.text:004020F9		       align 10h
.text:00402100 dword_402100    dd 0FFFFFFFFh, 4020E0h, 0 ; DATA	XREF: sub_401C00+5Ao
.text:00402100					       ; sub_401C00+213o
.text:0040210C dword_40210C    dd 0FFFFFFFFh, 4020F0h, 3Bh dup(0)
.text:0040210C					       ; DATA XREF: sub_401C00+61o
.text:0040210C					       ; sub_401C00+21Ao
.text:00402200		       dd 380h dup(?)
.text:00402200 _text	       ends
.text:00402200
.data:00403000 ; Section 2. (virtual address 00003000)
.data:00403000 ; Virtual size		       : 00000124 (    292.)
.data:00403000 ; Section size in file	       : 00000200 (    512.)
.data:00403000 ; Offset	to raw data for	section: 00001600
.data:00403000 ; Flags C0600040: Data Readable Writable
.data:00403000 ; Alignment     : 32 bytes
.data:00403000 ; ===========================================================================
.data:00403000
.data:00403000 ; Segment type: Pure data
.data:00403000 ; Segment permissions: Read/Write
.data:00403000 ; Segment alignment '32byte' can not be represented in assembly
.data:00403000 _data	       segment para public 'DATA' use32
.data:00403000		       assume cs:_data
.data:00403000		       ;org 403000h
.data:00403000 off_403000      dd offset __register_frame_info
.data:00403000					       ; DATA XREF: .text:loc_401130r
.data:00403000					       ; sub_401C00+186o
.data:00403004 off_403004      dd offset __deregister_frame_info
.data:00403004					       ; DATA XREF: .text:loc_401190r
.data:00403008 dword_403008    dd 0		       ; DATA XREF: .text:loc_401140r
.data:0040300C		       align 20h
.data:00403020 dword_403020    dd 0		       ; DATA XREF: sub_401C00+D1r
.data:00403020					       ; sub_401C00:loc_401D3Br ...
.data:00403024 dword_403024    dd 0		       ; DATA XREF: sub_401C00:loc_401CDEr
.data:00403024					       ; sub_401C00+142r ...
.data:00403028 dword_403028    dd 0		       ; DATA XREF: sub_401C00:loc_401CEBr
.data:00403028					       ; sub_401C00+14Ar ...
.data:0040302C dword_40302C    dd 0		       ; DATA XREF: sub_401C00:loc_401CF8r
.data:0040302C					       ; sub_401C00+152r ...
.data:00403030 dword_403030    dd 0		       ; DATA XREF: sub_401C00:loc_401D05r
.data:00403030					       ; sub_401C00+15Ar ...
.data:00403034 dword_403034    dd 0		       ; DATA XREF: sub_401C00:loc_401D12r
.data:00403034					       ; sub_401C00+162r ...
.data:00403038 dword_403038    dd 0		       ; DATA XREF: sub_401C00:loc_401D20r
.data:00403038					       ; sub_401C00+16Ar ...
.data:0040303C dword_40303C    dd 0		       ; DATA XREF: sub_401C00:loc_401D2Er
.data:0040303C					       ; sub_401C00+172r ...
.data:00403040 aCyggcc_s1_dll  db 'cyggcc_s-1.dll',0   ; DATA XREF: .text:004010B6o
.data:00403040					       ; .text:00401156o
.data:0040304F a__register_fra db '__register_frame_info',0 ; DATA XREF: .text:004010C9o
.data:00403065 aCyggcj9_dll    db 'cyggcj-9.dll',0     ; DATA XREF: .text:004010FAo
.data:00403072 a_jv_registercl db '_Jv_RegisterClasses',0 ; DATA XREF: .text:0040110Do
.data:00403086 a__deregister_f db '__deregister_frame_info',0 ; DATA XREF: .text:00401169o
.data:0040309E		       align 10h
.data:004030A0 aSglib_ilist_de db 'sglib_ilist_delete',0 ; DATA XREF: sub_4012CD+3Do
.data:004030B3		       align 4
.data:004030B4 a_p_NullElement db '*_p_!=NULL && "element is not member of the container, use DELETE'
.data:004030B4					       ; DATA XREF: sub_4012CD+35o
.data:004030B4		       db '_IF_MEMBER instead"!=NULL',0
.data:0040310F aHash_c	       db 'hash.c',0           ; DATA XREF: sub_4012CD+4Do
.data:00403116 aD	       db '%d',0               ; DATA XREF: sub_4019FC+43o
.data:00403119 aD_0	       db '%d ',0              ; DATA XREF: sub_4019FC+C9o
.data:0040311D		       align 10h
.data:00403120 dword_403120    dd 0		       ; DATA XREF: .text:loc_4010F1r
.data:00403120					       ; .text:loc_401124o
.data:00403124 dword_403124    dd 37h dup(0)	       ; DATA XREF: sub_401C00+18Do
.data:00403200		       align 1000h
.data:00403200 _data	       ends
.data:00403200
.eh_frame:00404000 ; Section 3.	(virtual address 00004000)
.eh_frame:00404000 ; Virtual size		   : 00000004 (	     4.)
.eh_frame:00404000 ; Section size in file	   : 00000200 (	   512.)
.eh_frame:00404000 ; Offset to raw data	for section: 00001800
.eh_frame:00404000 ; Flags C0300040: Data Readable Writable
.eh_frame:00404000 ; Alignment	   : 4 bytes
.eh_frame:00404000 ; ===========================================================================
.eh_frame:00404000
.eh_frame:00404000 ; Segment type: Pure	data
.eh_frame:00404000 ; Segment permissions: Read/Write
.eh_frame:00404000 _eh_frame	   segment dword public	'DATA' use32
.eh_frame:00404000		   assume cs:_eh_frame
.eh_frame:00404000		   ;org	404000h
.eh_frame:00404000 dword_404000	   dd 80h dup(0)	   ; DATA XREF:	.text:004010E8o
.eh_frame:00404000					   ; .text:loc_401180o	...
.eh_frame:00404200		   align 1000h
.eh_frame:00404200 _eh_frame	   ends
.eh_frame:00404200
.bss:00405000 ;	Section	4. (virtual address 00005000)
.bss:00405000 ;	Virtual	size		      :	00000158 (    344.)
.bss:00405000 ;	Section	size in	file	      :	00000000 (	0.)
.bss:00405000 ;	Offset to raw data for section:	00000000
.bss:00405000 ;	Flags C0600080:	Bss Readable Writable
.bss:00405000 ;	Alignment     :	32 bytes
.bss:00405000 ;	===========================================================================
.bss:00405000
.bss:00405000 ;	Segment	type: Uninitialized
.bss:00405000 ;	Segment	permissions: Read/Write
.bss:00405000 ;	Segment	alignment '32byte' can not be represented in assembly
.bss:00405000 _bss	      segment para public 'BSS' use32
.bss:00405000		      assume cs:_bss
.bss:00405000		      ;org 405000h
.bss:00405000		      assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00405000 dword_405000    dd 8 dup(?)	      ;	DATA XREF: .text:loc_4010E0o
.bss:00405000					      ;	sub_401C00+194o
.bss:00405020 dword_405020    dd ?		      ;	DATA XREF: sub_401C00+68o
.bss:00405020					      ;	sub_401C00+221o
.bss:00405024 dword_405024    dd ?		      ;	DATA XREF: sub_401C00+8Eo
.bss:00405024					      ;	sub_401C00+252o
.bss:00405028 dword_405028    dd ?		      ;	DATA XREF: sub_401C00+C4r
.bss:00405028					      ;	.text:00401FEFw
.bss:0040502C		      align 10h
.bss:00405030 dword_405030    dd ?		      ;	DATA XREF: sub_401F00+18r
.bss:00405030					      ;	.text:00401FD9w
.bss:00405034		      align 10h
.bss:00405040 dword_405040    dd ?		      ;	DATA XREF: sub_401F00+Fr
.bss:00405040					      ;	.text:00401FDFw
.bss:00405044		      align 10h
.bss:00405050 dword_405050    dd ?		      ;	DATA XREF: sub_401F00+6r
.bss:00405050					      ;	.text:00401FE9w
.bss:00405054		      align 10h
.bss:00405060 dword_405060    dd ?		      ;	DATA XREF: .text:00401F80r
.bss:00405060					      ;	.text:00401F8Dw ...
.bss:00405064		      align 10h
.bss:00405070 dword_405070    dd 2Ch dup(?)	      ;	DATA XREF: sub_402060+Ao
.bss:00405070					      ;	sub_402060+23o
.bss:00405120 dword_405120    dd 0Eh dup(?)	      ;	DATA XREF: sub_4019FC+19o
.bss:00405120					      ;	sub_4019FC+60o	...
.bss:00405158 dword_405158    dd 3AAh dup(?)	      ;	DATA XREF: sub_401C00+19Bo
.bss:00405158 _bss	      ends
.bss:00405158
.idata:00406000	; Section 5. (virtual address 00006000)
.idata:00406000	; Virtual size			: 0000028C (	652.)
.idata:00406000	; Section size in file		: 00000400 (   1024.)
.idata:00406000	; Offset to raw	data for section: 00001A00
.idata:00406000	; Flags	C0300040: Data Readable	Writable
.idata:00406000	; Alignment	: 4 bytes
.idata:00406000	; ===========================================================================
.idata:00406000
.idata:00406000	; Segment type:	Externs
.idata:00406000	; _idata
.idata:00406000
.idata:00406001
.idata:004060A4	;
.idata:004060A4	; Imports from cygwin1.dll
.idata:004060A4	;
.idata:004060A4			extrn __imp___assert_func:dword	; DATA XREF: __assert_funcr
.idata:004060A8			extrn __imp___main:dword ; DATA	XREF: __mainr
.idata:004060AC	; __stdcall dll_crt0()
.idata:004060AC			extrn _dll_crt0@0:dword	; CODE XREF: sub_401B50+1Cp
.idata:004060AC						; DATA XREF: sub_401B50+1Cr
.idata:004060B0			extrn _impure_ptr:dword	; DATA XREF: sub_401C00+24r
.idata:004060B0						; sub_401C00+1E7r
.idata:004060B4	; void *__cdecl	calloc(size_t NumOfElements, size_t SizeOfElements)
.idata:004060B4			extrn calloc:dword	; DATA XREF: .text:loc_402058r
.idata:004060B8			extrn __imp_cygwin_detach_dll:dword
.idata:004060B8						; DATA XREF: cygwin_detach_dllr
.idata:004060BC			extrn __imp_cygwin_internal:dword
.idata:004060BC						; DATA XREF: cygwin_internalr
.idata:004060C0			extrn dll_dllcrt0:dword	; DATA XREF: sub_402060:loc_4020C0r
.idata:004060C4	; void __cdecl free(void *Memory)
.idata:004060C4			extrn __imp_free:dword	; DATA XREF: freer
.idata:004060C8	; void *__cdecl	malloc(size_t Size)
.idata:004060C8			extrn __imp_malloc:dword ; DATA	XREF: mallocr
.idata:004060CC	; int printf(const char	*Format, ...)
.idata:004060CC			extrn __imp_printf:dword ; DATA	XREF: printfr
.idata:004060D0	; int __cdecl putchar(int Ch)
.idata:004060D0			extrn __imp_putchar:dword ; DATA XREF: putcharr
.idata:004060D4	; void *__cdecl	realloc(void *Memory, size_t NewSize)
.idata:004060D4			extrn realloc:dword	; DATA XREF: .text:loc_402050r
.idata:004060D8	; int sscanf(const char	*Src, const char *Format, ...)
.idata:004060D8			extrn __imp_sscanf:dword ; DATA	XREF: sscanfr
.idata:004060DC
.idata:004060E0	;
.idata:004060E0	; Imports from cyggcc_s-1.dll
.idata:004060E0	;
.idata:004060E0			extrn __imp___deregister_frame_info:dword
.idata:004060E0						; DATA XREF: __deregister_frame_infor
.idata:004060E4			extrn __imp___register_frame_info:dword
.idata:004060E4						; DATA XREF: __register_frame_infor
.idata:004060E8
.idata:004060EC	;
.idata:004060EC	; Imports from KERNEL32.dll
.idata:004060EC	;
.idata:004060EC	; HMODULE __stdcall GetModuleHandleA(LPCSTR lpModuleName)
.idata:004060EC			extrn __imp_GetModuleHandleA:dword
.idata:004060EC						; DATA XREF: GetModuleHandleAr
.idata:004060F0	; FARPROC __stdcall GetProcAddress(HMODULE hModule, LPCSTR lpProcName)
.idata:004060F0			extrn __imp_GetProcAddress:dword
.idata:004060F0						; DATA XREF: GetProcAddressr
.idata:004060F4
.idata:004060F4
.idata:004060F4
.idata:004060F4			end start
