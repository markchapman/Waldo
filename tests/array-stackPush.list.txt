.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.data:00000000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.data:00000000 ; |			License	info: 48-313D-7374-F1			   |
.data:00000000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : 3D2985BEAD9ABF55E7F14128501B5BF4
.data:00000000
.data:00000000 ; File Name   : C:\aditya\work\waldo\tests\array-stackPush.obj
.data:00000000 ; Format	     : COFF (X386MAGIC)
.data:00000000 ; includelib "LIBCMT"
.data:00000000 ; includelib "OLDNAMES""
.data:00000000
.data:00000000		       .686p
.data:00000000		       .mmx
.data:00000000		       .model flat
.data:00000000 .intel_syntax noprefix
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 _data	       segment dword public 'DATA' use32
.data:00000000		       assume cs:_data
.data:00000000 ; char $SG3533[]
.data:00000000 $SG3533	       db 'Full stack',0       ; DATA XREF: _Push+13o
.data:0000000B		       align 4
.data:0000000C ; char $SG3534[]
.data:0000000C $SG3534	       db '%s',0Ah,0           ; DATA XREF: _Push+18o
.data:0000000C _data	       ends
.data:0000000C
.text:00000010 ; ===========================================================================
.text:00000010
.text:00000010 ; Segment type: Pure code
.text:00000010 ; Segment permissions: Read/Execute
.text:00000010 _text	       segment para public 'CODE' use32
.text:00000010		       assume cs:_text
.text:00000010		       ;org 10h
.text:00000010		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00000010
.text:00000010 ; =============== S U B R O U T I N E =======================================
.text:00000010
.text:00000010 ; Attributes: bp-based frame
.text:00000010
.text:00000010		       public _Push
.text:00000010 _Push	       proc near
.text:00000010
.text:00000010 arg_0	       = dword ptr  8
.text:00000010 arg_4	       = dword ptr  0Ch
.text:00000010
.text:00000010		       push    ebp
.text:00000011		       mov     ebp, esp
.text:00000013		       mov     eax, [ebp+arg_4]
.text:00000016		       mov     ecx, [eax]
.text:00000018		       sub     ecx, 1
.text:0000001B		       mov     edx, [ebp+arg_4]
.text:0000001E		       cmp     [edx+4],	ecx
.text:00000021		       jnz     short loc_47
.text:00000023		       push    offset $SG3533  ; "Full stack"
.text:00000028		       push    offset $SG3534  ; "%s\n"
.text:0000002D		       call    ___iob_func
.text:00000032		       add     eax, 40h	; '@'
.text:00000035		       push    eax	       ; FILE *
.text:00000036		       call    _fprintf
.text:0000003B		       add     esp, 0Ch
.text:0000003E		       push    1	       ; int
.text:00000040		       call    _exit
.text:00000045 ; ---------------------------------------------------------------------------
.text:00000045		       jmp     short loc_68
.text:00000047 ; ---------------------------------------------------------------------------
.text:00000047
.text:00000047 loc_47:				       ; CODE XREF: _Push+11j
.text:00000047		       mov     eax, [ebp+arg_4]
.text:0000004A		       mov     ecx, [eax+4]
.text:0000004D		       add     ecx, 1
.text:00000050		       mov     edx, [ebp+arg_4]
.text:00000053		       mov     [edx+4],	ecx
.text:00000056		       mov     eax, [ebp+arg_4]
.text:00000059		       mov     ecx, [eax+4]
.text:0000005C		       mov     edx, [ebp+arg_4]
.text:0000005F		       mov     eax, [edx+8]
.text:00000062		       mov     edx, [ebp+arg_0]
.text:00000065		       mov     [eax+ecx*4], edx
.text:00000068
.text:00000068 loc_68:				       ; CODE XREF: _Push+35j
.text:00000068		       pop     ebp
.text:00000069		       retn
.text:00000069 _Push	       endp
.text:00000069
.text:00000069 _text	       ends
.text:00000069
UNDEF:00000070 ; ===========================================================================
UNDEF:00000070
UNDEF:00000070 ; Segment type: Externs
UNDEF:00000070 ; UNDEF
UNDEF:00000070 ; void __cdecl exit(int)
UNDEF:00000070		       extrn _exit:near	       ; CODE XREF: _Push+30p
UNDEF:00000074 ; int fprintf(FILE *, const char	*, ...)
UNDEF:00000074		       extrn _fprintf:near     ; CODE XREF: _Push+26p
UNDEF:00000078		       extrn ___iob_func:near  ; CODE XREF: _Push+1Dp
UNDEF:00000078
UNDEF:00000078
UNDEF:00000078		       end
