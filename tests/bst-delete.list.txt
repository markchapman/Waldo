.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.data:00000000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.data:00000000 ; |			License	info: 48-313D-7374-F1			   |
.data:00000000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : 4755FF938BE413076DEF621AE570421A
.data:00000000
.data:00000000 ; File Name   : C:\aditya\work\waldo\tests\bst-delete.obj
.data:00000000 ; Format	     : COFF (X386MAGIC)
.data:00000000 ; includelib "LIBCMT"
.data:00000000 ; includelib "OLDNAMES""
.data:00000000
.data:00000000		       .686p
.data:00000000		       .mmx
.data:00000000		       .model flat
.data:00000000 .intel_syntax noprefix
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 _data	       segment dword public 'DATA' use32
.data:00000000		       assume cs:_data
.data:00000000 ; char $SG3534[]
.data:00000000 $SG3534	       db 'Element not found',0 ; DATA XREF: _Delete+Ao
.data:00000012		       align 4
.data:00000014 ; char $SG3535[]
.data:00000014 $SG3535	       db '%s',0Ah,0           ; DATA XREF: _Delete+Fo
.data:00000014 _data	       ends
.data:00000014
.text:00000018 ; ===========================================================================
.text:00000018
.text:00000018 ; Segment type: Pure code
.text:00000018 ; Segment permissions: Read/Execute
.text:00000018 _text	       segment para public 'CODE' use32
.text:00000018		       assume cs:_text
.text:00000018		       ;org 18h
.text:00000018		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00000018
.text:00000018 ; =============== S U B R O U T I N E =======================================
.text:00000018
.text:00000018 ; Attributes: bp-based frame
.text:00000018
.text:00000018		       public _Delete
.text:00000018 _Delete	       proc near	       ; CODE XREF: _Delete+46p
.text:00000018					       ; _Delete+6Ep ...
.text:00000018
.text:00000018 var_4	       = dword ptr -4
.text:00000018 arg_0	       = dword ptr  8
.text:00000018 arg_4	       = dword ptr  0Ch
.text:00000018
.text:00000018		       push    ebp
.text:00000019		       mov     ebp, esp
.text:0000001B		       push    ecx
.text:0000001C		       cmp     [ebp+arg_4], 0
.text:00000020		       jnz     short loc_49
.text:00000022		       push    offset $SG3534  ; "Element not found"
.text:00000027		       push    offset $SG3535  ; "%s\n"
.text:0000002C		       call    ___iob_func
.text:00000031		       add     eax, 40h	; '@'
.text:00000034		       push    eax	       ; FILE *
.text:00000035		       call    _fprintf
.text:0000003A		       add     esp, 0Ch
.text:0000003D		       push    1	       ; int
.text:0000003F		       call    _exit
.text:00000044 ; ---------------------------------------------------------------------------
.text:00000044		       jmp     loc_11C
.text:00000049 ; ---------------------------------------------------------------------------
.text:00000049
.text:00000049 loc_49:				       ; CODE XREF: _Delete+8j
.text:00000049		       mov     eax, [ebp+arg_4]
.text:0000004C		       mov     ecx, [ebp+arg_0]
.text:0000004F		       cmp     ecx, [eax]
.text:00000051		       jge     short loc_71
.text:00000053		       mov     edx, [ebp+arg_4]
.text:00000056		       mov     eax, [edx+4]
.text:00000059		       push    eax
.text:0000005A		       mov     ecx, [ebp+arg_0]
.text:0000005D		       push    ecx
.text:0000005E		       call    _Delete
.text:00000063		       add     esp, 8
.text:00000066		       mov     edx, [ebp+arg_4]
.text:00000069		       mov     [edx+4],	eax
.text:0000006C		       jmp     loc_11C
.text:00000071 ; ---------------------------------------------------------------------------
.text:00000071
.text:00000071 loc_71:				       ; CODE XREF: _Delete+39j
.text:00000071		       mov     eax, [ebp+arg_4]
.text:00000074		       mov     ecx, [ebp+arg_0]
.text:00000077		       cmp     ecx, [eax]
.text:00000079		       jle     short loc_99
.text:0000007B		       mov     edx, [ebp+arg_4]
.text:0000007E		       mov     eax, [edx+8]
.text:00000081		       push    eax
.text:00000082		       mov     ecx, [ebp+arg_0]
.text:00000085		       push    ecx
.text:00000086		       call    _Delete
.text:0000008B		       add     esp, 8
.text:0000008E		       mov     edx, [ebp+arg_4]
.text:00000091		       mov     [edx+8],	eax
.text:00000094		       jmp     loc_11C
.text:00000099 ; ---------------------------------------------------------------------------
.text:00000099
.text:00000099 loc_99:				       ; CODE XREF: _Delete+61j
.text:00000099		       mov     eax, [ebp+arg_4]
.text:0000009C		       cmp     dword ptr [eax+4], 0
.text:000000A0		       jz      short loc_E4
.text:000000A2		       mov     ecx, [ebp+arg_4]
.text:000000A5		       cmp     dword ptr [ecx+8], 0
.text:000000A9		       jz      short loc_E4
.text:000000AB		       mov     edx, [ebp+arg_4]
.text:000000AE		       mov     eax, [edx+8]
.text:000000B1		       push    eax
.text:000000B2		       call    _FindMin
.text:000000B7		       add     esp, 4
.text:000000BA		       mov     [ebp+var_4], eax
.text:000000BD		       mov     ecx, [ebp+arg_4]
.text:000000C0		       mov     edx, [ebp+var_4]
.text:000000C3		       mov     eax, [edx]
.text:000000C5		       mov     [ecx], eax
.text:000000C7		       mov     ecx, [ebp+arg_4]
.text:000000CA		       mov     edx, [ecx+8]
.text:000000CD		       push    edx
.text:000000CE		       mov     eax, [ebp+arg_4]
.text:000000D1		       mov     ecx, [eax]
.text:000000D3		       push    ecx
.text:000000D4		       call    _Delete
.text:000000D9		       add     esp, 8
.text:000000DC		       mov     edx, [ebp+arg_4]
.text:000000DF		       mov     [edx+8],	eax
.text:000000E2		       jmp     short loc_11C
.text:000000E4 ; ---------------------------------------------------------------------------
.text:000000E4
.text:000000E4 loc_E4:				       ; CODE XREF: _Delete+88j
.text:000000E4					       ; _Delete+91j
.text:000000E4		       mov     eax, [ebp+arg_4]
.text:000000E7		       mov     [ebp+var_4], eax
.text:000000EA		       mov     ecx, [ebp+arg_4]
.text:000000ED		       cmp     dword ptr [ecx+4], 0
.text:000000F1		       jnz     short loc_FE
.text:000000F3		       mov     edx, [ebp+arg_4]
.text:000000F6		       mov     eax, [edx+8]
.text:000000F9		       mov     [ebp+arg_4], eax
.text:000000FC		       jmp     short loc_110
.text:000000FE ; ---------------------------------------------------------------------------
.text:000000FE
.text:000000FE loc_FE:				       ; CODE XREF: _Delete+D9j
.text:000000FE		       mov     ecx, [ebp+arg_4]
.text:00000101		       cmp     dword ptr [ecx+8], 0
.text:00000105		       jnz     short loc_110
.text:00000107		       mov     edx, [ebp+arg_4]
.text:0000010A		       mov     eax, [edx+4]
.text:0000010D		       mov     [ebp+arg_4], eax
.text:00000110
.text:00000110 loc_110:				       ; CODE XREF: _Delete+E4j
.text:00000110					       ; _Delete+EDj
.text:00000110		       mov     ecx, [ebp+var_4]
.text:00000113		       push    ecx	       ; void *
.text:00000114		       call    _free
.text:00000119		       add     esp, 4
.text:0000011C
.text:0000011C loc_11C:				       ; CODE XREF: _Delete+2Cj
.text:0000011C					       ; _Delete+54j ...
.text:0000011C		       mov     eax, [ebp+arg_4]
.text:0000011F		       mov     esp, ebp
.text:00000121		       pop     ebp
.text:00000122		       retn
.text:00000122 _Delete	       endp
.text:00000122
.text:00000122 _text	       ends
.text:00000122
UNDEF:00000130 ; ===========================================================================
UNDEF:00000130
UNDEF:00000130 ; Segment type: Externs
UNDEF:00000130 ; UNDEF
UNDEF:00000130 ; void __cdecl free(void	*)
UNDEF:00000130		       extrn _free:near	       ; CODE XREF: _Delete+FCp
UNDEF:00000134		       extrn _FindMin:near     ; CODE XREF: _Delete+9Ap
UNDEF:00000138 ; void __cdecl exit(int)
UNDEF:00000138		       extrn _exit:near	       ; CODE XREF: _Delete+27p
UNDEF:0000013C ; int fprintf(FILE *, const char	*, ...)
UNDEF:0000013C		       extrn _fprintf:near     ; CODE XREF: _Delete+1Dp
UNDEF:00000140		       extrn ___iob_func:near  ; CODE XREF: _Delete+14p
UNDEF:00000140
UNDEF:00000140
UNDEF:00000140		       end
