.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.data:00000000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.data:00000000 ; |			License	info: 48-313D-7374-F1			   |
.data:00000000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : 9A232C1E6B0F4E46D24462FE0DDF82FC
.data:00000000
.data:00000000 ; File Name   : C:\aditya\work\waldo\tests\array-stackPop.obj
.data:00000000 ; Format	     : COFF (X386MAGIC)
.data:00000000 ; includelib "LIBCMT"
.data:00000000 ; includelib "OLDNAMES""
.data:00000000
.data:00000000		       .686p
.data:00000000		       .mmx
.data:00000000		       .model flat
.data:00000000 .intel_syntax noprefix
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 _data	       segment dword public 'DATA' use32
.data:00000000		       assume cs:_data
.data:00000000 ; char $SG3531[]
.data:00000000 $SG3531	       db 'Empty stack',0      ; DATA XREF: _Pop+Co
.data:0000000C ; char $SG3532[]
.data:0000000C $SG3532	       db '%s',0Ah,0           ; DATA XREF: _Pop+11o
.data:0000000C _data	       ends
.data:0000000C
.text:00000010 ; ===========================================================================
.text:00000010
.text:00000010 ; Segment type: Pure code
.text:00000010 ; Segment permissions: Read/Execute
.text:00000010 _text	       segment para public 'CODE' use32
.text:00000010		       assume cs:_text
.text:00000010		       ;org 10h
.text:00000010		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00000010
.text:00000010 ; =============== S U B R O U T I N E =======================================
.text:00000010
.text:00000010 ; Attributes: bp-based frame
.text:00000010
.text:00000010		       public _Pop
.text:00000010 _Pop	       proc near
.text:00000010
.text:00000010 arg_0	       = dword ptr  8
.text:00000010
.text:00000010		       push    ebp
.text:00000011		       mov     ebp, esp
.text:00000013		       mov     eax, [ebp+arg_0]
.text:00000016		       cmp     dword ptr [eax+4], 0FFFFFFFFh
.text:0000001A		       jnz     short loc_40
.text:0000001C		       push    offset $SG3531  ; "Empty	stack"
.text:00000021		       push    offset $SG3532  ; "%s\n"
.text:00000026		       call    ___iob_func
.text:0000002B		       add     eax, 40h	; '@'
.text:0000002E		       push    eax	       ; FILE *
.text:0000002F		       call    _fprintf
.text:00000034		       add     esp, 0Ch
.text:00000037		       push    1	       ; int
.text:00000039		       call    _exit
.text:0000003E ; ---------------------------------------------------------------------------
.text:0000003E		       jmp     short loc_4F
.text:00000040 ; ---------------------------------------------------------------------------
.text:00000040
.text:00000040 loc_40:				       ; CODE XREF: _Pop+Aj
.text:00000040		       mov     ecx, [ebp+arg_0]
.text:00000043		       mov     edx, [ecx+4]
.text:00000046		       sub     edx, 1
.text:00000049		       mov     eax, [ebp+arg_0]
.text:0000004C		       mov     [eax+4],	edx
.text:0000004F
.text:0000004F loc_4F:				       ; CODE XREF: _Pop+2Ej
.text:0000004F		       pop     ebp
.text:00000050		       retn
.text:00000050 _Pop	       endp
.text:00000050
.text:00000050 _text	       ends
.text:00000050
UNDEF:00000060 ; ===========================================================================
UNDEF:00000060
UNDEF:00000060 ; Segment type: Externs
UNDEF:00000060 ; UNDEF
UNDEF:00000060 ; void __cdecl exit(int)
UNDEF:00000060		       extrn _exit:near	       ; CODE XREF: _Pop+29p
UNDEF:00000064 ; int fprintf(FILE *, const char	*, ...)
UNDEF:00000064		       extrn _fprintf:near     ; CODE XREF: _Pop+1Fp
UNDEF:00000068		       extrn ___iob_func:near  ; CODE XREF: _Pop+16p
UNDEF:00000068
UNDEF:00000068
UNDEF:00000068		       end
