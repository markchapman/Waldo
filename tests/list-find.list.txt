.text:00000000 ;
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.text:00000000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.text:00000000 ; |			License	info: 48-313D-7374-F1			   |
.text:00000000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.text:00000000 ; +-------------------------------------------------------------------------+
.text:00000000 ;
.text:00000000 ; Input MD5   : EAA7CCEB924B0F713FD2A8E0FE8AF178
.text:00000000
.text:00000000 ; File Name   : C:\aditya\work\waldo\tests\list-find.obj
.text:00000000 ; Format	     : COFF (X386MAGIC)
.text:00000000 ; includelib "LIBCMT"
.text:00000000 ; includelib "OLDNAMES""
.text:00000000
.text:00000000		       .686p
.text:00000000		       .mmx
.text:00000000		       .model flat
.text:00000000
.text:00000000 ; ===========================================================================
.text:00000000
.text:00000000 ; Segment type: Pure code
.text:00000000 ; Segment permissions: Read/Execute
.text:00000000 _text	       segment para public 'CODE' use32
.text:00000000		       assume cs:_text
.text:00000000		       assume es:nothing, ss:nothing, ds:nothing, fs:nothing, gs:nothing
.text:00000000
.text:00000000 ; =============== S U B R O U T I N E =======================================
.text:00000000
.text:00000000 ; Attributes: bp-based frame
.text:00000000
.text:00000000		       public _Find
.text:00000000 _Find	       proc near
.text:00000000
.text:00000000 var_4	       = dword ptr -4
.text:00000000 arg_0	       = dword ptr  8
.text:00000000 arg_4	       = dword ptr  0Ch
.text:00000000
.text:00000000		       push    ebp
.text:00000001		       mov     ebp, esp
.text:00000003		       push    ecx
.text:00000004		       mov     eax, [ebp+arg_4]
.text:00000007		       mov     ecx, [eax+4]
.text:0000000A		       mov     [ebp+var_4], ecx
.text:0000000D
.text:0000000D loc_D:				       ; CODE XREF: _Find+26j
.text:0000000D		       cmp     [ebp+var_4], 0
.text:00000011		       jz      short loc_28
.text:00000013		       mov     edx, [ebp+var_4]
.text:00000016		       mov     eax, [edx]
.text:00000018		       cmp     eax, [ebp+arg_0]
.text:0000001B		       jz      short loc_28
.text:0000001D		       mov     ecx, [ebp+var_4]
.text:00000020		       mov     edx, [ecx+4]
.text:00000023		       mov     [ebp+var_4], edx
.text:00000026		       jmp     short loc_D
.text:00000028 ; ---------------------------------------------------------------------------
.text:00000028
.text:00000028 loc_28:				       ; CODE XREF: _Find+11j
.text:00000028					       ; _Find+1Bj
.text:00000028		       mov     eax, [ebp+var_4]
.text:0000002B		       mov     esp, ebp
.text:0000002D		       pop     ebp
.text:0000002E		       retn
.text:0000002E _Find	       endp
.text:0000002E
.text:0000002E ; ---------------------------------------------------------------------------
.text:0000002F		       align 10h
.text:00000030
.text:00000030 ; =============== S U B R O U T I N E =======================================
.text:00000030
.text:00000030 ; Attributes: bp-based frame
.text:00000030
.text:00000030		       public _main
.text:00000030 _main	       proc near
.text:00000030		       push    ebp
.text:00000031		       mov     ebp, esp
.text:00000033		       xor     eax, eax
.text:00000035		       pop     ebp
.text:00000036		       retn
.text:00000036 _main	       endp
.text:00000036
.text:00000036 _text	       ends
.text:00000036
.text:00000036
.text:00000036		       end
