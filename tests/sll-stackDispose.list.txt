.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.data:00000000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.data:00000000 ; |			License	info: 48-313D-7374-F1			   |
.data:00000000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : 70D52734DCBFEC8FEB53B114119AB0C4
.data:00000000
.data:00000000 ; File Name   : C:\aditya\work\waldo\tests\sll-stackDispose.obj
.data:00000000 ; Format	     : COFF (X386MAGIC)
.data:00000000 ; includelib "LIBCMT"
.data:00000000 ; includelib "OLDNAMES""
.data:00000000
.data:00000000		       .686p
.data:00000000		       .mmx
.data:00000000		       .model flat
.data:00000000 .intel_syntax noprefix
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 _data	       segment dword public 'DATA' use32
.data:00000000		       assume cs:_data
.data:00000000 ; char $SG3525[]
.data:00000000 $SG3525	       db 'Must use CreateStack first',0
.data:00000000					       ; DATA XREF: _DisposeStack+Ao
.data:0000001B		       align 4
.data:0000001C ; char $SG3526[]
.data:0000001C $SG3526	       db '%s',0Ah,0           ; DATA XREF: _DisposeStack+Fo
.data:00000020 ; char $SG3534[]
.data:00000020 $SG3534	       db 'Empty stack',0      ; DATA XREF: _DisposeStack+47o
.data:0000002C ; char $SG3535[]
.data:0000002C $SG3535	       db '%s',0Ah,0           ; DATA XREF: _DisposeStack+4Co
.data:0000002C _data	       ends
.data:0000002C
.text:00000030 ; ===========================================================================
.text:00000030
.text:00000030 ; Segment type: Pure code
.text:00000030 ; Segment permissions: Read/Execute
.text:00000030 _text	       segment para public 'CODE' use32
.text:00000030		       assume cs:_text
.text:00000030		       ;org 30h
.text:00000030		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00000030
.text:00000030 ; =============== S U B R O U T I N E =======================================
.text:00000030
.text:00000030 ; Attributes: bp-based frame
.text:00000030
.text:00000030 ; int __cdecl DisposeStack(void *)
.text:00000030		       public _DisposeStack
.text:00000030 _DisposeStack   proc near
.text:00000030
.text:00000030 var_4	       = dword ptr -4
.text:00000030 arg_0	       = dword ptr  8
.text:00000030
.text:00000030		       push    ebp
.text:00000031		       mov     ebp, esp
.text:00000033		       push    ecx
.text:00000034		       cmp     [ebp+arg_0], 0
.text:00000038		       jnz     short loc_5E
.text:0000003A		       push    offset $SG3525  ; "Must use CreateStack first"
.text:0000003F		       push    offset $SG3526  ; "%s\n"
.text:00000044		       call    ___iob_func
.text:00000049		       add     eax, 40h	; '@'
.text:0000004C		       push    eax	       ; FILE *
.text:0000004D		       call    _fprintf
.text:00000052		       add     esp, 0Ch
.text:00000055		       push    1	       ; int
.text:00000057		       call    _exit
.text:0000005C ; ---------------------------------------------------------------------------
.text:0000005C		       jmp     short loc_C1
.text:0000005E ; ---------------------------------------------------------------------------
.text:0000005E
.text:0000005E loc_5E:				       ; CODE XREF: _DisposeStack+8j
.text:0000005E					       ; _DisposeStack:loc_BFj
.text:0000005E		       mov     eax, [ebp+arg_0]
.text:00000061		       cmp     dword ptr [eax+4], 0
.text:00000065		       jz      short loc_C1
.text:00000067		       mov     ecx, [ebp+arg_0]
.text:0000006A		       push    ecx
.text:0000006B		       call    _IsEmpty
.text:00000070		       add     esp, 4
.text:00000073		       test    eax, eax
.text:00000075		       jz      short loc_9B
.text:00000077		       push    offset $SG3534  ; "Empty	stack"
.text:0000007C		       push    offset $SG3535  ; "%s\n"
.text:00000081		       call    ___iob_func
.text:00000086		       add     eax, 40h	; '@'
.text:00000089		       push    eax	       ; FILE *
.text:0000008A		       call    _fprintf
.text:0000008F		       add     esp, 0Ch
.text:00000092		       push    1	       ; int
.text:00000094		       call    _exit
.text:00000099 ; ---------------------------------------------------------------------------
.text:00000099		       jmp     short loc_BF
.text:0000009B ; ---------------------------------------------------------------------------
.text:0000009B
.text:0000009B loc_9B:				       ; CODE XREF: _DisposeStack+45j
.text:0000009B		       mov     edx, [ebp+arg_0]
.text:0000009E		       mov     eax, [edx+4]
.text:000000A1		       mov     [ebp+var_4], eax
.text:000000A4		       mov     ecx, [ebp+arg_0]
.text:000000A7		       mov     edx, [ecx+4]
.text:000000AA		       mov     eax, [ebp+arg_0]
.text:000000AD		       mov     ecx, [edx+4]
.text:000000B0		       mov     [eax+4],	ecx
.text:000000B3		       mov     edx, [ebp+var_4]
.text:000000B6		       push    edx	       ; void *
.text:000000B7		       call    _free
.text:000000BC		       add     esp, 4
.text:000000BF
.text:000000BF loc_BF:				       ; CODE XREF: _DisposeStack+69j
.text:000000BF		       jmp     short loc_5E
.text:000000C1 ; ---------------------------------------------------------------------------
.text:000000C1
.text:000000C1 loc_C1:				       ; CODE XREF: _DisposeStack+2Cj
.text:000000C1					       ; _DisposeStack+35j
.text:000000C1		       mov     eax, [ebp+arg_0]
.text:000000C4		       push    eax	       ; void *
.text:000000C5		       call    _free
.text:000000CA		       add     esp, 4
.text:000000CD		       mov     esp, ebp
.text:000000CF		       pop     ebp
.text:000000D0		       retn
.text:000000D0 _DisposeStack   endp
.text:000000D0
.text:000000D0 _text	       ends
.text:000000D0
UNDEF:000000E0 ; ===========================================================================
UNDEF:000000E0
UNDEF:000000E0 ; Segment type: Externs
UNDEF:000000E0 ; UNDEF
UNDEF:000000E0 ; void __cdecl free(void	*)
UNDEF:000000E0		       extrn _free:near	       ; CODE XREF: _DisposeStack+87p
UNDEF:000000E0					       ; _DisposeStack+95p
UNDEF:000000E4		       extrn _IsEmpty:near     ; CODE XREF: _DisposeStack+3Bp
UNDEF:000000E8 ; void __cdecl exit(int)
UNDEF:000000E8		       extrn _exit:near	       ; CODE XREF: _DisposeStack+27p
UNDEF:000000E8					       ; _DisposeStack+64p
UNDEF:000000EC ; int fprintf(FILE *, const char	*, ...)
UNDEF:000000EC		       extrn _fprintf:near     ; CODE XREF: _DisposeStack+1Dp
UNDEF:000000EC					       ; _DisposeStack+5Ap
UNDEF:000000F0		       extrn ___iob_func:near  ; CODE XREF: _DisposeStack+14p
UNDEF:000000F0					       ; _DisposeStack+51p
UNDEF:000000F0
UNDEF:000000F0
UNDEF:000000F0		       end
