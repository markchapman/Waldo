.data:00000000 ;
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ; |   This file has been	generated by The Interactive Disassembler (IDA)	   |
.data:00000000 ; |	  Copyright (c)	2009 by	Hex-Rays, <support@hex-rays.com>	   |
.data:00000000 ; |			License	info: 48-313D-7374-F1			   |
.data:00000000 ; |   Aditya Thakur, University of Wisconsin/Computer Sciences Department   |
.data:00000000 ; +-------------------------------------------------------------------------+
.data:00000000 ;
.data:00000000 ; Input MD5   : E72E00198A0AF485DDCCB12ACCE3DA83
.data:00000000
.data:00000000 ; File Name   : C:\aditya\work\waldo\tests\sll-makeempty.obj
.data:00000000 ; Format	     : COFF (X386MAGIC)
.data:00000000 ; includelib "LIBCMT"
.data:00000000 ; includelib "OLDNAMES""
.data:00000000
.data:00000000		       .686p
.data:00000000		       .mmx
.data:00000000		       .model flat
.data:00000000 .intel_syntax noprefix
.data:00000000
.data:00000000 ; ===========================================================================
.data:00000000
.data:00000000 ; Segment type: Pure data
.data:00000000 ; Segment permissions: Read/Write
.data:00000000 _data	       segment dword public 'DATA' use32
.data:00000000		       assume cs:_data
.data:00000000 $SG3555	       db 'Out of memory!',0   ; DATA XREF: _MakeEmpty+28o
.data:0000000F		       align 10h
.data:00000010 ; char $SG3556[]
.data:00000010 $SG3556	       db '%s',0Ah,0           ; DATA XREF: _MakeEmpty+2Do
.data:00000010 _data	       ends
.data:00000010
.text:00000014 ; ===========================================================================
.text:00000014
.text:00000014 ; Segment type: Pure code
.text:00000014 ; Segment permissions: Read/Execute
.text:00000014 _text	       segment para public 'CODE' use32
.text:00000014		       assume cs:_text
.text:00000014		       ;org 14h
.text:00000014		       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:00000014
.text:00000014 ; =============== S U B R O U T I N E =======================================
.text:00000014
.text:00000014 ; Attributes: bp-based frame
.text:00000014
.text:00000014		       public _MakeEmpty
.text:00000014 _MakeEmpty      proc near
.text:00000014
.text:00000014 arg_0	       = dword ptr  8
.text:00000014
.text:00000014		       push    ebp
.text:00000015		       mov     ebp, esp
.text:00000017		       cmp     [ebp+arg_0], 0
.text:0000001B		       jz      short loc_29
.text:0000001D		       mov     eax, [ebp+arg_0]
.text:00000020		       push    eax
.text:00000021		       call    _DeleteList
.text:00000026		       add     esp, 4
.text:00000029
.text:00000029 loc_29:				       ; CODE XREF: _MakeEmpty+7j
.text:00000029		       push    8	       ; size_t
.text:0000002B		       call    _malloc
.text:00000030		       add     esp, 4
.text:00000033		       mov     [ebp+arg_0], eax
.text:00000036		       cmp     [ebp+arg_0], 0
.text:0000003A		       jnz     short loc_5E
.text:0000003C		       push    offset $SG3555  ; "Out of memory!"
.text:00000041		       push    offset $SG3556  ; "%s\n"
.text:00000046		       call    ___iob_func
.text:0000004B		       add     eax, 40h	; '@'
.text:0000004E		       push    eax	       ; FILE *
.text:0000004F		       call    _fprintf
.text:00000054		       add     esp, 0Ch
.text:00000057		       push    1	       ; int
.text:00000059		       call    _exit
.text:0000005E ; ---------------------------------------------------------------------------
.text:0000005E
.text:0000005E loc_5E:				       ; CODE XREF: _MakeEmpty+26j
.text:0000005E		       mov     ecx, [ebp+arg_0]
.text:00000061		       mov     dword ptr [ecx+4], 0
.text:00000068		       mov     eax, [ebp+arg_0]
.text:0000006B		       pop     ebp
.text:0000006C		       retn
.text:0000006C _MakeEmpty      endp
.text:0000006C
.text:0000006C ; ---------------------------------------------------------------------------
.text:0000006D		       db 7 dup(0CCh)
.text:00000074
.text:00000074 ; =============== S U B R O U T I N E =======================================
.text:00000074
.text:00000074 ; Attributes: bp-based frame
.text:00000074
.text:00000074		       public _DeleteList
.text:00000074 _DeleteList     proc near	       ; CODE XREF: _MakeEmpty+Dp
.text:00000074
.text:00000074 var_8	       = dword ptr -8
.text:00000074 var_4	       = dword ptr -4
.text:00000074 arg_0	       = dword ptr  8
.text:00000074
.text:00000074		       push    ebp
.text:00000075		       mov     ebp, esp
.text:00000077		       sub     esp, 8
.text:0000007A		       mov     eax, [ebp+arg_0]
.text:0000007D		       mov     ecx, [eax+4]
.text:00000080		       mov     [ebp+var_4], ecx
.text:00000083		       mov     edx, [ebp+arg_0]
.text:00000086		       mov     dword ptr [edx+4], 0
.text:0000008D
.text:0000008D loc_8D:				       ; CODE XREF: _DeleteList+3Aj
.text:0000008D		       cmp     [ebp+var_4], 0
.text:00000091		       jz      short loc_B0
.text:00000093		       mov     eax, [ebp+var_4]
.text:00000096		       mov     ecx, [eax+4]
.text:00000099		       mov     [ebp+var_8], ecx
.text:0000009C		       mov     edx, [ebp+var_4]
.text:0000009F		       push    edx	       ; void *
.text:000000A0		       call    _free
.text:000000A5		       add     esp, 4
.text:000000A8		       mov     eax, [ebp+var_8]
.text:000000AB		       mov     [ebp+var_4], eax
.text:000000AE		       jmp     short loc_8D
.text:000000B0 ; ---------------------------------------------------------------------------
.text:000000B0
.text:000000B0 loc_B0:				       ; CODE XREF: _DeleteList+1Dj
.text:000000B0		       mov     esp, ebp
.text:000000B2		       pop     ebp
.text:000000B3		       retn
.text:000000B3 _DeleteList     endp
.text:000000B3
.text:000000B3 _text	       ends
.text:000000B3
UNDEF:000000C0 ; ===========================================================================
UNDEF:000000C0
UNDEF:000000C0 ; Segment type: Externs
UNDEF:000000C0 ; UNDEF
UNDEF:000000C0 ; void __cdecl exit(int)
UNDEF:000000C0		       extrn _exit:near	       ; CODE XREF: _MakeEmpty+45p
UNDEF:000000C4 ; int fprintf(FILE *, const char	*, ...)
UNDEF:000000C4		       extrn _fprintf:near     ; CODE XREF: _MakeEmpty+3Bp
UNDEF:000000C8		       extrn ___iob_func:near  ; CODE XREF: _MakeEmpty+32p
UNDEF:000000CC ; void *__cdecl malloc(size_t)
UNDEF:000000CC		       extrn _malloc:near      ; CODE XREF: _MakeEmpty+17p
UNDEF:000000D0 ; void __cdecl free(void	*)
UNDEF:000000D0		       extrn _free:near	       ; CODE XREF: _DeleteList+2Cp
UNDEF:000000D0
UNDEF:000000D0
UNDEF:000000D0		       end
